package cifcode;

import static cifcode.AlgVars.*;
import static cifcode.Constants.*;
import static cifcode.Derivatives.*;
import static cifcode.Spec.MONITOR_EDGE;
import static cifcode.Spec.SPEC;
import static nl.tue.app.framework.output.OutputProvider.warn;
import static nl.tue.cif.v3x0x0.simulator.runtime.CifSimulatorMath.*;
import static nl.tue.cif.v3x0x0.simulator.runtime.io.RuntimeValueToString.runtimeToString;
import static nl.tue.common.java.ArrayUtils.array;
import static nl.tue.common.java.Lists.list;
import static nl.tue.common.java.Lists.listc;
import static nl.tue.common.java.Maps.mapc;
import static nl.tue.common.java.Sets.set;
import static nl.tue.common.java.Strings.fmt;

import java.util.*;
import java.util.Map.Entry;

import nl.tue.app.framework.exceptions.InputOutputException;
import nl.tue.app.framework.exceptions.UnsupportedException;
import nl.tue.cif.v3x0x0.simulator.input.*;
import nl.tue.cif.v3x0x0.simulator.output.print.*;
import nl.tue.cif.v3x0x0.simulator.output.svgviz.*;
import nl.tue.cif.v3x0x0.simulator.runtime.*;
import nl.tue.cif.v3x0x0.simulator.runtime.distributions.*;
import nl.tue.cif.v3x0x0.simulator.runtime.io.*;
import nl.tue.cif.v3x0x0.simulator.runtime.meta.*;
import nl.tue.cif.v3x0x0.simulator.runtime.model.*;
import nl.tue.cif.v3x0x0.simulator.runtime.ode.*;
import nl.tue.cif.v3x0x0.simulator.runtime.transitions.*;
import nl.tue.common.java.Assert;
import nl.tue.common.java.Lists;
import nl.tue.common.java.Sets;
import nl.tue.common.svg.SvgUtils;
import nl.tue.common.svg.SvgUtils;

import org.apache.commons.lang.StringUtils;
import org.w3c.dom.Element;
import org.w3c.dom.Text;
import org.w3c.dom.svg.SVGStylable;

/** CIF/SVG mappings. */
public final class CifSvg0 extends RuntimeCifSvgDecls {
    public static final Map<String, Integer> ID_TO_INPUT_IDX;

    static {
        ID_TO_INPUT_IDX = mapc(291);
        ID_TO_INPUT_IDX.put("test_sos_rb", 0);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_calamiteit_rechter_buis", 1);
        ID_TO_INPUT_IDX.put("pop_up_bevestigen_calamiteit_knop_ok_rechter_buis", 2);
        ID_TO_INPUT_IDX.put("pop_up_bevestigen_calamiteit_knop_afbreken_rechter_buis", 3);
        ID_TO_INPUT_IDX.put("Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis", 4);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_operationeel_rechter_buis", 5);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_evacuatie_rechter_buis", 6);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_calamiteit_rechter_buis", 7);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_herstel_rechter_buis", 8);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_onderhoud_rechter_buis", 9);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_vri_rechter_buis", 10);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_vri_drop_down_rechter_buis", 11);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_ingedrukt_vri_drop_down_rechter_buis", 12);
        ID_TO_INPUT_IDX.put("primaire_bediening_drop_down_vri_rood_rechter_buis", 13);
        ID_TO_INPUT_IDX.put("primaire_bediening_drop_down_vri_uitschakelen_rechter_buis", 14);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_buis_sluiten_rechter_buis", 15);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_buis_openen_rechter_buis", 16);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_camera_links_rechter_buis", 17);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_camera_rechts_rechter_buis", 18);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_calamiteit_linker_buis", 19);
        ID_TO_INPUT_IDX.put("pop_up_bevestigen_calamiteit_knop_ok_linker_buis", 20);
        ID_TO_INPUT_IDX.put("pop_up_bevestigen_calamiteit_knop_afbreken_linker_buis", 21);
        ID_TO_INPUT_IDX.put("Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis", 22);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_operationeel_linker_buis", 23);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_evacuatie_linker_buis", 24);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_calamiteit_linker_buis", 25);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_herstel_linker_buis", 26);
        ID_TO_INPUT_IDX.put("drop_down_menu_stand_buis_onderhoud_linker_buis", 27);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_vri_linker_buis", 28);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_vri_drop_down_linker_buis", 29);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_ingedrukt_vri_drop_down_linker_buis", 30);
        ID_TO_INPUT_IDX.put("primaire_bediening_drop_down_vri_rood_linker_buis", 31);
        ID_TO_INPUT_IDX.put("primaire_bediening_drop_down_vri_uitschakelen_linker_buis", 32);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_buis_sluiten_linker_buis", 33);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_buis_openen_linker_buis", 34);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_camera_rechts_linker_buis", 35);
        ID_TO_INPUT_IDX.put("knoppen_primaire_bediening_normaal_camera_links_linker_buis", 36);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_1", 37);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_2", 38);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_3", 39);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_4", 40);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_5", 41);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_6", 42);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_7", 43);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_8", 44);
        ID_TO_INPUT_IDX.put("keuze_sectie_voor_detail_plattegrond_sectie_9", 45);
        ID_TO_INPUT_IDX.put("inactive_tab_systemen_en_detecties_rechter_buis", 46);
        ID_TO_INPUT_IDX.put("inactive_tab_systemen_en_detecties_linker_buis", 47);
        ID_TO_INPUT_IDX.put("active_tab_systemen_en_detecties_rechter_buis", 48);
        ID_TO_INPUT_IDX.put("active_tab_systemen_en_detecties_linker_buis", 49);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_buis_rechter_buis", 50);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_buis_rechter_buis", 51);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_vluchtroute_rechter_buis", 52);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis", 53);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_tunnel_rechter_buis", 54);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_tunnel_rechter_buis", 55);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_verkeer_rechter_buis", 56);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_verkeer_rechter_buis", 57);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_detecties_rechter_buis", 58);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_detecties_rechter_buis", 59);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_overig_rechter_buis", 60);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_overig_rechter_buis", 61);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_buis_linker_buis", 62);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_buis_linker_buis", 63);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_vluchtroute_linker_buis", 64);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis", 65);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_tunnel_linker_buis", 66);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_tunnel_linker_buis", 67);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_verkeer_linker_buis", 68);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_verkeer_linker_buis", 69);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_detecties_linker_buis", 70);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_detecties_linker_buis", 71);
        ID_TO_INPUT_IDX.put("Drop_down_menu_open_pijltje_overig_linker_buis", 72);
        ID_TO_INPUT_IDX.put("Drop_down_menu_dicht_pijltje_overig_linker_buis", 73);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis", 74);
        ID_TO_INPUT_IDX.put("Langsventilatie_handmatig_knop_rechter_buis", 75);
        ID_TO_INPUT_IDX.put("Langsventilatie_auto_knop_rechter_buis", 76);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis", 77);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand0_rechter_buis", 78);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand125_rechter_buis", 79);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand25_rechter_buis", 80);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand375_rechter_buis", 81);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand50_rechter_buis", 82);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand625_rechter_buis", 83);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand75_rechter_buis", 84);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand875_rechter_buis", 85);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand100_rechter_buis", 86);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis", 87);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_rechter_buis", 88);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_rechter_buis", 89);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis", 90);
        ID_TO_INPUT_IDX.put("verlichting_handmatig_knop_rechter_buis", 91);
        ID_TO_INPUT_IDX.put("verlichting_auto_knop_rechter_buis", 92);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis", 93);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand0_rechter_buis", 94);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand125_rechter_buis", 95);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand25_rechter_buis", 96);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand375_rechter_buis", 97);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand50_rechter_buis", 98);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand625_rechter_buis", 99);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand75_rechter_buis", 100);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand875_rechter_buis", 101);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand100_rechter_buis", 102);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis", 103);
        ID_TO_INPUT_IDX.put("geluidsbakens_handmatig_knop_rechter_buis", 104);
        ID_TO_INPUT_IDX.put("geluidsbakens_auto_knop_rechter_buis", 105);
        ID_TO_INPUT_IDX.put("contourverlichting_handmatig_knop_rechter_buis", 106);
        ID_TO_INPUT_IDX.put("contourverlichting_auto_knop_rechter_buis", 107);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis", 108);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_rechter_buis", 109);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_rechter_buis", 110);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis", 111);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_rechter_buis", 112);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_rechter_buis", 113);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis", 114);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis", 115);
        ID_TO_INPUT_IDX.put("dynamische_vluchtroute_handmatig_knop_rechter_buis", 116);
        ID_TO_INPUT_IDX.put("dynamische_vluchtroute_auto_knop_rechter_buis", 117);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis", 118);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_rechter_buis", 119);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_rechter_buis", 120);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_rechter_buis", 121);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis", 122);
        ID_TO_INPUT_IDX.put("overdruk_veilige_ruimte_handmatig_knop_rechter_buis", 123);
        ID_TO_INPUT_IDX.put("overdruk_veilige_ruimte_auto_knop_rechter_buis", 124);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis", 125);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_rechter_buis", 126);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_rechter_buis", 127);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_rechter_buis", 128);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Licht_rechter_buis", 129);
        ID_TO_INPUT_IDX.put("verlichting_veilige_ruimte_handmatig_knop_rechter_buis", 130);
        ID_TO_INPUT_IDX.put("verlichting_veilige_ruimte_auto_knop_rechter_buis", 131);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis", 132);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_rechter_buis", 133);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_rechter_buis", 134);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis", 135);
        ID_TO_INPUT_IDX.put("bluswatervoorziening_handmatig_knop_rechter_buis", 136);
        ID_TO_INPUT_IDX.put("bluswatervoorziening_auto_knop_rechter_buis", 137);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis", 138);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_regime_bewaken_rechter_buis", 139);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_regime_blussen_rechter_buis", 140);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis", 141);
        ID_TO_INPUT_IDX.put("midden_pomp_kelder_handmatig_knop_rechter_buis", 142);
        ID_TO_INPUT_IDX.put("midden_pomp_kelder_auto_knop_rechter_buis", 143);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis", 144);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_rechter_buis", 145);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_rechter_buis", 146);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_rechter_buis", 147);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_1_handmatig_knop_rechter_buis", 148);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_1_auto_knop_rechter_buis", 149);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis", 150);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_rechter_buis", 151);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_rechter_buis", 152);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_rechter_buis", 153);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_2_handmatig_knop_rechter_buis", 154);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_2_auto_knop_rechter_buis", 155);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis", 156);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_rechter_buis", 157);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_rechter_buis", 158);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_rechter_buis", 159);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis", 160);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_verkeerslichten_handmatig_knop_rechter_buis", 161);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_verkeerslichten_auto_knop_rechter_buis", 162);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_afsluitbomen_handmatig_knop_rechter_buis", 163);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_afsluitbomen_auto_knop_rechter_buis", 164);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_rechter_buis", 165);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_rechter_buis", 166);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_rood_alle_verkeerslichten_rechter_buis", 167);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_openen_alle_afsluitbomen_rechter_buis", 168);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_stop_alle_afsluitbomen_rechter_buis", 169);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_sluiten_alle_afsluitbomen_rechter_buis", 170);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_SOS_rechter_buis", 171);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis", 172);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Deur_rechter_buis", 173);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis", 174);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis", 175);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis", 176);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis", 177);
        ID_TO_INPUT_IDX.put("Langsventilatie_handmatig_knop_linker_buis", 178);
        ID_TO_INPUT_IDX.put("Langsventilatie_auto_knop_linker_buis", 179);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis", 180);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand0_linker_buis", 181);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand125_linker_buis", 182);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand25_linker_buis", 183);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand375_linker_buis", 184);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand50_linker_buis", 185);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand625_linker_buis", 186);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand75_linker_buis", 187);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand875_linker_buis", 188);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand100_linker_buis", 189);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis", 190);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_linker_buis", 191);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_linker_buis", 192);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_verlichting_linker_buis", 193);
        ID_TO_INPUT_IDX.put("verlichting_handmatig_knop_linker_buis", 194);
        ID_TO_INPUT_IDX.put("verlichting_auto_knop_linker_buis", 195);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis", 196);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand0_linker_buis", 197);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand125_linker_buis", 198);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand25_linker_buis", 199);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand375_linker_buis", 200);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand50_linker_buis", 201);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand625_linker_buis", 202);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand75_linker_buis", 203);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand875_linker_buis", 204);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand100_linker_buis", 205);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis", 206);
        ID_TO_INPUT_IDX.put("geluidsbakens_handmatig_knop_linker_buis", 207);
        ID_TO_INPUT_IDX.put("geluidsbakens_auto_knop_linker_buis", 208);
        ID_TO_INPUT_IDX.put("contourverlichting_handmatig_knop_linker_buis", 209);
        ID_TO_INPUT_IDX.put("contourverlichting_auto_knop_linker_buis", 210);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis", 211);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_linker_buis", 212);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_linker_buis", 213);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis", 214);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_linker_buis", 215);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_linker_buis", 216);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis", 217);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis", 218);
        ID_TO_INPUT_IDX.put("dynamische_vluchtroute_handmatig_knop_linker_buis", 219);
        ID_TO_INPUT_IDX.put("dynamische_vluchtroute_auto_knop_linker_buis", 220);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis", 221);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_linker_buis", 222);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_linker_buis", 223);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_linker_buis", 224);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis", 225);
        ID_TO_INPUT_IDX.put("overdruk_veilige_ruimte_handmatig_knop_linker_buis", 226);
        ID_TO_INPUT_IDX.put("overdruk_veilige_ruimte_auto_knop_linker_buis", 227);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis", 228);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_linker_buis", 229);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_linker_buis", 230);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_linker_buis", 231);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Licht_linker_buis", 232);
        ID_TO_INPUT_IDX.put("verlichting_veilige_ruimte_handmatig_knop_linker_buis", 233);
        ID_TO_INPUT_IDX.put("verlichting_veilige_ruimte_auto_knop_linker_buis", 234);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis", 235);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_linker_buis", 236);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_linker_buis", 237);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis", 238);
        ID_TO_INPUT_IDX.put("bluswatervoorziening_handmatig_knop_linker_buis", 239);
        ID_TO_INPUT_IDX.put("bluswatervoorziening_auto_knop_linker_buis", 240);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis", 241);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_regime_bewaken_linker_buis", 242);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_regime_blussen_linker_buis", 243);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis", 244);
        ID_TO_INPUT_IDX.put("midden_pomp_kelder_handmatig_knop_linker_buis", 245);
        ID_TO_INPUT_IDX.put("midden_pomp_kelder_auto_knop_linker_buis", 246);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis", 247);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_linker_buis", 248);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_linker_buis", 249);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_linker_buis", 250);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_1_handmatig_knop_linker_buis", 251);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_1_auto_knop_linker_buis", 252);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis", 253);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_linker_buis", 254);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_linker_buis", 255);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_linker_buis", 256);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_2_handmatig_knop_linker_buis", 257);
        ID_TO_INPUT_IDX.put("hoofd_pomp_kelder_2_auto_knop_linker_buis", 258);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis", 259);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_linker_buis", 260);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_linker_buis", 261);
        ID_TO_INPUT_IDX.put("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_linker_buis", 262);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis", 263);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_verkeerslichten_handmatig_knop_linker_buis", 264);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_verkeerslichten_auto_knop_linker_buis", 265);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_afsluitbomen_handmatig_knop_linker_buis", 266);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_afsluitbomen_auto_knop_linker_buis", 267);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_linker_buis", 268);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_linker_buis", 269);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_rood_alle_verkeerslichten_linker_buis", 270);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_openen_alle_afsluitbomen_linker_buis", 271);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_stop_alle_afsluitbomen_linker_buis", 272);
        ID_TO_INPUT_IDX.put("VRI_en_afsluitboom_sluiten_alle_afsluitbomen_linker_buis", 273);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_SOS_linker_buis", 274);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis", 275);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Deur_linker_buis", 276);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Blusser_linker_buis", 277);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Haspel_linker_buis", 278);
        ID_TO_INPUT_IDX.put("blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis", 279);
        ID_TO_INPUT_IDX.put("tab_detailplattegrond_inactief", 280);
        ID_TO_INPUT_IDX.put("tab_meldingen_inactief", 281);
        ID_TO_INPUT_IDX.put("knoppen_meldingen_normaal_melding_scherm_open_klappen", 282);
        ID_TO_INPUT_IDX.put("knoppen_meldingen_ingedrukt_melding_scherm_open_klappen", 283);
        ID_TO_INPUT_IDX.put("blok_meldingen_sos_rechter_buis_onbevestigd", 284);
        ID_TO_INPUT_IDX.put("knoppen_meldingen_normaal_bevestig_melding", 285);
        ID_TO_INPUT_IDX.put("image13842", 286);
        ID_TO_INPUT_IDX.put("knoppen_meldingen_normaal_toon_in_detail_plattegrond", 287);
        ID_TO_INPUT_IDX.put("knoppen_meldingen_normaal_ga_naar_bijbehorende_camera", 288);
        ID_TO_INPUT_IDX.put("detail_plattegrond_knop_rechts", 289);
        ID_TO_INPUT_IDX.put("detail_plattegrond_knop_links", 290);
    }

    private Element outElem0;
    private SVGStylable outStyle0;

    private Element outElem1;
    private Text outText1;

    private Element outElem2;
    private SVGStylable outStyle2;

    private Element outElem3;
    private SVGStylable outStyle3;

    private Element outElem4;
    private SVGStylable outStyle4;

    private Element outElem5;
    private SVGStylable outStyle5;

    private Element outElem6;
    private SVGStylable outStyle6;

    private Element outElem7;
    private SVGStylable outStyle7;

    private Element outElem8;
    private SVGStylable outStyle8;

    private Element outElem9;
    private SVGStylable outStyle9;

    private Element outElem10;
    private SVGStylable outStyle10;

    private Element outElem11;
    private SVGStylable outStyle11;

    private Element outElem12;
    private SVGStylable outStyle12;

    private Element outElem13;
    private SVGStylable outStyle13;

    private Element outElem14;
    private SVGStylable outStyle14;

    private Element outElem15;
    private Text outText15;

    private Element outElem16;
    private SVGStylable outStyle16;

    private Element outElem17;
    private SVGStylable outStyle17;

    private Element outElem18;
    private Text outText18;

    private Element outElem19;
    private SVGStylable outStyle19;

    private Element outElem20;
    private SVGStylable outStyle20;

    private Element outElem21;
    private SVGStylable outStyle21;

    private Element outElem22;
    private SVGStylable outStyle22;

    private Element outElem23;
    private SVGStylable outStyle23;

    private Element outElem24;
    private SVGStylable outStyle24;

    private Element outElem25;
    private SVGStylable outStyle25;

    private Element outElem26;
    private SVGStylable outStyle26;

    private Element outElem27;
    private SVGStylable outStyle27;

    private Element outElem28;
    private SVGStylable outStyle28;

    private Element outElem29;
    private SVGStylable outStyle29;

    private Element outElem30;
    private SVGStylable outStyle30;

    private Element outElem31;
    private SVGStylable outStyle31;

    private Element outElem32;
    private SVGStylable outStyle32;

    private Element outElem33;
    private SVGStylable outStyle33;

    private Element outElem34;
    private SVGStylable outStyle34;

    private Element outElem35;
    private SVGStylable outStyle35;

    private Element outElem36;
    private SVGStylable outStyle36;

    private Element outElem37;
    private SVGStylable outStyle37;

    private Element outElem38;
    private SVGStylable outStyle38;

    private Element outElem39;
    private SVGStylable outStyle39;

    private Element outElem40;
    private SVGStylable outStyle40;

    private Element outElem41;
    private SVGStylable outStyle41;

    private Element outElem42;
    private SVGStylable outStyle42;

    private Element outElem43;
    private SVGStylable outStyle43;

    private Element outElem44;
    private SVGStylable outStyle44;

    private Element outElem45;
    private Text outText45;

    private Element outElem46;
    private SVGStylable outStyle46;

    private Element outElem47;
    private SVGStylable outStyle47;

    private Element outElem48;
    private SVGStylable outStyle48;

    private Element outElem49;
    private SVGStylable outStyle49;

    private Element outElem50;
    private SVGStylable outStyle50;

    private Element outElem51;
    private SVGStylable outStyle51;

    private Element outElem52;
    private SVGStylable outStyle52;

    private Element outElem53;
    private SVGStylable outStyle53;

    private Element outElem54;
    private SVGStylable outStyle54;

    private Element outElem55;
    private SVGStylable outStyle55;

    private Element outElem56;
    private SVGStylable outStyle56;

    private Element outElem57;
    private SVGStylable outStyle57;

    private Element outElem58;
    private SVGStylable outStyle58;

    private Element outElem59;
    private SVGStylable outStyle59;

    private Element outElem60;
    private SVGStylable outStyle60;

    private Element outElem61;
    private SVGStylable outStyle61;

    private Element outElem62;
    private Text outText62;

    private Element outElem63;
    private SVGStylable outStyle63;

    private Element outElem64;
    private SVGStylable outStyle64;

    private Element outElem65;
    private Text outText65;

    private Element outElem66;
    private SVGStylable outStyle66;

    private Element outElem67;
    private SVGStylable outStyle67;

    private Element outElem68;
    private SVGStylable outStyle68;

    private Element outElem69;
    private SVGStylable outStyle69;

    private Element outElem70;
    private SVGStylable outStyle70;

    private Element outElem71;
    private SVGStylable outStyle71;

    private Element outElem72;
    private SVGStylable outStyle72;

    private Element outElem73;
    private SVGStylable outStyle73;

    private Element outElem74;
    private SVGStylable outStyle74;

    private Element outElem75;
    private SVGStylable outStyle75;

    private Element outElem76;
    private SVGStylable outStyle76;

    private Element outElem77;
    private SVGStylable outStyle77;

    private Element outElem78;
    private SVGStylable outStyle78;

    private Element outElem79;
    private SVGStylable outStyle79;

    private Element outElem80;
    private SVGStylable outStyle80;

    private Element outElem81;
    private SVGStylable outStyle81;

    private Element outElem82;
    private SVGStylable outStyle82;

    private Element outElem83;
    private SVGStylable outStyle83;

    private Element outElem84;
    private SVGStylable outStyle84;

    private Element outElem85;
    private SVGStylable outStyle85;

    private Element outElem86;
    private SVGStylable outStyle86;

    private Element outElem87;
    private SVGStylable outStyle87;

    private Element outElem88;
    private SVGStylable outStyle88;

    private Element outElem89;
    private SVGStylable outStyle89;

    private Element outElem90;
    private SVGStylable outStyle90;

    private Element outElem91;
    private SVGStylable outStyle91;

    private Element outElem92;
    private Text outText92;

    private Element outElem93;
    private SVGStylable outStyle93;

    private Element outElem94;
    private SVGStylable outStyle94;

    private Element outElem95;
    private SVGStylable outStyle95;

    private Element outElem96;
    private SVGStylable outStyle96;

    private Element outElem97;
    private Text outText97;

    private Element outElem98;
    private SVGStylable outStyle98;

    private Element outElem99;
    private SVGStylable outStyle99;

    private Element outElem100;
    private SVGStylable outStyle100;

    private Element outElem101;
    private SVGStylable outStyle101;

    private Element outElem102;
    private SVGStylable outStyle102;

    private Element outElem103;
    private SVGStylable outStyle103;

    private Element outElem104;
    private SVGStylable outStyle104;

    private Element outElem105;
    private SVGStylable outStyle105;

    private Element outElem106;
    private SVGStylable outStyle106;

    private Element outElem107;
    private SVGStylable outStyle107;

    private Element outElem108;
    private SVGStylable outStyle108;

    private Element outElem109;
    private SVGStylable outStyle109;

    private Element outElem110;
    private SVGStylable outStyle110;

    private Element outElem111;
    private SVGStylable outStyle111;

    private Element outElem112;
    private SVGStylable outStyle112;

    private Element outElem113;
    private SVGStylable outStyle113;

    private Element outElem114;
    private SVGStylable outStyle114;

    private Element outElem115;
    private SVGStylable outStyle115;

    private Element outElem116;
    private SVGStylable outStyle116;

    private Element outElem117;
    private SVGStylable outStyle117;

    private Element outElem118;
    private SVGStylable outStyle118;

    private Element outElem119;
    private Text outText119;

    private Element outElem120;
    private SVGStylable outStyle120;

    private Element outElem121;
    private SVGStylable outStyle121;

    private Element outElem122;
    private SVGStylable outStyle122;

    private Element outElem123;
    private SVGStylable outStyle123;

    private Element outElem124;
    private SVGStylable outStyle124;

    private Element outElem125;
    private SVGStylable outStyle125;

    private Element outElem126;
    private SVGStylable outStyle126;

    private Element outElem127;
    private SVGStylable outStyle127;

    private Element outElem128;
    private SVGStylable outStyle128;

    private Element outElem129;
    private SVGStylable outStyle129;

    private Element outElem130;
    private SVGStylable outStyle130;

    private Element outElem131;
    private SVGStylable outStyle131;

    private Element outElem132;
    private SVGStylable outStyle132;

    private Element outElem133;
    private SVGStylable outStyle133;

    private Element outElem134;
    private SVGStylable outStyle134;

    private Element outElem135;
    private SVGStylable outStyle135;

    private Element outElem136;
    private SVGStylable outStyle136;

    private Element outElem137;
    private SVGStylable outStyle137;

    private Element outElem138;
    private SVGStylable outStyle138;

    private Element outElem139;
    private SVGStylable outStyle139;

    private Element outElem140;
    private Text outText140;

    private Element outElem141;
    private Text outText141;

    private Element outElem142;
    private SVGStylable outStyle142;

    private Element outElem143;
    private SVGStylable outStyle143;

    private Element outElem144;
    private SVGStylable outStyle144;

    private Element outElem145;
    private SVGStylable outStyle145;

    private Element outElem146;
    private Text outText146;

    private Element outElem147;
    private Text outText147;

    private Element outElem148;
    private SVGStylable outStyle148;

    private Element outElem149;
    private SVGStylable outStyle149;

    private Element outElem150;
    private SVGStylable outStyle150;

    private Element outElem151;
    private SVGStylable outStyle151;

    private Element outElem152;
    private Text outText152;

    private Element outElem153;
    private Text outText153;

    private Element outElem154;
    private Text outText154;

    private Element outElem155;
    private Text outText155;

    private Element outElem156;
    private Text outText156;

    private Element outElem157;
    private Text outText157;

    private Element outElem158;
    private SVGStylable outStyle158;

    private Element outElem159;
    private SVGStylable outStyle159;

    private Element outElem160;
    private SVGStylable outStyle160;

    private Element outElem161;
    private SVGStylable outStyle161;

    private Element outElem162;
    private SVGStylable outStyle162;

    private Element outElem163;
    private SVGStylable outStyle163;

    private Element outElem164;
    private SVGStylable outStyle164;

    private Element outElem165;
    private SVGStylable outStyle165;

    private Element outElem166;
    private SVGStylable outStyle166;

    private Element outElem167;
    private SVGStylable outStyle167;

    private Element outElem168;
    private SVGStylable outStyle168;

    private Element outElem169;
    private SVGStylable outStyle169;

    private Element outElem170;
    private SVGStylable outStyle170;

    private Element outElem171;
    private SVGStylable outStyle171;

    private Element outElem172;
    private SVGStylable outStyle172;

    private Element outElem173;
    private SVGStylable outStyle173;

    private Element outElem174;
    private SVGStylable outStyle174;

    private Element outElem175;
    private SVGStylable outStyle175;

    private Element outElem176;
    private SVGStylable outStyle176;

    private Element outElem177;
    private SVGStylable outStyle177;

    private Element outElem178;
    private SVGStylable outStyle178;

    private Element outElem179;
    private SVGStylable outStyle179;

    private Element outElem180;
    private SVGStylable outStyle180;

    private Element outElem181;
    private SVGStylable outStyle181;

    private Element outElem182;
    private SVGStylable outStyle182;

    private Element outElem183;
    private SVGStylable outStyle183;

    private Element outElem184;
    private SVGStylable outStyle184;

    private Element outElem185;
    private SVGStylable outStyle185;

    private Element outElem186;
    private SVGStylable outStyle186;

    private Element outElem187;
    private SVGStylable outStyle187;

    private Element outElem188;
    private SVGStylable outStyle188;

    private Element outElem189;
    private SVGStylable outStyle189;

    private Element outElem190;
    private Text outText190;

    private Element outElem191;
    private Text outText191;

    private Element outElem192;
    private Text outText192;

    private Element outElem193;
    private Text outText193;

    private Element outElem194;
    private SVGStylable outStyle194;

    private Element outElem195;
    private SVGStylable outStyle195;

    private Element outElem196;
    private SVGStylable outStyle196;

    private Element outElem197;
    private SVGStylable outStyle197;

    private Element outElem198;
    private SVGStylable outStyle198;

    private Element outElem199;
    private SVGStylable outStyle199;

    private Element outElem200;
    private SVGStylable outStyle200;

    private Element outElem201;
    private SVGStylable outStyle201;

    private Element outElem202;
    private SVGStylable outStyle202;

    private Element outElem203;
    private SVGStylable outStyle203;

    private Element outElem204;
    private SVGStylable outStyle204;

    private Element outElem205;
    private SVGStylable outStyle205;

    private Element outElem206;
    private SVGStylable outStyle206;

    private Element outElem207;
    private SVGStylable outStyle207;

    private Element outElem208;
    private Text outText208;

    private Element outElem209;
    private Text outText209;

    private Element outElem210;
    private Text outText210;

    private Element outElem211;
    private Text outText211;

    private Element outElem212;
    private Text outText212;

    private Element outElem213;
    private Text outText213;

    private Element outElem214;
    private Text outText214;

    private Element outElem215;
    private SVGStylable outStyle215;

    private Element outElem216;
    private SVGStylable outStyle216;

    private Element outElem217;
    private SVGStylable outStyle217;

    private Element outElem218;
    private SVGStylable outStyle218;

    private Element outElem219;
    private SVGStylable outStyle219;

    private Element outElem220;
    private SVGStylable outStyle220;

    private Element outElem221;
    private SVGStylable outStyle221;

    private Element outElem222;
    private SVGStylable outStyle222;

    private Element outElem223;
    private SVGStylable outStyle223;

    private Element outElem224;
    private SVGStylable outStyle224;

    private Element outElem225;
    private SVGStylable outStyle225;

    private Element outElem226;
    private SVGStylable outStyle226;

    private Element outElem227;
    private SVGStylable outStyle227;

    private Element outElem228;
    private SVGStylable outStyle228;

    private Element outElem229;
    private SVGStylable outStyle229;

    private Element outElem230;
    private SVGStylable outStyle230;

    private Element outElem231;
    private Text outText231;

    private Element outElem232;
    private Text outText232;

    private Element outElem233;
    private Text outText233;

    private Element outElem234;
    private Text outText234;

    private Element outElem235;
    private Text outText235;

    private Element outElem236;
    private Text outText236;

    private Element outElem237;
    private Text outText237;

    private Element outElem238;
    private Text outText238;

    private Element outElem239;
    private SVGStylable outStyle239;

    private Element outElem240;
    private SVGStylable outStyle240;

    private Element outElem241;
    private SVGStylable outStyle241;

    private Element outElem242;
    private SVGStylable outStyle242;

    private Element outElem243;
    private SVGStylable outStyle243;

    private Element outElem244;
    private SVGStylable outStyle244;

    private Element outElem245;
    private SVGStylable outStyle245;

    private Element outElem246;
    private SVGStylable outStyle246;

    private Element outElem247;
    private Text outText247;

    private Element outElem248;
    private Text outText248;

    private Element outElem249;
    private Text outText249;

    private Element outElem250;
    private Text outText250;

    private Element outElem251;
    private SVGStylable outStyle251;

    private Element outElem252;
    private SVGStylable outStyle252;

    private Element outElem253;
    private SVGStylable outStyle253;

    private Element outElem254;
    private SVGStylable outStyle254;

    private Element outElem255;
    private SVGStylable outStyle255;

    private Element outElem256;
    private SVGStylable outStyle256;

    private Element outElem257;
    private SVGStylable outStyle257;

    private Element outElem258;
    private SVGStylable outStyle258;

    private Element outElem259;
    private SVGStylable outStyle259;

    private Element outElem260;
    private SVGStylable outStyle260;

    private Element outElem261;
    private SVGStylable outStyle261;

    private Element outElem262;
    private SVGStylable outStyle262;

    private Element outElem263;
    private SVGStylable outStyle263;

    private Element outElem264;
    private SVGStylable outStyle264;

    private Element outElem265;
    private SVGStylable outStyle265;

    private Element outElem266;
    private SVGStylable outStyle266;

    private Element outElem267;
    private SVGStylable outStyle267;

    private Element outElem268;
    private SVGStylable outStyle268;

    private Element outElem269;
    private SVGStylable outStyle269;

    private Element outElem270;
    private SVGStylable outStyle270;

    private Element outElem271;
    private SVGStylable outStyle271;

    private Element outElem272;
    private SVGStylable outStyle272;

    private Element outElem273;
    private Text outText273;

    private Element outElem274;
    private Text outText274;

    private Element outElem275;
    private Text outText275;

    private Element outElem276;
    private Text outText276;

    private Element outElem277;
    private Text outText277;

    private Element outElem278;
    private Text outText278;

    private Element outElem279;
    private Text outText279;

    private Element outElem280;
    private Text outText280;

    private Element outElem281;
    private Text outText281;

    private Element outElem282;
    private Text outText282;

    private Element outElem283;
    private Text outText283;

    private Element outElem284;
    private SVGStylable outStyle284;

    private Element outElem285;
    private SVGStylable outStyle285;

    private Element outElem286;
    private SVGStylable outStyle286;

    private Element outElem287;
    private SVGStylable outStyle287;

    private Element outElem288;
    private SVGStylable outStyle288;

    private Element outElem289;
    private SVGStylable outStyle289;

    private Element outElem290;
    private Text outText290;

    private Element outElem291;
    private Text outText291;

    private Element outElem292;
    private Text outText292;

    private Element outElem293;
    private Text outText293;

    private Element outElem294;
    private Text outText294;

    private Element outElem295;
    private Text outText295;

    private Element outElem296;
    private Text outText296;

    private Element outElem297;
    private Text outText297;

    private Element outElem298;
    private Text outText298;

    private Element outElem299;
    private SVGStylable outStyle299;

    private Element outElem300;
    private SVGStylable outStyle300;

    private Element outElem301;
    private SVGStylable outStyle301;

    private Element outElem302;
    private SVGStylable outStyle302;

    private Element outElem303;
    private SVGStylable outStyle303;

    private Element outElem304;
    private SVGStylable outStyle304;

    private Element outElem305;
    private SVGStylable outStyle305;

    private Element outElem306;
    private SVGStylable outStyle306;

    private Element outElem307;
    private SVGStylable outStyle307;

    private Element outElem308;
    private SVGStylable outStyle308;

    private Element outElem309;
    private SVGStylable outStyle309;

    private Element outElem310;
    private SVGStylable outStyle310;

    private Element outElem311;
    private SVGStylable outStyle311;

    private Element outElem312;
    private SVGStylable outStyle312;

    private Element outElem313;
    private SVGStylable outStyle313;

    private Element outElem314;
    private SVGStylable outStyle314;

    private Element outElem315;
    private SVGStylable outStyle315;

    private Element outElem316;
    private SVGStylable outStyle316;

    private Element outElem317;
    private SVGStylable outStyle317;

    private Element outElem318;
    private SVGStylable outStyle318;

    private Element outElem319;
    private SVGStylable outStyle319;

    private Element outElem320;
    private SVGStylable outStyle320;

    private Element outElem321;
    private SVGStylable outStyle321;

    private Element outElem322;
    private SVGStylable outStyle322;

    private Element outElem323;
    private SVGStylable outStyle323;

    private Element outElem324;
    private SVGStylable outStyle324;

    private Element outElem325;
    private SVGStylable outStyle325;

    private Element outElem326;
    private SVGStylable outStyle326;

    private Element outElem327;
    private SVGStylable outStyle327;

    private Element outElem328;
    private SVGStylable outStyle328;

    private Element outElem329;
    private SVGStylable outStyle329;

    private Element outElem330;
    private SVGStylable outStyle330;

    private Element outElem331;
    private Text outText331;

    private Element outElem332;
    private Text outText332;

    private Element outElem333;
    private Text outText333;

    private Element outElem334;
    private Text outText334;

    private Element outElem335;
    private SVGStylable outStyle335;

    private Element outElem336;
    private SVGStylable outStyle336;

    private Element outElem337;
    private SVGStylable outStyle337;

    private Element outElem338;
    private SVGStylable outStyle338;

    private Element outElem339;
    private SVGStylable outStyle339;

    private Element outElem340;
    private SVGStylable outStyle340;

    private Element outElem341;
    private SVGStylable outStyle341;

    private Element outElem342;
    private SVGStylable outStyle342;

    private Element outElem343;
    private SVGStylable outStyle343;

    private Element outElem344;
    private SVGStylable outStyle344;

    private Element outElem345;
    private SVGStylable outStyle345;

    private Element outElem346;
    private SVGStylable outStyle346;

    private Element outElem347;
    private SVGStylable outStyle347;

    private Element outElem348;
    private SVGStylable outStyle348;

    private Element outElem349;
    private Text outText349;

    private Element outElem350;
    private Text outText350;

    private Element outElem351;
    private Text outText351;

    private Element outElem352;
    private Text outText352;

    private Element outElem353;
    private Text outText353;

    private Element outElem354;
    private Text outText354;

    private Element outElem355;
    private Text outText355;

    private Element outElem356;
    private SVGStylable outStyle356;

    private Element outElem357;
    private SVGStylable outStyle357;

    private Element outElem358;
    private SVGStylable outStyle358;

    private Element outElem359;
    private SVGStylable outStyle359;

    private Element outElem360;
    private SVGStylable outStyle360;

    private Element outElem361;
    private SVGStylable outStyle361;

    private Element outElem362;
    private SVGStylable outStyle362;

    private Element outElem363;
    private SVGStylable outStyle363;

    private Element outElem364;
    private SVGStylable outStyle364;

    private Element outElem365;
    private SVGStylable outStyle365;

    private Element outElem366;
    private SVGStylable outStyle366;

    private Element outElem367;
    private SVGStylable outStyle367;

    private Element outElem368;
    private SVGStylable outStyle368;

    private Element outElem369;
    private SVGStylable outStyle369;

    private Element outElem370;
    private SVGStylable outStyle370;

    private Element outElem371;
    private SVGStylable outStyle371;

    private Element outElem372;
    private Text outText372;

    private Element outElem373;
    private Text outText373;

    private Element outElem374;
    private Text outText374;

    private Element outElem375;
    private Text outText375;

    private Element outElem376;
    private Text outText376;

    private Element outElem377;
    private Text outText377;

    private Element outElem378;
    private Text outText378;

    private Element outElem379;
    private Text outText379;

    private Element outElem380;
    private SVGStylable outStyle380;

    private Element outElem381;
    private SVGStylable outStyle381;

    private Element outElem382;
    private SVGStylable outStyle382;

    private Element outElem383;
    private SVGStylable outStyle383;

    private Element outElem384;
    private SVGStylable outStyle384;

    private Element outElem385;
    private SVGStylable outStyle385;

    private Element outElem386;
    private SVGStylable outStyle386;

    private Element outElem387;
    private SVGStylable outStyle387;

    private Element outElem388;
    private Text outText388;

    private Element outElem389;
    private Text outText389;

    private Element outElem390;
    private Text outText390;

    private Element outElem391;
    private Text outText391;

    private Element outElem392;
    private SVGStylable outStyle392;

    private Element outElem393;
    private SVGStylable outStyle393;

    private Element outElem394;
    private SVGStylable outStyle394;

    private Element outElem395;
    private SVGStylable outStyle395;

    private Element outElem396;
    private SVGStylable outStyle396;

    private Element outElem397;
    private SVGStylable outStyle397;

    private Element outElem398;
    private SVGStylable outStyle398;

    private Element outElem399;
    private SVGStylable outStyle399;

    private Element outElem400;
    private SVGStylable outStyle400;

    private Element outElem401;
    private SVGStylable outStyle401;

    private Element outElem402;
    private SVGStylable outStyle402;

    private Element outElem403;
    private SVGStylable outStyle403;

    private Element outElem404;
    private SVGStylable outStyle404;

    private Element outElem405;
    private SVGStylable outStyle405;

    private Element outElem406;
    private SVGStylable outStyle406;

    private Element outElem407;
    private SVGStylable outStyle407;

    private Element outElem408;
    private SVGStylable outStyle408;

    private Element outElem409;
    private SVGStylable outStyle409;

    private Element outElem410;
    private SVGStylable outStyle410;

    private Element outElem411;
    private SVGStylable outStyle411;

    private Element outElem412;
    private SVGStylable outStyle412;

    private Element outElem413;
    private SVGStylable outStyle413;

    private Element outElem414;
    private Text outText414;

    private Element outElem415;
    private Text outText415;

    private Element outElem416;
    private Text outText416;

    private Element outElem417;
    private Text outText417;

    private Element outElem418;
    private Text outText418;

    private Element outElem419;
    private Text outText419;

    private Element outElem420;
    private Text outText420;

    private Element outElem421;
    private Text outText421;

    private Element outElem422;
    private Text outText422;

    private Element outElem423;
    private Text outText423;

    private Element outElem424;
    private Text outText424;

    private Element outElem425;
    private SVGStylable outStyle425;

    private Element outElem426;
    private SVGStylable outStyle426;

    private Element outElem427;
    private SVGStylable outStyle427;

    private Element outElem428;
    private SVGStylable outStyle428;

    private Element outElem429;
    private SVGStylable outStyle429;

    private Element outElem430;
    private SVGStylable outStyle430;

    private Element outElem431;
    private Text outText431;

    private Element outElem432;
    private Text outText432;

    private Element outElem433;
    private Text outText433;

    private Element outElem434;
    private SVGStylable outStyle434;

    private Element outElem435;
    private SVGStylable outStyle435;

    private Element outElem436;
    private SVGStylable outStyle436;

    private Element outElem437;
    private SVGStylable outStyle437;

    private Element outElem438;
    private SVGStylable outStyle438;

    private Element outElem439;
    private SVGStylable outStyle439;

    private Element outElem440;
    private SVGStylable outStyle440;

    private Element outElem441;
    private SVGStylable outStyle441;

    private Element outElem442;
    private SVGStylable outStyle442;

    private Element outElem443;
    private SVGStylable outStyle443;

    private Element outElem444;
    private SVGStylable outStyle444;

    private Element outElem445;
    private SVGStylable outStyle445;

    private Element outElem446;
    private SVGStylable outStyle446;

    private Element outElem447;
    private SVGStylable outStyle447;

    private Element outElem448;
    private SVGStylable outStyle448;

    private Element outElem449;
    private SVGStylable outStyle449;

    private Element outElem450;
    private SVGStylable outStyle450;

    private Element outElem451;
    private SVGStylable outStyle451;

    private Element outElem452;
    private SVGStylable outStyle452;

    private Element outElem453;
    private SVGStylable outStyle453;

    private Element outElem454;
    private SVGStylable outStyle454;

    private Element outElem455;
    private Text outText455;

    private Element outElem456;
    private SVGStylable outStyle456;

    private Element outElem457;
    private SVGStylable outStyle457;

    private Element outElem458;
    private Text outText458;

    private Element outElem459;
    private SVGStylable outStyle459;

    private Element outElem460;
    private SVGStylable outStyle460;

    private Element outElem461;
    private SVGStylable outStyle461;

    private Element outElem462;
    private SVGStylable outStyle462;

    private Element outElem463;
    private SVGStylable outStyle463;

    private Element outElem464;
    private SVGStylable outStyle464;

    private Element outElem465;
    private SVGStylable outStyle465;

    private Element outElem466;
    private SVGStylable outStyle466;

    private Element outElem467;
    private SVGStylable outStyle467;

    private Element outElem468;
    private SVGStylable outStyle468;

    private Element outElem469;
    private SVGStylable outStyle469;

    private Element outElem470;
    private SVGStylable outStyle470;

    private Element outElem471;
    private SVGStylable outStyle471;

    private Element outElem472;
    private SVGStylable outStyle472;

    private Element outElem473;
    private SVGStylable outStyle473;

    private Element outElem474;
    private SVGStylable outStyle474;

    private Element outElem475;
    private SVGStylable outStyle475;

    private Element outElem476;
    private Text outText476;

    private Element outElem477;
    private SVGStylable outStyle477;

    private Element outElem478;
    private SVGStylable outStyle478;

    private Element outElem479;
    private SVGStylable outStyle479;

    private Element outElem480;
    private SVGStylable outStyle480;

    private Element outElem481;
    private SVGStylable outStyle481;

    private Element outElem482;
    private SVGStylable outStyle482;

    private Element outElem483;
    private SVGStylable outStyle483;

    private Element outElem484;
    private SVGStylable outStyle484;

    private Element outElem485;
    private SVGStylable outStyle485;

    private Element outElem486;
    private SVGStylable outStyle486;

    private Element outElem487;
    private SVGStylable outStyle487;

    private Element outElem488;
    private SVGStylable outStyle488;

    private Element outElem489;
    private SVGStylable outStyle489;

    private Element outElem490;
    private SVGStylable outStyle490;

    private Element outElem491;
    private SVGStylable outStyle491;

    private Element outElem492;
    private Text outText492;

    private Element outElem493;
    private SVGStylable outStyle493;

    private Element outElem494;
    private SVGStylable outStyle494;

    private Element outElem495;
    private SVGStylable outStyle495;

    private Element outElem496;
    private SVGStylable outStyle496;

    private Element outElem497;
    private SVGStylable outStyle497;

    private Element outElem498;
    private SVGStylable outStyle498;

    private Element outElem499;
    private SVGStylable outStyle499;

    private Element outElem500;
    private Text outText500;

    private Element outElem501;
    private SVGStylable outStyle501;

    private Element outElem502;
    private SVGStylable outStyle502;

    private Element outElem503;
    private SVGStylable outStyle503;

    private Element outElem504;
    private Text outText504;

    private Element outElem505;
    private SVGStylable outStyle505;

    private Element outElem506;
    private SVGStylable outStyle506;

    private Element outElem507;
    private SVGStylable outStyle507;

    private Element outElem508;
    private SVGStylable outStyle508;

    private Element outElem509;
    private SVGStylable outStyle509;

    private Element outElem510;
    private SVGStylable outStyle510;

    private Element outElem511;
    private SVGStylable outStyle511;

    private Element outElem512;
    private SVGStylable outStyle512;

    private Element outElem513;
    private SVGStylable outStyle513;

    private Element outElem514;
    private SVGStylable outStyle514;

    private Element outElem515;
    private SVGStylable outStyle515;

    private Element outElem516;
    private SVGStylable outStyle516;

    private Element outElem517;
    private Text outText517;

    private Element outElem518;
    private SVGStylable outStyle518;

    private Element outElem519;
    private SVGStylable outStyle519;

    private Element outElem520;
    private SVGStylable outStyle520;

    private Element outElem521;
    private SVGStylable outStyle521;

    private Element outElem522;
    private SVGStylable outStyle522;

    private Element outElem523;
    private SVGStylable outStyle523;

    private Element outElem524;
    private SVGStylable outStyle524;

    private Element outElem525;
    private SVGStylable outStyle525;

    private Element outElem526;
    private SVGStylable outStyle526;

    private Element outElem527;
    private SVGStylable outStyle527;

    private Element outElem528;
    private SVGStylable outStyle528;

    private Element outElem529;
    private Text outText529;

    private Element outElem530;
    private SVGStylable outStyle530;

    private Element outElem531;
    private SVGStylable outStyle531;

    private Element outElem532;
    private SVGStylable outStyle532;

    private Element outElem533;
    private SVGStylable outStyle533;

    private Element outElem534;
    private SVGStylable outStyle534;

    private Element outElem535;
    private SVGStylable outStyle535;

    private Element outElem536;
    private SVGStylable outStyle536;

    private Element outElem537;
    private SVGStylable outStyle537;

    private Element outElem538;
    private SVGStylable outStyle538;

    private Element outElem539;
    private SVGStylable outStyle539;

    private Element outElem540;
    private Text outText540;

    private Element outElem541;
    private SVGStylable outStyle541;

    private Element outElem542;
    private SVGStylable outStyle542;

    private Element outElem543;
    private SVGStylable outStyle543;

    private Element outElem544;
    private SVGStylable outStyle544;

    private Element outElem545;
    private SVGStylable outStyle545;

    private Element outElem546;
    private SVGStylable outStyle546;

    private Element outElem547;
    private SVGStylable outStyle547;

    private Element outElem548;
    private SVGStylable outStyle548;

    private Element outElem549;
    private SVGStylable outStyle549;

    private Element outElem550;
    private SVGStylable outStyle550;

    private Element outElem551;
    private Text outText551;

    private Element outElem552;
    private Text outText552;

    private Element outElem553;
    private Text outText553;

    private Element outElem554;
    private Text outText554;

    private Element outElem555;
    private SVGStylable outStyle555;

    private Element outElem556;
    private SVGStylable outStyle556;

    private Element outElem557;
    private SVGStylable outStyle557;

    private Element outElem558;
    private SVGStylable outStyle558;

    private Element outElem559;
    private SVGStylable outStyle559;

    private Element outElem560;
    private SVGStylable outStyle560;

    private Element outElem561;
    private SVGStylable outStyle561;

    private Element outElem562;
    private SVGStylable outStyle562;

    private Element outElem563;
    private SVGStylable outStyle563;

    private Element outElem564;
    private SVGStylable outStyle564;

    private Element outElem565;
    private SVGStylable outStyle565;

    private Element outElem566;
    private Text outText566;

    private Element outElem567;
    private Text outText567;

    private Element outElem568;
    private SVGStylable outStyle568;

    private Element outElem569;
    private SVGStylable outStyle569;

    private Element outElem570;
    private SVGStylable outStyle570;

    private Element outElem571;
    private SVGStylable outStyle571;

    private Element outElem572;
    private SVGStylable outStyle572;

    private Element outElem573;
    private SVGStylable outStyle573;

    private Element outElem574;
    private SVGStylable outStyle574;

    private Element outElem575;
    private SVGStylable outStyle575;

    private Element outElem576;
    private SVGStylable outStyle576;

    private Element outElem577;
    private Text outText577;

    private Element outElem578;
    private Text outText578;

    private Element outElem579;
    private SVGStylable outStyle579;

    private Element outElem580;
    private SVGStylable outStyle580;

    private Element outElem581;
    private SVGStylable outStyle581;

    private Element outElem582;
    private SVGStylable outStyle582;

    private Element outElem583;
    private SVGStylable outStyle583;

    private Element outElem584;
    private SVGStylable outStyle584;

    private Element outElem585;
    private SVGStylable outStyle585;

    private Element outElem586;
    private SVGStylable outStyle586;

    private Element outElem587;
    private SVGStylable outStyle587;

    private Element outElem588;
    private Text outText588;

    private Element outElem589;
    private Text outText589;

    private Element outElem590;
    private SVGStylable outStyle590;

    private Element outElem591;
    private SVGStylable outStyle591;

    private Element outElem592;
    private SVGStylable outStyle592;

    private Element outElem593;
    private SVGStylable outStyle593;

    private Element outElem594;
    private SVGStylable outStyle594;

    private Element outElem595;
    private SVGStylable outStyle595;

    private Element outElem596;
    private SVGStylable outStyle596;

    private Element outElem597;
    private SVGStylable outStyle597;

    private Element outElem598;
    private SVGStylable outStyle598;

    private Element outElem599;
    private SVGStylable outStyle599;

    private Element outElem600;
    private SVGStylable outStyle600;

    private Element outElem601;
    private SVGStylable outStyle601;

    private Element outElem602;
    private SVGStylable outStyle602;

    private Element outElem603;
    private SVGStylable outStyle603;

    private Element outElem604;
    private SVGStylable outStyle604;

    private Element outElem605;
    private SVGStylable outStyle605;

    private Element outElem606;
    private Text outText606;

    private Element outElem607;
    private SVGStylable outStyle607;

    private Element outElem608;
    private SVGStylable outStyle608;

    private Element outElem609;
    private SVGStylable outStyle609;

    private Element outElem610;
    private SVGStylable outStyle610;

    private Element outElem611;
    private SVGStylable outStyle611;

    private Element outElem612;
    private SVGStylable outStyle612;

    private Element outElem613;
    private SVGStylable outStyle613;

    private Element outElem614;
    private SVGStylable outStyle614;

    private Element outElem615;
    private SVGStylable outStyle615;

    private Element outElem616;
    private SVGStylable outStyle616;

    private Element outElem617;
    private SVGStylable outStyle617;

    private Element outElem618;
    private SVGStylable outStyle618;

    private Element outElem619;
    private Text outText619;

    private Element outElem620;
    private Text outText620;

    private Element outElem621;
    private Text outText621;

    private Element outElem622;
    private Text outText622;

    private Element outElem623;
    private SVGStylable outStyle623;

    private Element outElem624;
    private SVGStylable outStyle624;

    private Element outElem625;
    private SVGStylable outStyle625;

    private Element outElem626;
    private SVGStylable outStyle626;

    private Element outElem627;
    private SVGStylable outStyle627;

    private Element outElem628;
    private SVGStylable outStyle628;

    private Element outElem629;
    private SVGStylable outStyle629;

    private Element outElem630;
    private SVGStylable outStyle630;

    private Element outElem631;
    private SVGStylable outStyle631;

    private Element outElem632;
    private SVGStylable outStyle632;

    private Element outElem633;
    private SVGStylable outStyle633;

    private Element outElem634;
    private SVGStylable outStyle634;

    private Element outElem635;
    private Text outText635;

    private Element outElem636;
    private Text outText636;

    private Element outElem637;
    private Text outText637;

    private Element outElem638;
    private Text outText638;

    private Element outElem639;
    private Text outText639;

    private Element outElem640;
    private Text outText640;

    private Element outElem641;
    private Text outText641;

    private Element outElem642;
    private SVGStylable outStyle642;

    private Element outElem643;
    private SVGStylable outStyle643;

    private Element outElem644;
    private SVGStylable outStyle644;

    private Element outElem645;
    private SVGStylable outStyle645;

    private Element outElem646;
    private SVGStylable outStyle646;

    private Element outElem647;
    private SVGStylable outStyle647;

    private Element outElem648;
    private SVGStylable outStyle648;

    private Element outElem649;
    private SVGStylable outStyle649;

    private Element outElem650;
    private SVGStylable outStyle650;

    private Element outElem651;
    private SVGStylable outStyle651;

    private Element outElem652;
    private SVGStylable outStyle652;

    private Element outElem653;
    private SVGStylable outStyle653;

    private Element outElem654;
    private SVGStylable outStyle654;

    private Element outElem655;
    private SVGStylable outStyle655;

    private Element outElem656;
    private SVGStylable outStyle656;

    private Element outElem657;
    private SVGStylable outStyle657;

    private Element outElem658;
    private SVGStylable outStyle658;

    private Element outElem659;
    private SVGStylable outStyle659;

    private Element outElem660;
    private SVGStylable outStyle660;

    private Element outElem661;
    private SVGStylable outStyle661;

    private Element outElem662;
    private SVGStylable outStyle662;

    private Element outElem663;
    private SVGStylable outStyle663;

    private Element outElem664;
    private SVGStylable outStyle664;

    private Element outElem665;
    private SVGStylable outStyle665;

    private Element outElem666;
    private SVGStylable outStyle666;

    private Element outElem667;
    private SVGStylable outStyle667;

    private Element outElem668;
    private SVGStylable outStyle668;

    private Element outElem669;
    private SVGStylable outStyle669;

    private Element outElem670;
    private SVGStylable outStyle670;

    private Element outElem671;
    private SVGStylable outStyle671;

    private Element outElem672;
    private SVGStylable outStyle672;

    private Element outElem673;
    private SVGStylable outStyle673;

    private Element outElem674;
    private SVGStylable outStyle674;

    private Element outElem675;
    private SVGStylable outStyle675;

    private Element outElem676;
    private SVGStylable outStyle676;

    private Element outElem677;
    private SVGStylable outStyle677;

    private Element outElem678;
    private SVGStylable outStyle678;

    private Element outElem679;
    private SVGStylable outStyle679;

    private Element outElem680;
    private SVGStylable outStyle680;

    private Element outElem681;
    private SVGStylable outStyle681;

    private Element outElem682;
    private SVGStylable outStyle682;

    private Element outElem683;
    private SVGStylable outStyle683;

    private Element outElem684;
    private SVGStylable outStyle684;

    private Element outElem685;
    private SVGStylable outStyle685;

    private Element outElem686;
    private SVGStylable outStyle686;

    private Element outElem687;
    private SVGStylable outStyle687;

    private Element outElem688;
    private SVGStylable outStyle688;

    private Element outElem689;
    private SVGStylable outStyle689;

    private Element outElem690;
    private SVGStylable outStyle690;

    private Element outElem691;
    private SVGStylable outStyle691;

    private Element outElem692;
    private SVGStylable outStyle692;

    private Element outElem693;
    private SVGStylable outStyle693;

    private Element outElem694;
    private SVGStylable outStyle694;

    private Element outElem695;
    private SVGStylable outStyle695;

    private Element outElem696;
    private SVGStylable outStyle696;

    private Element outElem697;
    private SVGStylable outStyle697;

    private Element outElem698;
    private SVGStylable outStyle698;

    private Element outElem699;
    private SVGStylable outStyle699;

    private Element outElem700;
    private SVGStylable outStyle700;

    private Element outElem701;
    private SVGStylable outStyle701;

    private Element outElem702;
    private SVGStylable outStyle702;

    private Element outElem703;
    private SVGStylable outStyle703;

    private Element outElem704;
    private SVGStylable outStyle704;

    private Element outElem705;
    private SVGStylable outStyle705;

    private Element outElem706;
    private SVGStylable outStyle706;

    private Element outElem707;
    private SVGStylable outStyle707;

    private Element outElem708;
    private SVGStylable outStyle708;

    private Element outElem709;
    private SVGStylable outStyle709;

    private Element outElem710;
    private SVGStylable outStyle710;

    private Element outElem711;
    private SVGStylable outStyle711;

    private Element outElem712;
    private SVGStylable outStyle712;

    private Element outElem713;
    private SVGStylable outStyle713;

    private Element outElem714;
    private SVGStylable outStyle714;

    private Element outElem715;
    private SVGStylable outStyle715;

    private Element outElem716;
    private SVGStylable outStyle716;

    private Element outElem717;
    private SVGStylable outStyle717;

    private Element outElem718;
    private SVGStylable outStyle718;

    private Element outElem719;
    private SVGStylable outStyle719;

    private Element outElem720;
    private SVGStylable outStyle720;

    private Element outElem721;
    private SVGStylable outStyle721;

    private Element outElem722;
    private SVGStylable outStyle722;

    private Element outElem723;
    private SVGStylable outStyle723;

    private Element outElem724;
    private SVGStylable outStyle724;

    private Element outElem725;
    private SVGStylable outStyle725;

    private Element outElem726;
    private SVGStylable outStyle726;

    private Element outElem727;
    private SVGStylable outStyle727;

    private Element outElem728;
    private SVGStylable outStyle728;

    private Element outElem729;
    private SVGStylable outStyle729;

    private Element outElem730;
    private SVGStylable outStyle730;

    private Element outElem731;
    private SVGStylable outStyle731;

    private Element outElem732;
    private SVGStylable outStyle732;

    private Element outElem733;
    private SVGStylable outStyle733;

    private Element outElem734;
    private SVGStylable outStyle734;

    private Element outElem735;
    private SVGStylable outStyle735;

    private Element outElem736;
    private SVGStylable outStyle736;

    private Element outElem737;
    private SVGStylable outStyle737;

    private Element outElem738;
    private SVGStylable outStyle738;

    private Element outElem739;
    private SVGStylable outStyle739;

    private Element outElem740;
    private SVGStylable outStyle740;

    private Element outElem741;
    private SVGStylable outStyle741;

    private Element outElem742;
    private SVGStylable outStyle742;

    private Element outElem743;
    private SVGStylable outStyle743;

    private Element outElem744;
    private SVGStylable outStyle744;

    private Element outElem745;
    private SVGStylable outStyle745;

    private Element outElem746;
    private SVGStylable outStyle746;

    private Element outElem747;
    private SVGStylable outStyle747;

    private Element outElem748;
    private SVGStylable outStyle748;

    private Element outElem749;
    private SVGStylable outStyle749;

    private Element outElem750;
    private SVGStylable outStyle750;

    private Element outElem751;
    private SVGStylable outStyle751;

    private Element outElem752;
    private SVGStylable outStyle752;

    private Element outElem753;
    private SVGStylable outStyle753;

    private Element outElem754;
    private SVGStylable outStyle754;

    private Element outElem755;
    private SVGStylable outStyle755;

    private Element outElem756;
    private SVGStylable outStyle756;

    private Element outElem757;
    private SVGStylable outStyle757;

    private Element outElem758;
    private SVGStylable outStyle758;

    private Element outElem759;
    private SVGStylable outStyle759;

    private Element outElem760;
    private SVGStylable outStyle760;

    private Element outElem761;
    private SVGStylable outStyle761;

    private Element outElem762;
    private SVGStylable outStyle762;

    private Element outElem763;
    private SVGStylable outStyle763;

    private Element outElem764;
    private SVGStylable outStyle764;

    private Element outElem765;
    private SVGStylable outStyle765;

    private Element outElem766;
    private SVGStylable outStyle766;

    private Element outElem767;
    private SVGStylable outStyle767;

    private Element outElem768;
    private SVGStylable outStyle768;

    private Element outElem769;
    private SVGStylable outStyle769;

    private Element outElem770;
    private SVGStylable outStyle770;

    private Element outElem771;
    private SVGStylable outStyle771;

    private Element outElem772;
    private SVGStylable outStyle772;

    private Element outElem773;
    private SVGStylable outStyle773;

    private Element outElem774;
    private SVGStylable outStyle774;

    private Element outElem775;
    private SVGStylable outStyle775;

    private Element outElem776;
    private SVGStylable outStyle776;

    private Element outElem777;
    private SVGStylable outStyle777;

    private Element outElem778;
    private SVGStylable outStyle778;

    private Element outElem779;
    private SVGStylable outStyle779;

    private Element outElem780;
    private SVGStylable outStyle780;

    private Element outElem781;
    private SVGStylable outStyle781;

    private Element outElem782;
    private SVGStylable outStyle782;

    private Element outElem783;
    private SVGStylable outStyle783;

    private Element outElem784;
    private SVGStylable outStyle784;

    private Element outElem785;
    private SVGStylable outStyle785;

    private Element outElem786;
    private SVGStylable outStyle786;

    private Element outElem787;
    private SVGStylable outStyle787;

    private Element outElem788;
    private SVGStylable outStyle788;

    private Element outElem789;
    private SVGStylable outStyle789;

    private Element outElem790;
    private SVGStylable outStyle790;

    private Element outElem791;
    private SVGStylable outStyle791;

    private Element outElem792;
    private SVGStylable outStyle792;

    private Element outElem793;
    private SVGStylable outStyle793;

    private Element outElem794;
    private SVGStylable outStyle794;

    private Element outElem795;
    private SVGStylable outStyle795;

    private Element outElem796;
    private SVGStylable outStyle796;

    private Element outElem797;
    private SVGStylable outStyle797;

    private Element outElem798;
    private SVGStylable outStyle798;

    private Element outElem799;
    private SVGStylable outStyle799;

    private Element outElem800;
    private SVGStylable outStyle800;

    private Element outElem801;
    private SVGStylable outStyle801;

    private Element outElem802;
    private SVGStylable outStyle802;

    private Element outElem803;
    private SVGStylable outStyle803;

    private Element outElem804;
    private SVGStylable outStyle804;

    private Element outElem805;
    private SVGStylable outStyle805;

    private Element outElem806;
    private SVGStylable outStyle806;

    private Element outElem807;
    private SVGStylable outStyle807;

    private Element outElem808;
    private SVGStylable outStyle808;

    private Element outElem809;
    private SVGStylable outStyle809;

    private Element outElem810;
    private SVGStylable outStyle810;

    private Element outElem811;
    private SVGStylable outStyle811;

    private Element outElem812;
    private SVGStylable outStyle812;

    private Element outElem813;
    private SVGStylable outStyle813;

    private Element outElem814;
    private SVGStylable outStyle814;

    private Element outElem815;
    private SVGStylable outStyle815;

    private Element outElem816;
    private SVGStylable outStyle816;

    private Element outElem817;
    private SVGStylable outStyle817;

    private Element outElem818;
    private SVGStylable outStyle818;

    private Element outElem819;
    private SVGStylable outStyle819;

    private Element outElem820;
    private SVGStylable outStyle820;

    private Element outElem821;
    private SVGStylable outStyle821;

    private Element outElem822;
    private SVGStylable outStyle822;

    private Element outElem823;
    private SVGStylable outStyle823;

    private Element outElem824;
    private SVGStylable outStyle824;

    private Element outElem825;
    private SVGStylable outStyle825;

    private Element outElem826;
    private SVGStylable outStyle826;

    private Element outElem827;
    private SVGStylable outStyle827;

    private Element outElem828;
    private SVGStylable outStyle828;

    private Element outElem829;
    private SVGStylable outStyle829;

    private Element outElem830;
    private SVGStylable outStyle830;

    private Element outElem831;
    private SVGStylable outStyle831;

    private Element outElem832;
    private SVGStylable outStyle832;

    private Element outElem833;
    private SVGStylable outStyle833;

    private Element outElem834;
    private SVGStylable outStyle834;

    private Element outElem835;
    private SVGStylable outStyle835;

    private Element outElem836;
    private SVGStylable outStyle836;

    private Element outElem837;
    private SVGStylable outStyle837;

    private Element outElem838;
    private SVGStylable outStyle838;

    private Element outElem839;
    private SVGStylable outStyle839;

    private Element outElem840;
    private SVGStylable outStyle840;

    private Element outElem841;
    private SVGStylable outStyle841;

    private Element outElem842;
    private SVGStylable outStyle842;

    private Element outElem843;
    private SVGStylable outStyle843;

    private Element outElem844;
    private SVGStylable outStyle844;

    private Element outElem845;
    private SVGStylable outStyle845;

    private Element outElem846;
    private SVGStylable outStyle846;

    private Element outElem847;
    private SVGStylable outStyle847;

    private Element outElem848;
    private SVGStylable outStyle848;

    private Element outElem849;
    private SVGStylable outStyle849;

    private Element outElem850;
    private SVGStylable outStyle850;

    private Element outElem851;
    private SVGStylable outStyle851;

    private Element outElem852;
    private SVGStylable outStyle852;

    private Element outElem853;
    private SVGStylable outStyle853;

    private Element outElem854;
    private SVGStylable outStyle854;

    private Element outElem855;
    private SVGStylable outStyle855;

    private Element outElem856;
    private SVGStylable outStyle856;

    private Element outElem857;
    private SVGStylable outStyle857;

    private Element outElem858;
    private SVGStylable outStyle858;

    private Element outElem859;
    private SVGStylable outStyle859;

    private Element outElem860;
    private SVGStylable outStyle860;

    private Element outElem861;
    private SVGStylable outStyle861;

    private Element outElem862;
    private SVGStylable outStyle862;

    private Element outElem863;
    private SVGStylable outStyle863;

    private Element outElem864;
    private SVGStylable outStyle864;

    private Element outElem865;
    private SVGStylable outStyle865;

    private Element outElem866;
    private SVGStylable outStyle866;

    private Element outElem867;
    private SVGStylable outStyle867;

    private Element outElem868;
    private SVGStylable outStyle868;

    private Element outElem869;
    private SVGStylable outStyle869;

    private Element outElem870;
    private SVGStylable outStyle870;

    private Element outElem871;
    private SVGStylable outStyle871;

    private Element outElem872;
    private SVGStylable outStyle872;

    private Element outElem873;
    private SVGStylable outStyle873;

    private Element outElem874;
    private SVGStylable outStyle874;

    private Element outElem875;
    private SVGStylable outStyle875;

    private Element outElem876;
    private SVGStylable outStyle876;

    private Element outElem877;
    private SVGStylable outStyle877;

    private Element outElem878;
    private SVGStylable outStyle878;

    private Element outElem879;
    private SVGStylable outStyle879;

    private Element outElem880;
    private SVGStylable outStyle880;

    private Element outElem881;
    private SVGStylable outStyle881;

    private Element outElem882;
    private SVGStylable outStyle882;

    private Element outElem883;
    private Text outText883;

    private Element outElem884;
    private SVGStylable outStyle884;

    private Element outElem885;
    private SVGStylable outStyle885;

    private Element outElem886;
    private Text outText886;

    private Element outElem887;
    private SVGStylable outStyle887;

    private Element outElem888;
    private SVGStylable outStyle888;

    private Element outElem889;
    private SVGStylable outStyle889;

    private Element outElem890;
    private SVGStylable outStyle890;

    private Element outElem891;
    private SVGStylable outStyle891;

    private Element outElem892;
    private SVGStylable outStyle892;

    private Element outElem893;
    private SVGStylable outStyle893;

    private Element outElem894;
    private SVGStylable outStyle894;

    private Element outElem895;
    private SVGStylable outStyle895;

    private Element outElem896;
    private SVGStylable outStyle896;

    private Element outElem897;
    private SVGStylable outStyle897;

    private Element outElem898;
    private SVGStylable outStyle898;

    private Element outElem899;
    private SVGStylable outStyle899;

    private Element outElem900;
    private SVGStylable outStyle900;

    private Element outElem901;
    private SVGStylable outStyle901;

    private Element outElem902;
    private SVGStylable outStyle902;

    private Element outElem903;
    private SVGStylable outStyle903;

    private Element outElem904;
    private Text outText904;

    private Element outElem905;
    private SVGStylable outStyle905;

    private Element outElem906;
    private SVGStylable outStyle906;

    private Element outElem907;
    private SVGStylable outStyle907;

    private Element outElem908;
    private SVGStylable outStyle908;

    private Element outElem909;
    private SVGStylable outStyle909;

    private Element outElem910;
    private SVGStylable outStyle910;

    private Element outElem911;
    private SVGStylable outStyle911;

    private Element outElem912;
    private SVGStylable outStyle912;

    private Element outElem913;
    private SVGStylable outStyle913;

    private Element outElem914;
    private SVGStylable outStyle914;

    private Element outElem915;
    private SVGStylable outStyle915;

    private Element outElem916;
    private SVGStylable outStyle916;

    private Element outElem917;
    private SVGStylable outStyle917;

    private Element outElem918;
    private SVGStylable outStyle918;

    private Element outElem919;
    private SVGStylable outStyle919;

    private Element outElem920;
    private Text outText920;

    private Element outElem921;
    private SVGStylable outStyle921;

    private Element outElem922;
    private SVGStylable outStyle922;

    private Element outElem923;
    private SVGStylable outStyle923;

    private Element outElem924;
    private SVGStylable outStyle924;

    private Element outElem925;
    private SVGStylable outStyle925;

    private Element outElem926;
    private SVGStylable outStyle926;

    private Element outElem927;
    private SVGStylable outStyle927;

    private Element outElem928;
    private Text outText928;

    private Element outElem929;
    private SVGStylable outStyle929;

    private Element outElem930;
    private SVGStylable outStyle930;

    private Element outElem931;
    private SVGStylable outStyle931;

    private Element outElem932;
    private Text outText932;

    private Element outElem933;
    private SVGStylable outStyle933;

    private Element outElem934;
    private SVGStylable outStyle934;

    private Element outElem935;
    private SVGStylable outStyle935;

    private Element outElem936;
    private SVGStylable outStyle936;

    private Element outElem937;
    private SVGStylable outStyle937;

    private Element outElem938;
    private SVGStylable outStyle938;

    private Element outElem939;
    private SVGStylable outStyle939;

    private Element outElem940;
    private SVGStylable outStyle940;

    private Element outElem941;
    private SVGStylable outStyle941;

    private Element outElem942;
    private SVGStylable outStyle942;

    private Element outElem943;
    private SVGStylable outStyle943;

    private Element outElem944;
    private SVGStylable outStyle944;

    private Element outElem945;
    private Text outText945;

    private Element outElem946;
    private SVGStylable outStyle946;

    private Element outElem947;
    private SVGStylable outStyle947;

    private Element outElem948;
    private SVGStylable outStyle948;

    private Element outElem949;
    private SVGStylable outStyle949;

    private Element outElem950;
    private SVGStylable outStyle950;

    private Element outElem951;
    private SVGStylable outStyle951;

    private Element outElem952;
    private SVGStylable outStyle952;

    private Element outElem953;
    private SVGStylable outStyle953;

    private Element outElem954;
    private SVGStylable outStyle954;

    private Element outElem955;
    private SVGStylable outStyle955;

    private Element outElem956;
    private SVGStylable outStyle956;

    private Element outElem957;
    private Text outText957;

    private Element outElem958;
    private SVGStylable outStyle958;

    private Element outElem959;
    private SVGStylable outStyle959;

    private Element outElem960;
    private SVGStylable outStyle960;

    private Element outElem961;
    private SVGStylable outStyle961;

    private Element outElem962;
    private SVGStylable outStyle962;

    private Element outElem963;
    private SVGStylable outStyle963;

    private Element outElem964;
    private SVGStylable outStyle964;

    private Element outElem965;
    private SVGStylable outStyle965;

    private Element outElem966;
    private SVGStylable outStyle966;

    private Element outElem967;
    private SVGStylable outStyle967;

    private Element outElem968;
    private Text outText968;

    private Element outElem969;
    private SVGStylable outStyle969;

    private Element outElem970;
    private SVGStylable outStyle970;

    private Element outElem971;
    private SVGStylable outStyle971;

    private Element outElem972;
    private SVGStylable outStyle972;

    private Element outElem973;
    private SVGStylable outStyle973;

    private Element outElem974;
    private SVGStylable outStyle974;

    private Element outElem975;
    private SVGStylable outStyle975;

    private Element outElem976;
    private SVGStylable outStyle976;

    private Element outElem977;
    private SVGStylable outStyle977;

    private Element outElem978;
    private SVGStylable outStyle978;

    private Element outElem979;
    private Text outText979;

    private Element outElem980;
    private Text outText980;

    private Element outElem981;
    private Text outText981;

    private Element outElem982;
    private Text outText982;

    private Element outElem983;
    private SVGStylable outStyle983;

    private Element outElem984;
    private SVGStylable outStyle984;

    private Element outElem985;
    private SVGStylable outStyle985;

    private Element outElem986;
    private SVGStylable outStyle986;

    private Element outElem987;
    private SVGStylable outStyle987;

    private Element outElem988;
    private SVGStylable outStyle988;

    private Element outElem989;
    private SVGStylable outStyle989;

    private Element outElem990;
    private SVGStylable outStyle990;

    private Element outElem991;
    private SVGStylable outStyle991;

    private Element outElem992;
    private SVGStylable outStyle992;

    private Element outElem993;
    private SVGStylable outStyle993;

    private Element outElem994;
    private Text outText994;

    private Element outElem995;
    private Text outText995;

    private Element outElem996;
    private SVGStylable outStyle996;

    private Element outElem997;
    private SVGStylable outStyle997;

    private Element outElem998;
    private SVGStylable outStyle998;

    private Element outElem999;
    private SVGStylable outStyle999;

    private Element outElem1000;
    private SVGStylable outStyle1000;

    private Element outElem1001;
    private SVGStylable outStyle1001;

    private Element outElem1002;
    private SVGStylable outStyle1002;

    private Element outElem1003;
    private SVGStylable outStyle1003;

    private Element outElem1004;
    private SVGStylable outStyle1004;

    private Element outElem1005;
    private Text outText1005;

    private Element outElem1006;
    private Text outText1006;

    private Element outElem1007;
    private SVGStylable outStyle1007;

    private Element outElem1008;
    private SVGStylable outStyle1008;

    private Element outElem1009;
    private SVGStylable outStyle1009;

    private Element outElem1010;
    private SVGStylable outStyle1010;

    private Element outElem1011;
    private SVGStylable outStyle1011;

    private Element outElem1012;
    private SVGStylable outStyle1012;

    private Element outElem1013;
    private SVGStylable outStyle1013;

    private Element outElem1014;
    private SVGStylable outStyle1014;

    private Element outElem1015;
    private SVGStylable outStyle1015;

    private Element outElem1016;
    private Text outText1016;

    private Element outElem1017;
    private Text outText1017;

    private Element outElem1018;
    private SVGStylable outStyle1018;

    private Element outElem1019;
    private SVGStylable outStyle1019;

    private Element outElem1020;
    private SVGStylable outStyle1020;

    private Element outElem1021;
    private SVGStylable outStyle1021;

    private Element outElem1022;
    private SVGStylable outStyle1022;

    private Element outElem1023;
    private SVGStylable outStyle1023;

    private Element outElem1024;
    private SVGStylable outStyle1024;

    private Element outElem1025;
    private SVGStylable outStyle1025;

    private Element outElem1026;
    private SVGStylable outStyle1026;

    private Element outElem1027;
    private SVGStylable outStyle1027;

    private Element outElem1028;
    private SVGStylable outStyle1028;

    private Element outElem1029;
    private SVGStylable outStyle1029;

    private Element outElem1030;
    private SVGStylable outStyle1030;

    private Element outElem1031;
    private SVGStylable outStyle1031;

    private Element outElem1032;
    private SVGStylable outStyle1032;

    private Element outElem1033;
    private SVGStylable outStyle1033;

    private Element outElem1034;
    private Text outText1034;

    private Element outElem1035;
    private SVGStylable outStyle1035;

    private Element outElem1036;
    private SVGStylable outStyle1036;

    private Element outElem1037;
    private SVGStylable outStyle1037;

    private Element outElem1038;
    private SVGStylable outStyle1038;

    private Element outElem1039;
    private SVGStylable outStyle1039;

    private Element outElem1040;
    private SVGStylable outStyle1040;

    private Element outElem1041;
    private SVGStylable outStyle1041;

    private Element outElem1042;
    private SVGStylable outStyle1042;

    private Element outElem1043;
    private SVGStylable outStyle1043;

    private Element outElem1044;
    private SVGStylable outStyle1044;

    private Element outElem1045;
    private SVGStylable outStyle1045;

    private Element outElem1046;
    private SVGStylable outStyle1046;

    private Element outElem1047;
    private Text outText1047;

    private Element outElem1048;
    private Text outText1048;

    private Element outElem1049;
    private Text outText1049;

    private Element outElem1050;
    private Text outText1050;

    private Element outElem1051;
    private SVGStylable outStyle1051;

    private Element outElem1052;
    private SVGStylable outStyle1052;

    private Element outElem1053;
    private SVGStylable outStyle1053;

    private Element outElem1054;
    private SVGStylable outStyle1054;

    private Element outElem1055;
    private SVGStylable outStyle1055;

    private Element outElem1056;
    private SVGStylable outStyle1056;

    private Element outElem1057;
    private SVGStylable outStyle1057;

    private Element outElem1058;
    private SVGStylable outStyle1058;

    private Element outElem1059;
    private SVGStylable outStyle1059;

    private Element outElem1060;
    private SVGStylable outStyle1060;

    private Element outElem1061;
    private SVGStylable outStyle1061;

    private Element outElem1062;
    private SVGStylable outStyle1062;

    private Element outElem1063;
    private Text outText1063;

    private Element outElem1064;
    private Text outText1064;

    private Element outElem1065;
    private Text outText1065;

    private Element outElem1066;
    private Text outText1066;

    private Element outElem1067;
    private Text outText1067;

    private Element outElem1068;
    private Text outText1068;

    private Element outElem1069;
    private Text outText1069;

    private Element outElem1070;
    private SVGStylable outStyle1070;

    private Element outElem1071;
    private SVGStylable outStyle1071;

    private Element outElem1072;
    private SVGStylable outStyle1072;

    private Element outElem1073;
    private SVGStylable outStyle1073;

    private Element outElem1074;
    private SVGStylable outStyle1074;

    private Element outElem1075;
    private SVGStylable outStyle1075;

    private Element outElem1076;
    private SVGStylable outStyle1076;

    private Element outElem1077;
    private SVGStylable outStyle1077;

    private Element outElem1078;
    private SVGStylable outStyle1078;

    private Element outElem1079;
    private SVGStylable outStyle1079;

    private Element outElem1080;
    private SVGStylable outStyle1080;

    private Element outElem1081;
    private SVGStylable outStyle1081;

    private Element outElem1082;
    private SVGStylable outStyle1082;

    private Element outElem1083;
    private SVGStylable outStyle1083;

    private Element outElem1084;
    private SVGStylable outStyle1084;

    private Element outElem1085;
    private SVGStylable outStyle1085;

    private Element outElem1086;
    private SVGStylable outStyle1086;

    private Element outElem1087;
    private SVGStylable outStyle1087;

    private Element outElem1088;
    private SVGStylable outStyle1088;

    private Element outElem1089;
    private SVGStylable outStyle1089;

    private Element outElem1090;
    private SVGStylable outStyle1090;

    private Element outElem1091;
    private SVGStylable outStyle1091;

    private Element outElem1092;
    private SVGStylable outStyle1092;

    private Element outElem1093;
    private SVGStylable outStyle1093;

    private Element outElem1094;
    private SVGStylable outStyle1094;

    private Element outElem1095;
    private SVGStylable outStyle1095;

    private Element outElem1096;
    private SVGStylable outStyle1096;

    private Element outElem1097;
    private SVGStylable outStyle1097;

    private Element outElem1098;
    private SVGStylable outStyle1098;

    private Element outElem1099;
    private SVGStylable outStyle1099;

    private Element outElem1100;
    private SVGStylable outStyle1100;

    private Element outElem1101;
    private SVGStylable outStyle1101;

    private Element outElem1102;
    private SVGStylable outStyle1102;

    private Element outElem1103;
    private SVGStylable outStyle1103;

    private Element outElem1104;
    private SVGStylable outStyle1104;

    private Element outElem1105;
    private SVGStylable outStyle1105;

    private Element outElem1106;
    private SVGStylable outStyle1106;

    private Element outElem1107;
    private SVGStylable outStyle1107;

    private Element outElem1108;
    private SVGStylable outStyle1108;

    private Element outElem1109;
    private SVGStylable outStyle1109;

    private Element outElem1110;
    private SVGStylable outStyle1110;

    private Element outElem1111;
    private SVGStylable outStyle1111;

    private Element outElem1112;
    private SVGStylable outStyle1112;

    private Element outElem1113;
    private SVGStylable outStyle1113;

    private Element outElem1114;
    private SVGStylable outStyle1114;

    private Element outElem1115;
    private SVGStylable outStyle1115;

    private Element outElem1116;
    private SVGStylable outStyle1116;

    private Element outElem1117;
    private SVGStylable outStyle1117;

    private Element outElem1118;
    private SVGStylable outStyle1118;

    private Element outElem1119;
    private SVGStylable outStyle1119;

    private Element outElem1120;
    private SVGStylable outStyle1120;

    private Element outElem1121;
    private SVGStylable outStyle1121;

    private Element outElem1122;
    private SVGStylable outStyle1122;

    private Element outElem1123;
    private SVGStylable outStyle1123;

    private Element outElem1124;
    private SVGStylable outStyle1124;

    private Element outElem1125;
    private SVGStylable outStyle1125;

    private Element outElem1126;
    private SVGStylable outStyle1126;

    private Element outElem1127;
    private SVGStylable outStyle1127;

    private Element outElem1128;
    private SVGStylable outStyle1128;

    private Element outElem1129;
    private SVGStylable outStyle1129;

    private Element outElem1130;
    private SVGStylable outStyle1130;

    private Element outElem1131;
    private SVGStylable outStyle1131;

    private Element outElem1132;
    private SVGStylable outStyle1132;

    private Element outElem1133;
    private SVGStylable outStyle1133;

    private Element outElem1134;
    private SVGStylable outStyle1134;

    private Element outElem1135;
    private SVGStylable outStyle1135;

    private Element outElem1136;
    private SVGStylable outStyle1136;

    private Element outElem1137;
    private SVGStylable outStyle1137;

    private Element outElem1138;
    private SVGStylable outStyle1138;

    private Element outElem1139;
    private SVGStylable outStyle1139;

    private Element outElem1140;
    private SVGStylable outStyle1140;

    private Element outElem1141;
    private SVGStylable outStyle1141;

    private Element outElem1142;
    private SVGStylable outStyle1142;

    private Element outElem1143;
    private SVGStylable outStyle1143;

    private Element outElem1144;
    private SVGStylable outStyle1144;

    private Element outElem1145;
    private SVGStylable outStyle1145;

    private Element outElem1146;
    private SVGStylable outStyle1146;

    private Element outElem1147;
    private SVGStylable outStyle1147;

    private Element outElem1148;
    private SVGStylable outStyle1148;

    private Element outElem1149;
    private SVGStylable outStyle1149;

    private Element outElem1150;
    private SVGStylable outStyle1150;

    private Element outElem1151;
    private SVGStylable outStyle1151;

    private Element outElem1152;
    private SVGStylable outStyle1152;

    private Element outElem1153;
    private SVGStylable outStyle1153;

    private Element outElem1154;
    private SVGStylable outStyle1154;

    private Element outElem1155;
    private SVGStylable outStyle1155;

    private Element outElem1156;
    private SVGStylable outStyle1156;

    private Element outElem1157;
    private SVGStylable outStyle1157;

    private Element outElem1158;
    private SVGStylable outStyle1158;

    private Element outElem1159;
    private SVGStylable outStyle1159;

    private Element outElem1160;
    private SVGStylable outStyle1160;

    private Element outElem1161;
    private SVGStylable outStyle1161;

    private Element outElem1162;
    private SVGStylable outStyle1162;

    private Element outElem1163;
    private SVGStylable outStyle1163;

    private Element outElem1164;
    private SVGStylable outStyle1164;

    private Element outElem1165;
    private SVGStylable outStyle1165;

    private Element outElem1166;
    private SVGStylable outStyle1166;

    private Element outElem1167;
    private SVGStylable outStyle1167;

    private Element outElem1168;
    private SVGStylable outStyle1168;

    private Element outElem1169;
    private SVGStylable outStyle1169;

    private Element outElem1170;
    private SVGStylable outStyle1170;

    private Element outElem1171;
    private SVGStylable outStyle1171;

    private Element outElem1172;
    private SVGStylable outStyle1172;

    private Element outElem1173;
    private SVGStylable outStyle1173;

    private Element outElem1174;
    private SVGStylable outStyle1174;

    private Element outElem1175;
    private SVGStylable outStyle1175;

    private Element outElem1176;
    private SVGStylable outStyle1176;

    private Element outElem1177;
    private SVGStylable outStyle1177;

    private Element outElem1178;
    private SVGStylable outStyle1178;

    private Element outElem1179;
    private SVGStylable outStyle1179;

    private Element outElem1180;
    private SVGStylable outStyle1180;

    private Element outElem1181;
    private SVGStylable outStyle1181;

    private Element outElem1182;
    private SVGStylable outStyle1182;

    private Element outElem1183;
    private SVGStylable outStyle1183;

    private Element outElem1184;
    private SVGStylable outStyle1184;

    private Element outElem1185;
    private SVGStylable outStyle1185;

    private Element outElem1186;
    private SVGStylable outStyle1186;

    private Element outElem1187;
    private SVGStylable outStyle1187;

    private Element outElem1188;
    private SVGStylable outStyle1188;

    private Element outElem1189;
    private SVGStylable outStyle1189;

    private Element outElem1190;
    private SVGStylable outStyle1190;

    private Element outElem1191;
    private SVGStylable outStyle1191;

    private Element outElem1192;
    private SVGStylable outStyle1192;

    private Element outElem1193;
    private SVGStylable outStyle1193;

    private Element outElem1194;
    private SVGStylable outStyle1194;

    private Element outElem1195;
    private SVGStylable outStyle1195;

    private Element outElem1196;
    private SVGStylable outStyle1196;

    private Element outElem1197;
    private SVGStylable outStyle1197;

    private Element outElem1198;
    private SVGStylable outStyle1198;

    private Element outElem1199;
    private SVGStylable outStyle1199;

    private Element outElem1200;
    private SVGStylable outStyle1200;

    private Element outElem1201;
    private SVGStylable outStyle1201;

    private Element outElem1202;
    private SVGStylable outStyle1202;

    private Element outElem1203;
    private SVGStylable outStyle1203;

    private Element outElem1204;
    private SVGStylable outStyle1204;

    private Element outElem1205;
    private SVGStylable outStyle1205;

    private Element outElem1206;
    private SVGStylable outStyle1206;

    private Element outElem1207;
    private SVGStylable outStyle1207;

    private Element outElem1208;
    private SVGStylable outStyle1208;

    private Element outElem1209;
    private SVGStylable outStyle1209;

    private Element outElem1210;
    private SVGStylable outStyle1210;

    private Element outElem1211;
    private SVGStylable outStyle1211;

    private Element outElem1212;
    private SVGStylable outStyle1212;

    private Element outElem1213;
    private SVGStylable outStyle1213;

    private Element outElem1214;
    private SVGStylable outStyle1214;

    private Element outElem1215;
    private SVGStylable outStyle1215;

    private Element outElem1216;
    private SVGStylable outStyle1216;

    private Element outElem1217;
    private SVGStylable outStyle1217;

    private Element outElem1218;
    private SVGStylable outStyle1218;

    private Element outElem1219;
    private SVGStylable outStyle1219;

    private Element outElem1220;
    private SVGStylable outStyle1220;

    private Element outElem1221;
    private SVGStylable outStyle1221;

    private Element outElem1222;
    private SVGStylable outStyle1222;

    private Element outElem1223;
    private SVGStylable outStyle1223;

    private Element outElem1224;
    private SVGStylable outStyle1224;

    private Element outElem1225;
    private SVGStylable outStyle1225;

    private Element outElem1226;
    private SVGStylable outStyle1226;

    private Element outElem1227;
    private SVGStylable outStyle1227;

    private Element outElem1228;
    private SVGStylable outStyle1228;

    private Element outElem1229;
    private SVGStylable outStyle1229;

    private Element outElem1230;
    private SVGStylable outStyle1230;

    private Element outElem1231;
    private SVGStylable outStyle1231;

    private Element outElem1232;
    private SVGStylable outStyle1232;

    private Element outElem1233;
    private SVGStylable outStyle1233;

    private Element outElem1234;
    private SVGStylable outStyle1234;

    private Element outElem1235;
    private SVGStylable outStyle1235;

    private Element outElem1236;
    private SVGStylable outStyle1236;

    private Element outElem1237;
    private SVGStylable outStyle1237;

    private Element outElem1238;
    private SVGStylable outStyle1238;

    private Element outElem1239;
    private SVGStylable outStyle1239;

    private Element outElem1240;
    private SVGStylable outStyle1240;

    private Element outElem1241;
    private SVGStylable outStyle1241;

    private Element outElem1242;
    private SVGStylable outStyle1242;

    private Element outElem1243;
    private SVGStylable outStyle1243;

    private Element outElem1244;
    private SVGStylable outStyle1244;

    private Element outElem1245;
    private SVGStylable outStyle1245;

    private Element outElem1246;
    private SVGStylable outStyle1246;

    private Element outElem1247;
    private SVGStylable outStyle1247;

    private Element outElem1248;
    private SVGStylable outStyle1248;

    private Element outElem1249;
    private SVGStylable outStyle1249;

    private Element outElem1250;
    private SVGStylable outStyle1250;

    private Element outElem1251;
    private SVGStylable outStyle1251;

    private Element outElem1252;
    private SVGStylable outStyle1252;

    private Element outElem1253;
    private SVGStylable outStyle1253;

    private Element outElem1254;
    private SVGStylable outStyle1254;

    private Element outElem1255;
    private SVGStylable outStyle1255;

    private Element outElem1256;
    private SVGStylable outStyle1256;

    private Element outElem1257;
    private SVGStylable outStyle1257;

    private Element outElem1258;
    private SVGStylable outStyle1258;

    private Element outElem1259;
    private SVGStylable outStyle1259;

    private Element outElem1260;
    private SVGStylable outStyle1260;

    private Element outElem1261;
    private SVGStylable outStyle1261;

    private Element outElem1262;
    private SVGStylable outStyle1262;

    private Element outElem1263;
    private SVGStylable outStyle1263;

    private Element outElem1264;
    private SVGStylable outStyle1264;

    private Element outElem1265;
    private SVGStylable outStyle1265;

    private Element outElem1266;
    private SVGStylable outStyle1266;

    private Element outElem1267;
    private SVGStylable outStyle1267;

    private Element outElem1268;
    private SVGStylable outStyle1268;

    private Element outElem1269;
    private SVGStylable outStyle1269;

    private Element outElem1270;
    private SVGStylable outStyle1270;

    private Element outElem1271;
    private SVGStylable outStyle1271;

    private Element outElem1272;
    private SVGStylable outStyle1272;

    private Element outElem1273;
    private SVGStylable outStyle1273;

    private Element outElem1274;
    private SVGStylable outStyle1274;

    private Element outElem1275;
    private SVGStylable outStyle1275;

    private Element outElem1276;
    private SVGStylable outStyle1276;

    private Element outElem1277;
    private SVGStylable outStyle1277;

    private Element outElem1278;
    private SVGStylable outStyle1278;

    private Element outElem1279;
    private SVGStylable outStyle1279;

    private Element outElem1280;
    private SVGStylable outStyle1280;

    private Element outElem1281;
    private SVGStylable outStyle1281;

    private Element outElem1282;
    private SVGStylable outStyle1282;

    private Element outElem1283;
    private SVGStylable outStyle1283;

    private Element outElem1284;
    private SVGStylable outStyle1284;

    private Element outElem1285;
    private SVGStylable outStyle1285;

    private Element outElem1286;
    private SVGStylable outStyle1286;

    private Element outElem1287;
    private SVGStylable outStyle1287;

    private Element outElem1288;
    private SVGStylable outStyle1288;

    private Element outElem1289;
    private SVGStylable outStyle1289;

    private Element outElem1290;
    private SVGStylable outStyle1290;

    private Element outElem1291;
    private SVGStylable outStyle1291;

    private Element outElem1292;
    private SVGStylable outStyle1292;

    private Element outElem1293;
    private SVGStylable outStyle1293;

    private Element outElem1294;
    private SVGStylable outStyle1294;

    private Element outElem1295;
    private SVGStylable outStyle1295;

    private Element outElem1296;
    private SVGStylable outStyle1296;

    private Element outElem1297;
    private SVGStylable outStyle1297;

    private Element outElem1298;
    private SVGStylable outStyle1298;

    private Element outElem1299;
    private SVGStylable outStyle1299;

    private Element outElem1300;
    private SVGStylable outStyle1300;

    private Element outElem1301;
    private SVGStylable outStyle1301;

    private Element outElem1302;
    private SVGStylable outStyle1302;

    private Element outElem1303;
    private SVGStylable outStyle1303;

    private Element outElem1304;
    private SVGStylable outStyle1304;

    private Element outElem1305;
    private SVGStylable outStyle1305;

    private Element outElem1306;
    private SVGStylable outStyle1306;

    private Element outElem1307;
    private SVGStylable outStyle1307;

    private Element outElem1308;
    private SVGStylable outStyle1308;

    private Element outElem1309;
    private SVGStylable outStyle1309;

    private Element outElem1310;
    private SVGStylable outStyle1310;

    private Element outElem1311;
    private SVGStylable outStyle1311;

    private Element outElem1312;
    private SVGStylable outStyle1312;

    private Element outElem1313;
    private SVGStylable outStyle1313;

    private Element outElem1314;
    private SVGStylable outStyle1314;

    private Element outElem1315;
    private SVGStylable outStyle1315;

    private Element outElem1316;
    private SVGStylable outStyle1316;

    private Element outElem1317;
    private SVGStylable outStyle1317;

    private Element outElem1318;
    private SVGStylable outStyle1318;

    private Element outElem1319;
    private SVGStylable outStyle1319;

    private Element outElem1320;
    private SVGStylable outStyle1320;

    private Element outElem1321;
    private Text outText1321;

    private Element outElem1322;
    private Text outText1322;

    private Element outElem1323;
    private Text outText1323;

    private Element outElem1324;
    private SVGStylable outStyle1324;

    private Element outElem1325;
    private SVGStylable outStyle1325;

    private Element outElem1326;
    private SVGStylable outStyle1326;

    private Element outElem1327;
    private SVGStylable outStyle1327;

    private Element outElem1328;
    private SVGStylable outStyle1328;

    private Element outElem1329;
    private SVGStylable outStyle1329;

    private Element outElem1330;
    private SVGStylable outStyle1330;

    private Element outElem1331;
    private Text outText1331;

    private Element outElem1332;
    private Text outText1332;

    private Element outElem1333;
    private Text outText1333;

    private Element outElem1334;
    private SVGStylable outStyle1334;

    private Element outElem1335;
    private SVGStylable outStyle1335;

    private Element outElem1336;
    private SVGStylable outStyle1336;

    private Element outElem1337;
    private SVGStylable outStyle1337;

    private Element outElem1338;
    private SVGStylable outStyle1338;

    private Element outElem1339;
    private SVGStylable outStyle1339;

    private Element outElem1340;
    private SVGStylable outStyle1340;

    private Element outElem1341;
    private SVGStylable outStyle1341;

    private Element outElem1342;
    private SVGStylable outStyle1342;

    private Element outElem1343;
    private SVGStylable outStyle1343;

    private Element outElem1344;
    private SVGStylable outStyle1344;

    private Element outElem1345;
    private SVGStylable outStyle1345;

    private Element outElem1346;
    private SVGStylable outStyle1346;

    private Element outElem1347;
    private SVGStylable outStyle1347;

    private Element outElem1348;
    private SVGStylable outStyle1348;

    private Element outElem1349;
    private SVGStylable outStyle1349;

    private Element outElem1350;
    private SVGStylable outStyle1350;

    private Element outElem1351;
    private SVGStylable outStyle1351;

    private Element outElem1352;
    private SVGStylable outStyle1352;

    private Element outElem1353;
    private SVGStylable outStyle1353;

    private Element outElem1354;
    private SVGStylable outStyle1354;

    private Element outElem1355;
    private SVGStylable outStyle1355;

    private Element outElem1356;
    private SVGStylable outStyle1356;

    private Element outElem1357;
    private SVGStylable outStyle1357;

    private Element outElem1358;
    private SVGStylable outStyle1358;

    private Element outElem1359;
    private SVGStylable outStyle1359;

    private Element outElem1360;
    private SVGStylable outStyle1360;

    private Element outElem1361;
    private SVGStylable outStyle1361;

    private Element outElem1362;
    private SVGStylable outStyle1362;

    private Element outElem1363;
    private SVGStylable outStyle1363;

    private Element outElem1364;
    private SVGStylable outStyle1364;

    private Element outElem1365;
    private SVGStylable outStyle1365;

    private Element outElem1366;
    private SVGStylable outStyle1366;

    private Element outElem1367;
    private SVGStylable outStyle1367;

    private Element outElem1368;
    private SVGStylable outStyle1368;

    private Element outElem1369;
    private SVGStylable outStyle1369;

    private Element outElem1370;
    private SVGStylable outStyle1370;

    private Element outElem1371;
    private SVGStylable outStyle1371;

    private Element outElem1372;
    private SVGStylable outStyle1372;

    private Element outElem1373;
    private SVGStylable outStyle1373;

    private Element outElem1374;
    private SVGStylable outStyle1374;

    private Element outElem1375;
    private SVGStylable outStyle1375;

    private Element outElem1376;
    private SVGStylable outStyle1376;

    private Element outElem1377;
    private SVGStylable outStyle1377;

    private Element outElem1378;
    private SVGStylable outStyle1378;

    private Element outElem1379;
    private SVGStylable outStyle1379;

    private Element outElem1380;
    private SVGStylable outStyle1380;

    private Element outElem1381;
    private SVGStylable outStyle1381;

    private Element outElem1382;
    private SVGStylable outStyle1382;

    private Element outElem1383;
    private SVGStylable outStyle1383;

    private Element outElem1384;
    private SVGStylable outStyle1384;

    private Element outElem1385;
    private SVGStylable outStyle1385;

    private Element outElem1386;
    private SVGStylable outStyle1386;

    private Element outElem1387;
    private SVGStylable outStyle1387;

    private Element outElem1388;
    private SVGStylable outStyle1388;

    private Element outElem1389;
    private SVGStylable outStyle1389;

    private Element outElem1390;
    private SVGStylable outStyle1390;

    private Element outElem1391;
    private SVGStylable outStyle1391;

    private Element outElem1392;
    private SVGStylable outStyle1392;

    private Element outElem1393;
    private SVGStylable outStyle1393;

    private Element outElem1394;
    private SVGStylable outStyle1394;

    private Element outElem1395;
    private SVGStylable outStyle1395;

    private Element outElem1396;
    private SVGStylable outStyle1396;

    private Element outElem1397;
    private SVGStylable outStyle1397;

    private Element outElem1398;
    private SVGStylable outStyle1398;

    private Element outElem1399;
    private SVGStylable outStyle1399;

    private Element outElem1400;
    private SVGStylable outStyle1400;

    private Element outElem1401;
    private SVGStylable outStyle1401;

    private Element outElem1402;
    private SVGStylable outStyle1402;

    private Element outElem1403;
    private SVGStylable outStyle1403;

    private Element outElem1404;
    private SVGStylable outStyle1404;

    private Element outElem1405;
    private SVGStylable outStyle1405;

    private Element outElem1406;
    private SVGStylable outStyle1406;

    private Element outElem1407;
    private SVGStylable outStyle1407;

    private Element outElem1408;
    private SVGStylable outStyle1408;

    private Element outElem1409;
    private Text outText1409;

    private Element outElem1410;
    private SVGStylable outStyle1410;

    private Element outElem1411;
    private SVGStylable outStyle1411;

    private Element outElem1412;
    private SVGStylable outStyle1412;

    private Element outElem1413;
    private SVGStylable outStyle1413;

    private Element outElem1414;
    private SVGStylable outStyle1414;

    private Element outElem1415;
    private SVGStylable outStyle1415;

    private Element outElem1416;
    private SVGStylable outStyle1416;

    private Element outElem1417;
    private SVGStylable outStyle1417;

    private Element outElem1418;
    private SVGStylable outStyle1418;

    private Element outElem1419;
    private SVGStylable outStyle1419;

    private Element outElem1420;
    private SVGStylable outStyle1420;

    private Element outElem1421;
    private SVGStylable outStyle1421;

    private Element outElem1422;
    private SVGStylable outStyle1422;

    private Element outElem1423;
    private SVGStylable outStyle1423;

    private Element outElem1424;
    private SVGStylable outStyle1424;

    private Element outElem1425;
    private SVGStylable outStyle1425;

    private Element outElem1426;
    private SVGStylable outStyle1426;

    private Element outElem1427;
    private SVGStylable outStyle1427;

    private Element outElem1428;
    private SVGStylable outStyle1428;

    private Element outElem1429;
    private SVGStylable outStyle1429;

    private Element outElem1430;
    private SVGStylable outStyle1430;

    private Element outElem1431;
    private SVGStylable outStyle1431;

    private Element outElem1432;
    private SVGStylable outStyle1432;

    private Element outElem1433;
    private SVGStylable outStyle1433;

    private Element outElem1434;
    private SVGStylable outStyle1434;

    private Element outElem1435;
    private SVGStylable outStyle1435;

    private Element outElem1436;
    private SVGStylable outStyle1436;

    private Element outElem1437;
    private SVGStylable outStyle1437;

    private Element outElem1438;
    private SVGStylable outStyle1438;

    private Element outElem1439;
    private SVGStylable outStyle1439;

    private Element outElem1440;
    private SVGStylable outStyle1440;

    private Element outElem1441;
    private SVGStylable outStyle1441;

    private Element outElem1442;
    private SVGStylable outStyle1442;

    private Element outElem1443;
    private SVGStylable outStyle1443;

    private Element outElem1444;
    private SVGStylable outStyle1444;

    private Element outElem1445;
    private SVGStylable outStyle1445;

    private Element outElem1446;
    private SVGStylable outStyle1446;

    private Element outElem1447;
    private SVGStylable outStyle1447;

    private Element outElem1448;
    private SVGStylable outStyle1448;

    private Element outElem1449;
    private SVGStylable outStyle1449;

    private Element outElem1450;
    private SVGStylable outStyle1450;

    private Element outElem1451;
    private SVGStylable outStyle1451;

    private Element outElem1452;
    private SVGStylable outStyle1452;

    private Element outElem1453;
    private SVGStylable outStyle1453;

    private Element outElem1454;
    private SVGStylable outStyle1454;

    private Element outElem1455;
    private SVGStylable outStyle1455;

    private Element outElem1456;
    private SVGStylable outStyle1456;

    private Element outElem1457;
    private SVGStylable outStyle1457;

    private Element outElem1458;
    private SVGStylable outStyle1458;

    private Element outElem1459;
    private SVGStylable outStyle1459;

    private Element outElem1460;
    private SVGStylable outStyle1460;

    private Element outElem1461;
    private SVGStylable outStyle1461;

    private Element outElem1462;
    private SVGStylable outStyle1462;

    private Element outElem1463;
    private SVGStylable outStyle1463;

    private Element outElem1464;
    private SVGStylable outStyle1464;

    private Element outElem1465;
    private SVGStylable outStyle1465;

    private Element outElem1466;
    private SVGStylable outStyle1466;

    private Element outElem1467;
    private SVGStylable outStyle1467;

    private Element outElem1468;
    private SVGStylable outStyle1468;

    private Element outElem1469;
    private SVGStylable outStyle1469;

    private Element outElem1470;
    private Text outText1470;

    private Element outElem1471;
    private SVGStylable outStyle1471;

    private Element outElem1472;
    private SVGStylable outStyle1472;

    private Element outElem1473;
    private SVGStylable outStyle1473;

    private Element outElem1474;
    private Text outText1474;

    private Element outElem1475;
    private Text outText1475;

    private Element outElem1476;
    private SVGStylable outStyle1476;

    private Element outElem1477;
    private SVGStylable outStyle1477;

    private Element outElem1478;
    private SVGStylable outStyle1478;

    private Element outElem1479;
    private Text outText1479;

    private Element outElem1480;
    private Text outText1480;

    private Element outElem1481;
    private SVGStylable outStyle1481;

    private Element outElem1482;
    private SVGStylable outStyle1482;

    private Element outElem1483;
    private SVGStylable outStyle1483;

    private Element outElem1484;
    private SVGStylable outStyle1484;

    private Element outElem1485;
    private SVGStylable outStyle1485;

    private Element outElem1486;
    private SVGStylable outStyle1486;

    private Element outElem1487;
    private SVGStylable outStyle1487;

    private Element outElem1488;
    private SVGStylable outStyle1488;

    private Element outElem1489;
    private SVGStylable outStyle1489;

    private Element outElem1490;
    private SVGStylable outStyle1490;

    private Element outElem1491;
    private SVGStylable outStyle1491;

    private Element outElem1492;
    private SVGStylable outStyle1492;

    private Element outElem1493;
    private SVGStylable outStyle1493;

    private Element outElem1494;
    private SVGStylable outStyle1494;

    private Element outElem1495;
    private SVGStylable outStyle1495;

    private Element outElem1496;
    private SVGStylable outStyle1496;

    private Element outElem1497;
    private SVGStylable outStyle1497;

    private Element outElem1498;
    private SVGStylable outStyle1498;

    private Element outElem1499;
    private SVGStylable outStyle1499;

    private Element outElem1500;
    private SVGStylable outStyle1500;

    private Element outElem1501;
    private Text outText1501;

    private Element outElem1502;
    private Text outText1502;

    private Element outElem1503;
    private SVGStylable outStyle1503;

    private Element outElem1504;
    private SVGStylable outStyle1504;

    private Element outElem1505;
    private SVGStylable outStyle1505;

    private Element outElem1506;
    private Text outText1506;

    private Element outElem1507;
    private Text outText1507;

    private Element outElem1508;
    private SVGStylable outStyle1508;

    private Element outElem1509;
    private SVGStylable outStyle1509;

    private Element outElem1510;
    private SVGStylable outStyle1510;

    private Element outElem1511;
    private SVGStylable outStyle1511;

    private Element outElem1512;
    private SVGStylable outStyle1512;

    private Element outElem1513;
    private SVGStylable outStyle1513;

    private Element outElem1514;
    private SVGStylable outStyle1514;

    private Element outElem1515;
    private SVGStylable outStyle1515;

    private Element outElem1516;
    private SVGStylable outStyle1516;

    private Element outElem1517;
    private SVGStylable outStyle1517;

    private Element outElem1518;
    private SVGStylable outStyle1518;

    private Element outElem1519;
    private SVGStylable outStyle1519;

    private Element outElem1520;
    private SVGStylable outStyle1520;

    private Element outElem1521;
    private SVGStylable outStyle1521;

    private Element outElem1522;
    private SVGStylable outStyle1522;

    private Element outElem1523;
    private SVGStylable outStyle1523;

    private Element outElem1524;
    private SVGStylable outStyle1524;

    private Element outElem1525;
    private SVGStylable outStyle1525;

    private Element outElem1526;
    private SVGStylable outStyle1526;

    private Element outElem1527;
    private SVGStylable outStyle1527;

    private Element outElem1528;
    private Text outText1528;

    private Element outElem1529;
    private Text outText1529;

    private Element outElem1530;
    private SVGStylable outStyle1530;

    private Element outElem1531;
    private SVGStylable outStyle1531;

    private Element outElem1532;
    private SVGStylable outStyle1532;

    private Element outElem1533;
    private Text outText1533;

    private Element outElem1534;
    private Text outText1534;

    private Element outElem1535;
    private SVGStylable outStyle1535;

    private Element outElem1536;
    private SVGStylable outStyle1536;

    private Element outElem1537;
    private SVGStylable outStyle1537;

    private Element outElem1538;
    private SVGStylable outStyle1538;

    private Element outElem1539;
    private SVGStylable outStyle1539;

    private Element outElem1540;
    private SVGStylable outStyle1540;

    private Element outElem1541;
    private SVGStylable outStyle1541;

    private Element outElem1542;
    private SVGStylable outStyle1542;

    private Element outElem1543;
    private SVGStylable outStyle1543;

    private Element outElem1544;
    private SVGStylable outStyle1544;

    private Element outElem1545;
    private SVGStylable outStyle1545;

    private Element outElem1546;
    private SVGStylable outStyle1546;

    private Element outElem1547;
    private SVGStylable outStyle1547;

    private Element outElem1548;
    private SVGStylable outStyle1548;

    private Element outElem1549;
    private SVGStylable outStyle1549;

    private Element outElem1550;
    private SVGStylable outStyle1550;

    private Element outElem1551;
    private SVGStylable outStyle1551;

    private Element outElem1552;
    private SVGStylable outStyle1552;

    private Element outElem1553;
    private SVGStylable outStyle1553;

    private Element outElem1554;
    private SVGStylable outStyle1554;

    private Element outElem1555;
    private SVGStylable outStyle1555;

    private Element outElem1556;
    private SVGStylable outStyle1556;

    private Element outElem1557;
    private SVGStylable outStyle1557;

    private Element outElem1558;
    private SVGStylable outStyle1558;

    private Element outElem1559;
    private SVGStylable outStyle1559;

    private Element outElem1560;
    private SVGStylable outStyle1560;

    private Element outElem1561;
    private SVGStylable outStyle1561;

    private Element outElem1562;
    private SVGStylable outStyle1562;

    private Element outElem1563;
    private SVGStylable outStyle1563;

    private Element outElem1564;
    private SVGStylable outStyle1564;

    private Element outElem1565;
    private SVGStylable outStyle1565;

    private Element outElem1566;
    private SVGStylable outStyle1566;

    private Element outElem1567;
    private SVGStylable outStyle1567;

    private Element outElem1568;
    private SVGStylable outStyle1568;

    private Element outElem1569;
    private SVGStylable outStyle1569;

    private Element outElem1570;
    private Text outText1570;

    private Element outElem1571;
    private Text outText1571;

    private Element outElem1572;
    private SVGStylable outStyle1572;

    private Element outElem1573;
    private SVGStylable outStyle1573;

    private Element outElem1574;
    private SVGStylable outStyle1574;

    private Element outElem1575;
    private Text outText1575;

    private Element outElem1576;
    private Text outText1576;

    private Element outElem1577;
    private SVGStylable outStyle1577;

    private Element outElem1578;
    private SVGStylable outStyle1578;

    private Element outElem1579;
    private SVGStylable outStyle1579;

    private Element outElem1580;
    private Text outText1580;

    private Element outElem1581;
    private Text outText1581;

    private Element outElem1582;
    private SVGStylable outStyle1582;

    private Element outElem1583;
    private SVGStylable outStyle1583;

    private Element outElem1584;
    private SVGStylable outStyle1584;

    private Element outElem1585;
    private Text outText1585;

    private Element outElem1586;
    private Text outText1586;

    private Element outElem1587;
    private SVGStylable outStyle1587;

    private Element outElem1588;
    private SVGStylable outStyle1588;

    private Element outElem1589;
    private SVGStylable outStyle1589;

    private Element outElem1590;
    private SVGStylable outStyle1590;

    private Element outElem1591;
    private SVGStylable outStyle1591;

    private Element outElem1592;
    private SVGStylable outStyle1592;

    private Element outElem1593;
    private SVGStylable outStyle1593;

    private Element outElem1594;
    private SVGStylable outStyle1594;

    private Element outElem1595;
    private SVGStylable outStyle1595;

    private Element outElem1596;
    private SVGStylable outStyle1596;

    private Element outElem1597;
    private SVGStylable outStyle1597;

    private Element outElem1598;
    private SVGStylable outStyle1598;

    private Element outElem1599;
    private SVGStylable outStyle1599;

    private Element outElem1600;
    private SVGStylable outStyle1600;

    private Element outElem1601;
    private SVGStylable outStyle1601;

    private Element outElem1602;
    private SVGStylable outStyle1602;

    private Element outElem1603;
    private SVGStylable outStyle1603;

    private Element outElem1604;
    private SVGStylable outStyle1604;

    private Element outElem1605;
    private SVGStylable outStyle1605;

    private Element outElem1606;
    private SVGStylable outStyle1606;

    private Element outElem1607;
    private SVGStylable outStyle1607;

    private Element outElem1608;
    private SVGStylable outStyle1608;

    private Element outElem1609;
    private SVGStylable outStyle1609;

    private Element outElem1610;
    private SVGStylable outStyle1610;

    private Element outElem1611;
    private SVGStylable outStyle1611;

    private Element outElem1612;
    private SVGStylable outStyle1612;

    private Element outElem1613;
    private SVGStylable outStyle1613;

    private Element outElem1614;
    private SVGStylable outStyle1614;

    private Element outElem1615;
    private SVGStylable outStyle1615;

    private Element outElem1616;
    private SVGStylable outStyle1616;

    private Element outElem1617;
    private SVGStylable outStyle1617;

    private Element outElem1618;
    private SVGStylable outStyle1618;

    private Element outElem1619;
    private SVGStylable outStyle1619;

    private Element outElem1620;
    private SVGStylable outStyle1620;

    private Element outElem1621;
    private SVGStylable outStyle1621;

    private Element outElem1622;
    private SVGStylable outStyle1622;

    private Element outElem1623;
    private SVGStylable outStyle1623;

    private Element outElem1624;
    private SVGStylable outStyle1624;

    private Element outElem1625;
    private SVGStylable outStyle1625;

    private Element outElem1626;
    private SVGStylable outStyle1626;

    private Element outElem1627;
    private SVGStylable outStyle1627;

    private Element outElem1628;
    private SVGStylable outStyle1628;

    private Element outElem1629;
    private SVGStylable outStyle1629;

    private Element outElem1630;
    private SVGStylable outStyle1630;

    private Element outElem1631;
    private SVGStylable outStyle1631;

    private Element outElem1632;
    private Text outText1632;

    private Element outElem1633;
    private Text outText1633;

    private Element outElem1634;
    private SVGStylable outStyle1634;

    private Element outElem1635;
    private SVGStylable outStyle1635;

    private Element outElem1636;
    private SVGStylable outStyle1636;

    private Element outElem1637;
    private Text outText1637;

    private Element outElem1638;
    private Text outText1638;

    private Element outElem1639;
    private SVGStylable outStyle1639;

    private Element outElem1640;
    private SVGStylable outStyle1640;

    private Element outElem1641;
    private SVGStylable outStyle1641;

    private Element outElem1642;
    private SVGStylable outStyle1642;

    private Element outElem1643;
    private SVGStylable outStyle1643;

    private Element outElem1644;
    private SVGStylable outStyle1644;

    private Element outElem1645;
    private SVGStylable outStyle1645;

    private Element outElem1646;
    private SVGStylable outStyle1646;

    private Element outElem1647;
    private SVGStylable outStyle1647;

    private Element outElem1648;
    private SVGStylable outStyle1648;

    private Element outElem1649;
    private SVGStylable outStyle1649;

    private Element outElem1650;
    private SVGStylable outStyle1650;

    private Element outElem1651;
    private SVGStylable outStyle1651;

    private Element outElem1652;
    private SVGStylable outStyle1652;

    private Element outElem1653;
    private SVGStylable outStyle1653;

    private Element outElem1654;
    private SVGStylable outStyle1654;

    private Element outElem1655;
    private SVGStylable outStyle1655;

    private Element outElem1656;
    private SVGStylable outStyle1656;

    private Element outElem1657;
    private SVGStylable outStyle1657;

    private Element outElem1658;
    private SVGStylable outStyle1658;

    private Element outElem1659;
    private SVGStylable outStyle1659;

    private Element outElem1660;
    private SVGStylable outStyle1660;

    private Element outElem1661;
    private SVGStylable outStyle1661;

    private Element outElem1662;
    private SVGStylable outStyle1662;

    private Element outElem1663;
    private SVGStylable outStyle1663;

    private Element outElem1664;
    private SVGStylable outStyle1664;

    private Element outElem1665;
    private SVGStylable outStyle1665;

    private Element outElem1666;
    private SVGStylable outStyle1666;

    private Element outElem1667;
    private SVGStylable outStyle1667;

    private Element outElem1668;
    private SVGStylable outStyle1668;

    private Element outElem1669;
    private SVGStylable outStyle1669;

    private Element outElem1670;
    private SVGStylable outStyle1670;

    private Element outElem1671;
    private SVGStylable outStyle1671;

    private Element outElem1672;
    private SVGStylable outStyle1672;

    private Element outElem1673;
    private SVGStylable outStyle1673;

    private Element outElem1674;
    private Text outText1674;

    private Element outElem1675;
    private Text outText1675;

    private Element outElem1676;
    private SVGStylable outStyle1676;

    private Element outElem1677;
    private SVGStylable outStyle1677;

    private Element outElem1678;
    private SVGStylable outStyle1678;

    private Element outElem1679;
    private Text outText1679;

    private Element outElem1680;
    private Text outText1680;

    private Element outElem1681;
    private SVGStylable outStyle1681;

    private Element outElem1682;
    private SVGStylable outStyle1682;

    private Element outElem1683;
    private SVGStylable outStyle1683;

    private Element outElem1684;
    private SVGStylable outStyle1684;

    private Element outElem1685;
    private SVGStylable outStyle1685;

    private Element outElem1686;
    private SVGStylable outStyle1686;

    private Element outElem1687;
    private SVGStylable outStyle1687;

    private Element outElem1688;
    private SVGStylable outStyle1688;

    private Element outElem1689;
    private SVGStylable outStyle1689;

    private Element outElem1690;
    private SVGStylable outStyle1690;

    private Element outElem1691;
    private SVGStylable outStyle1691;

    private Element outElem1692;
    private SVGStylable outStyle1692;

    private Element outElem1693;
    private SVGStylable outStyle1693;

    private Element outElem1694;
    private SVGStylable outStyle1694;

    private Element outElem1695;
    private SVGStylable outStyle1695;

    private Element outElem1696;
    private SVGStylable outStyle1696;

    private Element outElem1697;
    private SVGStylable outStyle1697;

    private Element outElem1698;
    private SVGStylable outStyle1698;

    private Element outElem1699;
    private SVGStylable outStyle1699;

    private Element outElem1700;
    private SVGStylable outStyle1700;

    private Element outElem1701;
    private SVGStylable outStyle1701;

    private Element outElem1702;
    private SVGStylable outStyle1702;

    private Element outElem1703;
    private SVGStylable outStyle1703;

    private Element outElem1704;
    private SVGStylable outStyle1704;

    private Element outElem1705;
    private SVGStylable outStyle1705;

    private Element outElem1706;
    private SVGStylable outStyle1706;

    private Element outElem1707;
    private SVGStylable outStyle1707;

    private Element outElem1708;
    private SVGStylable outStyle1708;

    private Element outElem1709;
    private SVGStylable outStyle1709;

    private Element outElem1710;
    private SVGStylable outStyle1710;

    private Element outElem1711;
    private SVGStylable outStyle1711;

    private Element outElem1712;
    private SVGStylable outStyle1712;

    private Element outElem1713;
    private SVGStylable outStyle1713;

    private Element outElem1714;
    private SVGStylable outStyle1714;

    private Element outElem1715;
    private SVGStylable outStyle1715;

    private Element outElem1716;
    private SVGStylable outStyle1716;

    private Element outElem1717;
    private SVGStylable outStyle1717;

    private Element outElem1718;
    private SVGStylable outStyle1718;

    private Element outElem1719;
    private SVGStylable outStyle1719;

    private Element outElem1720;
    private SVGStylable outStyle1720;

    private Element outElem1721;
    private SVGStylable outStyle1721;

    private Element outElem1722;
    private SVGStylable outStyle1722;

    private Element outElem1723;
    private SVGStylable outStyle1723;

    private Element outElem1724;
    private SVGStylable outStyle1724;

    private Element outElem1725;
    private SVGStylable outStyle1725;

    private Element outElem1726;
    private SVGStylable outStyle1726;

    private Element outElem1727;
    private SVGStylable outStyle1727;

    private Element outElem1728;
    private SVGStylable outStyle1728;

    private Element outElem1729;
    private SVGStylable outStyle1729;

    private Element outElem1730;
    private SVGStylable outStyle1730;

    private Element outElem1731;
    private SVGStylable outStyle1731;

    private Element outElem1732;
    private SVGStylable outStyle1732;

    private Element outElem1733;
    private SVGStylable outStyle1733;

    private Element outElem1734;
    private SVGStylable outStyle1734;

    private Element outElem1735;
    private SVGStylable outStyle1735;

    private Element outElem1736;
    private SVGStylable outStyle1736;

    private Element outElem1737;
    private SVGStylable outStyle1737;

    private Element outElem1738;
    private Text outText1738;

    private Element outElem1739;
    private Text outText1739;

    private Element outElem1740;
    private SVGStylable outStyle1740;

    private Element outElem1741;
    private SVGStylable outStyle1741;

    private Element outElem1742;
    private SVGStylable outStyle1742;

    private Element outElem1743;
    private Text outText1743;

    private Element outElem1744;
    private Text outText1744;

    private Element outElem1745;
    private SVGStylable outStyle1745;

    private Element outElem1746;
    private SVGStylable outStyle1746;

    private Element outElem1747;
    private SVGStylable outStyle1747;

    private Element outElem1748;
    private Text outText1748;

    private Element outElem1749;
    private Text outText1749;

    private Element outElem1750;
    private SVGStylable outStyle1750;

    private Element outElem1751;
    private SVGStylable outStyle1751;

    private Element outElem1752;
    private SVGStylable outStyle1752;

    private Element outElem1753;
    private Text outText1753;

    private Element outElem1754;
    private Text outText1754;

    private Element outElem1755;
    private SVGStylable outStyle1755;

    private Element outElem1756;
    private SVGStylable outStyle1756;

    private Element outElem1757;
    private SVGStylable outStyle1757;

    private Element outElem1758;
    private SVGStylable outStyle1758;

    private Element outElem1759;
    private SVGStylable outStyle1759;

    private Element outElem1760;
    private SVGStylable outStyle1760;

    private Element outElem1761;
    private SVGStylable outStyle1761;

    private Element outElem1762;
    private SVGStylable outStyle1762;

    private Element outElem1763;
    private SVGStylable outStyle1763;

    private Element outElem1764;
    private SVGStylable outStyle1764;

    private Element outElem1765;
    private SVGStylable outStyle1765;

    private Element outElem1766;
    private SVGStylable outStyle1766;

    private Element outElem1767;
    private SVGStylable outStyle1767;

    private Element outElem1768;
    private SVGStylable outStyle1768;

    private Element outElem1769;
    private SVGStylable outStyle1769;

    private Element outElem1770;
    private SVGStylable outStyle1770;

    private Element outElem1771;
    private SVGStylable outStyle1771;

    private Element outElem1772;
    private SVGStylable outStyle1772;

    private Element outElem1773;
    private SVGStylable outStyle1773;

    private Element outElem1774;
    private SVGStylable outStyle1774;

    private Element outElem1775;
    private SVGStylable outStyle1775;

    private Element outElem1776;
    private SVGStylable outStyle1776;

    private Element outElem1777;
    private SVGStylable outStyle1777;

    private Element outElem1778;
    private SVGStylable outStyle1778;

    private Element outElem1779;
    private SVGStylable outStyle1779;

    private Element outElem1780;
    private SVGStylable outStyle1780;

    private Element outElem1781;
    private SVGStylable outStyle1781;

    private Element outElem1782;
    private SVGStylable outStyle1782;

    private Element outElem1783;
    private SVGStylable outStyle1783;

    private Element outElem1784;
    private SVGStylable outStyle1784;

    private Element outElem1785;
    private SVGStylable outStyle1785;

    private Element outElem1786;
    private SVGStylable outStyle1786;

    private Element outElem1787;
    private SVGStylable outStyle1787;

    private Element outElem1788;
    private SVGStylable outStyle1788;

    private Element outElem1789;
    private SVGStylable outStyle1789;

    private Element outElem1790;
    private SVGStylable outStyle1790;

    private Element outElem1791;
    private SVGStylable outStyle1791;

    private Element outElem1792;
    private SVGStylable outStyle1792;

    private Element outElem1793;
    private SVGStylable outStyle1793;

    private Element outElem1794;
    private SVGStylable outStyle1794;

    private Element outElem1795;
    private SVGStylable outStyle1795;

    private Element outElem1796;
    private SVGStylable outStyle1796;

    private Element outElem1797;
    private SVGStylable outStyle1797;

    private Element outElem1798;
    private SVGStylable outStyle1798;

    private Element outElem1799;
    private SVGStylable outStyle1799;

    private Element outElem1800;
    private SVGStylable outStyle1800;

    private Element outElem1801;
    private SVGStylable outStyle1801;

    private Element outElem1802;
    private SVGStylable outStyle1802;

    private Element outElem1803;
    private SVGStylable outStyle1803;

    private Element outElem1804;
    private SVGStylable outStyle1804;

    private Element outElem1805;
    private SVGStylable outStyle1805;

    private Element outElem1806;
    private SVGStylable outStyle1806;

    private Element outElem1807;
    private SVGStylable outStyle1807;

    private Element outElem1808;
    private SVGStylable outStyle1808;

    private Element outElem1809;
    private SVGStylable outStyle1809;

    private Element outElem1810;
    private SVGStylable outStyle1810;

    private Element outElem1811;
    private SVGStylable outStyle1811;

    private Element outElem1812;
    private SVGStylable outStyle1812;

    private Element outElem1813;
    private SVGStylable outStyle1813;

    private Element outElem1814;
    private SVGStylable outStyle1814;

    private Element outElem1815;
    private SVGStylable outStyle1815;

    private Element outElem1816;
    private SVGStylable outStyle1816;

    private Element outElem1817;
    private SVGStylable outStyle1817;

    private Element outElem1818;
    private SVGStylable outStyle1818;

    private Element outElem1819;
    private SVGStylable outStyle1819;

    private Element outElem1820;
    private SVGStylable outStyle1820;

    private Element outElem1821;
    private SVGStylable outStyle1821;

    private Element outElem1822;
    private SVGStylable outStyle1822;

    private Element outElem1823;
    private SVGStylable outStyle1823;

    private Element outElem1824;
    private Text outText1824;

    private Element outElem1825;
    private Text outText1825;

    private Element outElem1826;
    private SVGStylable outStyle1826;

    private Element outElem1827;
    private SVGStylable outStyle1827;

    private Element outElem1828;
    private SVGStylable outStyle1828;

    private Element outElem1829;
    private Text outText1829;

    private Element outElem1830;
    private Text outText1830;

    private Element outElem1831;
    private SVGStylable outStyle1831;

    private Element outElem1832;
    private SVGStylable outStyle1832;

    private Element outElem1833;
    private SVGStylable outStyle1833;

    private Element outElem1834;
    private SVGStylable outStyle1834;

    @Override
    public String getSvgRelPath() {
        return "SVG_standardized_GUI_EHT.svg";
    }

    @Override
    public String getSvgAbsPath() {
        return "C:\\Users\\s137821\\Documents\\runtime-EclipseApplication\\GeneriekBedienbaar Simulatie\\GUI\\SVG_standardized_GUI_EHT.svg";
    }

    @Override
    protected int getCopyCount() {
        return 548;
    }

    @Override
    protected boolean applyCopy(int idx) {
        switch (idx) {
            case 0: return applyCopy("Aanduiding_tunnel_buis", "", "_rechter_buis");
            case 1: return applyCopy("Knop_drop-down_menu_verkeersbuis_states", "", "_rechter_buis");
            case 2: return applyCopy("drop_down_menu_stand_buis", "", "_rechter_buis");
            case 3: return applyCopy("Groep_indicatie_buis_open_of_dicht", "", "_rechter_buis");
            case 4: return applyCopy("primaire_bediening_drop_down_vri", "", "_rechter_buis");
            case 5: return applyCopy("knoppen_primaire_bediening_normaal", "", "_rechter_buis");
            case 6: return applyCopy("knoppen_primaire_bediening_niet_beschikbaar", "", "_rechter_buis");
            case 7: return applyCopy("knoppen_primaire_bediening_ingedrukt", "", "_rechter_buis");
            case 8: return applyCopy("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar", "", "_rechter_buis");
            case 9: return applyCopy("pop_up_bevestigen_calamiteit", "", "_rechter_buis");
            case 10: return applyCopy("Aanduiding_tunnel_buis", "", "_linker_buis");
            case 11: return applyCopy("Knop_drop-down_menu_verkeersbuis_states", "", "_linker_buis");
            case 12: return applyCopy("drop_down_menu_stand_buis", "", "_linker_buis");
            case 13: return applyCopy("Groep_indicatie_buis_open_of_dicht", "", "_linker_buis");
            case 14: return applyCopy("primaire_bediening_drop_down_vri", "", "_linker_buis");
            case 15: return applyCopy("knoppen_primaire_bediening_normaal", "", "_linker_buis");
            case 16: return applyCopy("knoppen_primaire_bediening_niet_beschikbaar", "", "_linker_buis");
            case 17: return applyCopy("knoppen_primaire_bediening_ingedrukt", "", "_linker_buis");
            case 18: return applyCopy("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar", "", "_linker_buis");
            case 19: return applyCopy("pop_up_bevestigen_calamiteit", "", "_linker_buis");
            case 20: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_1");
            case 21: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_2");
            case 22: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_3");
            case 23: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_4");
            case 24: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_5");
            case 25: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_6");
            case 26: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_7");
            case 27: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_8");
            case 28: return applyCopy("keuze_sectie_voor_detail_plattegrond", "", "_sectie_9");
            case 29: return applyCopy("achtergrond_overzichts_plattegrond", "", "_rechter_buis");
            case 30: return applyCopy("weg_binnen_tunnel", "", "_rechter_buis");
            case 31: return applyCopy("punt_richtingspijl_links", "", "_rechter_buis");
            case 32: return applyCopy("horizontaal_richtingspijl", "", "_rechter_buis");
            case 33: return applyCopy("Naam_buis", "", "_op_rechter_buis");
            case 34: return applyCopy("verkeerslicht_overzichtsplattengrond", "", "_rechter_buis");
            case 35: return applyCopy("slagboom_overzichtsplattengrond", "", "_rechter_buis");
            case 36: return applyCopy("slagboom_dicht_overzichtsplattegrond", "", "_rechter_buis");
            case 37: return applyCopy("verkeerskundigalarm_plattegrond", "", "_rechter_buis");
            case 38: return applyCopy("geselecteerde_camera_overzichtsplattegrond_rechts_gericht", "", "_camera1_rb");
            case 39: return applyCopy("geselecteerde_camera_overzichtsplattegrond_rechts_gericht", "", "_camera2_rb");
            case 40: return applyCopy("geselecteerde_camera_overzichtsplattegrond_links_gericht", "", "_camera3_rb");
            case 41: return applyCopy("geselecteerde_camera_overzichtsplattegrond_rechts_gericht", "", "_camera4_rb");
            case 42: return applyCopy("geselecteerde_camera_overzichtsplattegrond_links_gericht", "", "_camera5_rb");
            case 43: return applyCopy("geselecteerde_camera_overzichtsplattegrond_rechts_gericht", "", "_camera6_rb");
            case 44: return applyCopy("achtergrond_overzichts_plattegrond", "", "_linker_buis");
            case 45: return applyCopy("weg_binnen_tunnel", "", "_linker_buis");
            case 46: return applyCopy("punt_richtingspijl_rechts", "", "_linker_buis");
            case 47: return applyCopy("horizontaal_richtingspijl", "", "_linker_buis");
            case 48: return applyCopy("Naam_buis", "", "_op_linker_buis");
            case 49: return applyCopy("verkeerslicht_overzichtsplattengrond", "", "_linker_buis");
            case 50: return applyCopy("slagboom_overzichtsplattengrond", "", "_linker_buis");
            case 51: return applyCopy("slagboom_dicht_overzichtsplattegrond", "", "_linker_buis");
            case 52: return applyCopy("geselecteerde_camera_overzichtsplattegrond_links_gericht", "", "_camera1_lb");
            case 53: return applyCopy("geselecteerde_camera_overzichtsplattegrond_links_gericht", "", "_camera2_lb");
            case 54: return applyCopy("geselecteerde_camera_overzichtsplattegrond_rechts_gericht", "", "_camera3_lb");
            case 55: return applyCopy("geselecteerde_camera_overzichtsplattegrond_links_gericht", "", "_camera4_lb");
            case 56: return applyCopy("geselecteerde_camera_overzichtsplattegrond_rechts_gericht", "", "_camera5_lb");
            case 57: return applyCopy("geselecteerde_camera_overzichtsplattegrond_links_gericht", "", "_camera6_lb");
            case 58: return applyCopy("active_tab_systemen_en_detecties", "", "_rechter_buis");
            case 59: return applyCopy("inactive_tab_systemen_en_detecties", "", "_rechter_buis");
            case 60: return applyCopy("active_tab_systemen_en_detecties", "", "_linker_buis");
            case 61: return applyCopy("inactive_tab_systemen_en_detecties", "", "_linker_buis");
            case 62: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_buis_rechter_buis");
            case 63: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_vluchtroute_rechter_buis");
            case 64: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_tunnel_rechter_buis");
            case 65: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_verkeer_rechter_buis");
            case 66: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_detecties_rechter_buis");
            case 67: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_overig_rechter_buis");
            case 68: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_ventilatie_rechter_buis");
            case 69: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_verlichting_rechter_buis");
            case 70: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_CCTV_rechter_buis");
            case 71: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Beeld_HVD_rechter_buis");
            case 72: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Indicatie_geluidsbakens_rechter_buis");
            case 73: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_vergrendeling_rechter_buis");
            case 74: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Vluchtdeuren_rechter_buis");
            case 75: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Kopdeur_rechter_buis");
            case 76: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Dyn_Vluchtroute_rechter_buis");
            case 77: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Overdruk_rechter_buis");
            case 78: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Licht_rechter_buis");
            case 79: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Blusvoorziening_rechter_buis");
            case 80: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Vloeistofafvoer_rechter_buis");
            case 81: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Omroep_HF_rechter_buis");
            case 82: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Intercom_rechter_buis");
            case 83: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Bediening_rechter_buis");
            case 84: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_CCTV_tunnel_rechter_buis");
            case 85: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Brandmelding_dienstruimten_rechter_buis");
            case 86: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Waarschuwing_dienstruimten_rechter_buis");
            case 87: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_VRI_Afsluitboom_rechter_buis");
            case 88: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Cado_hekken_rechter_buis");
            case 89: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Veva_Beba_rechter_buis");
            case 90: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Tunnelbuis_Wi_rechter_buis");
            case 91: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Hoogte_rechter_buis");
            case 92: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_SOS_rechter_buis");
            case 93: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Snelheid_laag_rechter_buis");
            case 94: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Stilstand_rechter_buis");
            case 95: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Spookrijder_rechter_buis");
            case 96: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Zicht_rechter_buis");
            case 97: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Hulppost_rechter_buis");
            case 98: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Deur_rechter_buis");
            case 99: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Blusser_rechter_buis");
            case 100: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Haspel_rechter_buis");
            case 101: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Noodtelefoon_rechter_buis");
            case 102: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_C2000_rechter_buis");
            case 103: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Telefoon_rechter_buis");
            case 104: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_GMK_beelden_rechter_buis");
            case 105: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_buis_linker_buis");
            case 106: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_vluchtroute_linker_buis");
            case 107: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_tunnel_linker_buis");
            case 108: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_verkeer_linker_buis");
            case 109: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_detecties_linker_buis");
            case 110: return applyCopy("titel_blokken_overzicht_systemen_en_detecties", "", "_overig_linker_buis");
            case 111: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_ventilatie_linker_buis");
            case 112: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_verlichting_linker_buis");
            case 113: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_CCTV_linker_buis");
            case 114: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Beeld_HVD_linker_buis");
            case 115: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Indicatie_geluidsbakens_linker_buis");
            case 116: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_vergrendeling_linker_buis");
            case 117: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Vluchtdeuren_linker_buis");
            case 118: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Kopdeur_linker_buis");
            case 119: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Dyn_Vluchtroute_linker_buis");
            case 120: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Overdruk_linker_buis");
            case 121: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Licht_linker_buis");
            case 122: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Blusvoorziening_linker_buis");
            case 123: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Vloeistofafvoer_linker_buis");
            case 124: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Omroep_HF_linker_buis");
            case 125: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Intercom_linker_buis");
            case 126: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Bediening_linker_buis");
            case 127: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_CCTV_tunnel_linker_buis");
            case 128: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Brandmelding_dienstruimten_linker_buis");
            case 129: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Waarschuwing_dienstruimten_linker_buis");
            case 130: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_VRI_Afsluitboom_linker_buis");
            case 131: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Cado_hekken_linker_buis");
            case 132: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Veva_Beba_linker_buis");
            case 133: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Tunnelbuis_Wi_linker_buis");
            case 134: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Hoogte_linker_buis");
            case 135: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_SOS_linker_buis");
            case 136: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Snelheid_laag_linker_buis");
            case 137: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Stilstand_linker_buis");
            case 138: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Spookrijder_linker_buis");
            case 139: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Zicht_linker_buis");
            case 140: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Hulppost_linker_buis");
            case 141: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Deur_linker_buis");
            case 142: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Blusser_linker_buis");
            case 143: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Haspel_linker_buis");
            case 144: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Noodtelefoon_linker_buis");
            case 145: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_C2000_linker_buis");
            case 146: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_Telefoon_linker_buis");
            case 147: return applyCopy("blokken_overzicht_systemen_en_detecties", "", "_GMK_beelden_linker_buis");
            case 148: return applyCopy("overzicht_systemen_en_detecties_ventilatie", "", "_rechter_buis");
            case 149: return applyCopy("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie", "", "_rechter_buis");
            case 150: return applyCopy("overzicht_systemen_en_detecties_drop_down_richting_ventilatie", "", "_rechter_buis");
            case 151: return applyCopy("overzicht_systemen_en_detecties_verlichting", "", "_rechter_buis");
            case 152: return applyCopy("overzicht_systemen_en_detecties_verlichting_dropdown_standen", "", "_rechter_buis");
            case 153: return applyCopy("overzicht_systemen_en_detecties_vluchtdeurindicatie", "", "_rechter_buis");
            case 154: return applyCopy("overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie", "", "_rechter_buis");
            case 155: return applyCopy("overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie", "", "_rechter_buis");
            case 156: return applyCopy("overzicht_systemen_en_detecties_vluchtdeuren", "", "_rechter_buis");
            case 157: return applyCopy("overzicht_systemen_en_detecties_dynamische_vluchtroute", "", "_rechter_buis");
            case 158: return applyCopy("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand", "", "_rechter_buis");
            case 159: return applyCopy("overzicht_systemen_en_detecties_overdruk_veilige_ruimte", "", "_rechter_buis");
            case 160: return applyCopy("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand", "", "_rechter_buis");
            case 161: return applyCopy("overzicht_systemen_en_detecties_verlichting_veilige_ruimte", "", "_rechter_buis");
            case 162: return applyCopy("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand", "", "_rechter_buis");
            case 163: return applyCopy("overzicht_systemen_en_detecties_bluswatervoorziening", "", "_rechter_buis");
            case 164: return applyCopy("overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand", "", "_rechter_buis");
            case 165: return applyCopy("overzicht_systemen_en_detecties_vloeistofafvoer", "", "_rechter_buis");
            case 166: return applyCopy("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand", "", "_rechter_buis");
            case 167: return applyCopy("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand", "", "_rechter_buis");
            case 168: return applyCopy("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand", "", "_rechter_buis");
            case 169: return applyCopy("overzicht_systemen_en_detecties_VRI_en_afsluitboom", "", "_rechter_buis");
            case 170: return applyCopy("overzicht_systemen_en_detecties_SOS", "", "_rechter_buis");
            case 171: return applyCopy("overzicht_systemen_en_detecties_hulppost", "", "_rechter_buis");
            case 172: return applyCopy("overzicht_systemen_en_detecties_ventilatie", "", "_linker_buis");
            case 173: return applyCopy("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie", "", "_linker_buis");
            case 174: return applyCopy("overzicht_systemen_en_detecties_drop_down_richting_ventilatie", "", "_linker_buis");
            case 175: return applyCopy("overzicht_systemen_en_detecties_verlichting", "", "_linker_buis");
            case 176: return applyCopy("overzicht_systemen_en_detecties_verlichting_dropdown_standen", "", "_linker_buis");
            case 177: return applyCopy("overzicht_systemen_en_detecties_vluchtdeurindicatie", "", "_linker_buis");
            case 178: return applyCopy("overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie", "", "_linker_buis");
            case 179: return applyCopy("overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie", "", "_linker_buis");
            case 180: return applyCopy("overzicht_systemen_en_detecties_vluchtdeuren", "", "_linker_buis");
            case 181: return applyCopy("overzicht_systemen_en_detecties_dynamische_vluchtroute", "", "_linker_buis");
            case 182: return applyCopy("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand", "", "_linker_buis");
            case 183: return applyCopy("overzicht_systemen_en_detecties_overdruk_veilige_ruimte", "", "_linker_buis");
            case 184: return applyCopy("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand", "", "_linker_buis");
            case 185: return applyCopy("overzicht_systemen_en_detecties_verlichting_veilige_ruimte", "", "_linker_buis");
            case 186: return applyCopy("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand", "", "_linker_buis");
            case 187: return applyCopy("overzicht_systemen_en_detecties_bluswatervoorziening", "", "_linker_buis");
            case 188: return applyCopy("overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand", "", "_linker_buis");
            case 189: return applyCopy("overzicht_systemen_en_detecties_vloeistofafvoer", "", "_linker_buis");
            case 190: return applyCopy("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand", "", "_linker_buis");
            case 191: return applyCopy("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand", "", "_linker_buis");
            case 192: return applyCopy("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand", "", "_linker_buis");
            case 193: return applyCopy("overzicht_systemen_en_detecties_VRI_en_afsluitboom", "", "_linker_buis");
            case 194: return applyCopy("overzicht_systemen_en_detecties_SOS", "", "_linker_buis");
            case 195: return applyCopy("overzicht_systemen_en_detecties_hulppost", "", "_linker_buis");
            case 196: return applyCopy("titel_blok_meldingen", "", "_bevestigde_meldingen");
            case 197: return applyCopy("titel_blok_meldingen", "", "_onbevestigde_meldingen");
            case 198: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen1");
            case 199: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen2");
            case 200: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen3");
            case 201: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen4");
            case 202: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen5");
            case 203: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen6");
            case 204: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen7");
            case 205: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen8");
            case 206: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen9");
            case 207: return applyCopy("blok_meldingen_leeg", "", "_onbevestigde_meldingen10");
            case 208: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen1");
            case 209: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen2");
            case 210: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen3");
            case 211: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen4");
            case 212: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen5");
            case 213: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen6");
            case 214: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen7");
            case 215: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen8");
            case 216: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen9");
            case 217: return applyCopy("blok_meldingen_leeg", "", "_bevestigde_meldingen10");
            case 218: return applyCopy("blok_meldingen", "", "_sos_rechter_buis_onbevestigd");
            case 219: return applyCopy("blok_meldingen", "", "_sos_rechter_buis_bevestigd");
            case 220: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_1_rb_1");
            case 221: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_1_rb_2");
            case 222: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_1_rb_3");
            case 223: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_1_rb_1");
            case 224: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_1_rb_2");
            case 225: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_1_rb_3");
            case 226: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_1_rb_12");
            case 227: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_1_rb_23");
            case 228: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_1");
            case 229: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_1_lb_1");
            case 230: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_1_lb_2");
            case 231: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_1_lb_3");
            case 232: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_1_lb_1");
            case 233: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_1_lb_2");
            case 234: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_1_lb_3");
            case 235: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_1_lb_12");
            case 236: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_1_lb_23");
            case 237: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_1_rb_1");
            case 238: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_1_rb_2");
            case 239: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_1_rb_3");
            case 240: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_1_rb_1");
            case 241: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_1_rb_2");
            case 242: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_1_rb_3");
            case 243: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_1_lb_1");
            case 244: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_1_lb_2");
            case 245: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_1_lb_3");
            case 246: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_1_lb_1");
            case 247: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_1_lb_2");
            case 248: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_1_lb_3");
            case 249: return applyCopy("detail_plattegrond_verkeerslicht_uit", "", "_lb_1");
            case 250: return applyCopy("detail_plattegrond_verkeerslicht_rood", "", "_lb_1");
            case 251: return applyCopy("detail_plattegrond_verkeerslicht_oranje", "", "_lb_1");
            case 252: return applyCopy("detail_plattegrond_verkeerslicht_uit", "", "_lb_2");
            case 253: return applyCopy("detail_plattegrond_verkeerslicht_rood", "", "_lb_2");
            case 254: return applyCopy("detail_plattegrond_verkeerslicht_oranje", "", "_lb_2");
            case 255: return applyCopy("detail_plattegrond_verkeerslicht_uit", "", "_lb_3");
            case 256: return applyCopy("detail_plattegrond_verkeerslicht_rood", "", "_lb_3");
            case 257: return applyCopy("detail_plattegrond_verkeerslicht_oranje", "", "_lb_3");
            case 258: return applyCopy("detail_plattegrond_afsluitboom_open", "", "_lb");
            case 259: return applyCopy("detail_plattegrond_afsluitboom_in_beweging", "", "_lb");
            case 260: return applyCopy("detail_plattegrond_afsluitboom_gesloten", "", "_lb");
            case 261: return applyCopy("detail_plattegrond_actieve_camera_links", "", "1_sectie_1lb");
            case 262: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "1_sectie_1lb");
            case 263: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "6_sectie_1rb");
            case 264: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "6_sectie_1rb");
            case 265: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_2_rb_1");
            case 266: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_2_rb_2");
            case 267: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_2_rb_3");
            case 268: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_2_rb_1");
            case 269: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_2_rb_2");
            case 270: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_2_rb_3");
            case 271: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_2_rb_12");
            case 272: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_2_rb_23");
            case 273: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_2");
            case 274: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_2_lb_1");
            case 275: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_2_lb_2");
            case 276: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_2_lb_3");
            case 277: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_2_lb_1");
            case 278: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_2_lb_2");
            case 279: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_2_lb_3");
            case 280: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_2_lb_12");
            case 281: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_2_lb_23");
            case 282: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_2_rb_1");
            case 283: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_2_rb_2");
            case 284: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_2_rb_3");
            case 285: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_2_rb_1");
            case 286: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_2_rb_2");
            case 287: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_2_rb_3");
            case 288: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_2_lb_1");
            case 289: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_2_lb_2");
            case 290: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_2_lb_3");
            case 291: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_2_lb_1");
            case 292: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_2_lb_2");
            case 293: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_2_lb_3");
            case 294: return applyCopy("detail_plattegrond_actieve_camera_links", "", "1_sectie_2lb");
            case 295: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "1_sectie_2lb");
            case 296: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "6_sectie_2rb");
            case 297: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "6_sectie_2rb");
            case 298: return applyCopy("detail_plattegrond_actieve_camera_links", "", "2_sectie_2lb");
            case 299: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "2_sectie_2lb");
            case 300: return applyCopy("detail_plattegrond_actieve_camera_links", "", "5_sectie_2rb");
            case 301: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "5_sectie_2rb");
            case 302: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_3_rb_1");
            case 303: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_3_rb_2");
            case 304: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_3_rb_3");
            case 305: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_3_rb_12");
            case 306: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_3_rb_23");
            case 307: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_3");
            case 308: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_3_lb_1");
            case 309: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_3_lb_2");
            case 310: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_3_lb_3");
            case 311: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_3_lb_12");
            case 312: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_3_lb_23");
            case 313: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_3_rb_1");
            case 314: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_3_rb_2");
            case 315: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_3_rb_3");
            case 316: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_3_lb_1");
            case 317: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_3_lb_2");
            case 318: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_3_lb_3");
            case 319: return applyCopy("detail_plattegrond_actieve_camera_links", "", "2_sectie_3lb");
            case 320: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "2_sectie_3lb");
            case 321: return applyCopy("detail_plattegrond_actieve_camera_links", "", "5_sectie_3rb");
            case 322: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "5_sectie_3rb");
            case 323: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_4_rb_1");
            case 324: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_4_rb_2");
            case 325: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_4_rb_3");
            case 326: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_4_rb_12");
            case 327: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_4_rb_23");
            case 328: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_4");
            case 329: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_4_lb_1");
            case 330: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_4_lb_2");
            case 331: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_4_lb_3");
            case 332: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_4_lb_12");
            case 333: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_4_lb_23");
            case 334: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_4_rb_1");
            case 335: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_4_rb_2");
            case 336: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_4_rb_3");
            case 337: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_4_lb_1");
            case 338: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_4_lb_2");
            case 339: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_4_lb_3");
            case 340: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "3_sectie_4lb");
            case 341: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "3_sectie_4lb");
            case 342: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "4_sectie_4rb");
            case 343: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "4_sectie_4rb");
            case 344: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omlaag", "", "_sectie_4_rb");
            case 345: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie", "", "_sectie_4_rb");
            case 346: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omhoog", "", "_sectie_4_lb");
            case 347: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie", "", "_sectie_4_lb");
            case 348: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "A_sectie_4_rb");
            case 349: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "A_sectie_4_rb");
            case 350: return applyCopy("detail_plattegrond_hulppostkast_brandslang", "", "A_sectie_4_rb");
            case 351: return applyCopy("detail_plattegrond_hulppostkast_brandslang_detectie", "", "A_sectie_4_rb");
            case 352: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "A_sectie_4_rb");
            case 353: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "A_sectie_4_rb");
            case 354: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "C_sectie_4_rb");
            case 355: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "C_sectie_4_rb");
            case 356: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "C_sectie_4_rb");
            case 357: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "C_sectie_4_rb");
            case 358: return applyCopy("detail_plattegrond_sos_detectie", "", "_sectie_4rb");
            case 359: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_5_rb_1");
            case 360: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_5_rb_2");
            case 361: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_5_rb_3");
            case 362: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_5_rb_12");
            case 363: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_5_rb_23");
            case 364: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_5");
            case 365: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_5_lb_1");
            case 366: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_5_lb_2");
            case 367: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_5_lb_3");
            case 368: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_5_lb_12");
            case 369: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_5_lb_23");
            case 370: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_5_rb_1");
            case 371: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_5_rb_2");
            case 372: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_5_rb_3");
            case 373: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_5_lb_1");
            case 374: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_5_lb_2");
            case 375: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_5_lb_3");
            case 376: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "3_sectie_5lb");
            case 377: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "3_sectie_5lb");
            case 378: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "4_sectie_5rb");
            case 379: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "4_sectie_5rb");
            case 380: return applyCopy("detail_plattegrond_actieve_camera_links", "", "4_sectie_5lb");
            case 381: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "4_sectie_5lb");
            case 382: return applyCopy("detail_plattegrond_actieve_camera_links", "", "3_sectie_5rb");
            case 383: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "3_sectie_5rb");
            case 384: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omlaag", "", "_sectie_5_rb");
            case 385: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie", "", "_sectie_5_rb");
            case 386: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omhoog", "", "_sectie_5_lb");
            case 387: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie", "", "_sectie_5_lb");
            case 388: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "A_sectie_5_rb");
            case 389: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "A_sectie_5_rb");
            case 390: return applyCopy("detail_plattegrond_hulppostkast_brandslang", "", "A_sectie_5_rb");
            case 391: return applyCopy("detail_plattegrond_hulppostkast_brandslang_detectie", "", "A_sectie_5_rb");
            case 392: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "A_sectie_5_rb");
            case 393: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "A_sectie_5_rb");
            case 394: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "A_sectie_5_lb");
            case 395: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "A_sectie_5_lb");
            case 396: return applyCopy("detail_plattegrond_hulppostkast_brandslang", "", "A_sectie_5_lb");
            case 397: return applyCopy("detail_plattegrond_hulppostkast_brandslang_detectie", "", "A_sectie_5_lb");
            case 398: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "A_sectie_5_lb");
            case 399: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "A_sectie_5_lb");
            case 400: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "C_sectie_5_rb");
            case 401: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "C_sectie_5_rb");
            case 402: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "C_sectie_5_rb");
            case 403: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "C_sectie_5_rb");
            case 404: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "C_sectie_5_lb");
            case 405: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "C_sectie_5_lb");
            case 406: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "C_sectie_5_lb");
            case 407: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "C_sectie_5_lb");
            case 408: return applyCopy("detail_plattegrond_sos_detectie", "", "_sectie_5rb");
            case 409: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_6_rb_1");
            case 410: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_6_rb_2");
            case 411: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_6_rb_3");
            case 412: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_6_rb_12");
            case 413: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_6_rb_23");
            case 414: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_6");
            case 415: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_6_lb_1");
            case 416: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_6_lb_2");
            case 417: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_6_lb_3");
            case 418: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_6_lb_12");
            case 419: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_6_lb_23");
            case 420: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_6_rb_1");
            case 421: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_6_rb_2");
            case 422: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_6_rb_3");
            case 423: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_6_lb_1");
            case 424: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_6_lb_2");
            case 425: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_6_lb_3");
            case 426: return applyCopy("detail_plattegrond_actieve_camera_links", "", "4_sectie_6lb");
            case 427: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "4_sectie_6lb");
            case 428: return applyCopy("detail_plattegrond_actieve_camera_links", "", "3_sectie_6rb");
            case 429: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "3_sectie_6rb");
            case 430: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omlaag", "", "_sectie_6_rb");
            case 431: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie", "", "_sectie_6_rb");
            case 432: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omhoog", "", "_sectie_6_lb");
            case 433: return applyCopy("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie", "", "_sectie_6_lb");
            case 434: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "A_sectie_6_lb");
            case 435: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "A_sectie_6_lb");
            case 436: return applyCopy("detail_plattegrond_hulppostkast_brandslang", "", "A_sectie_6_lb");
            case 437: return applyCopy("detail_plattegrond_hulppostkast_brandslang_detectie", "", "A_sectie_6_lb");
            case 438: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "A_sectie_6_lb");
            case 439: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "A_sectie_6_lb");
            case 440: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon", "", "C_sectie_6_lb");
            case 441: return applyCopy("detail_plattegrond_hulppostkast_noodtelefoon_detectie", "", "C_sectie_6_lb");
            case 442: return applyCopy("detail_plattegrond_hulppostkast_handblusser", "", "C_sectie_6_lb");
            case 443: return applyCopy("detail_plattegrond_hulppostkast_handblusser_detectie", "", "C_sectie_6_lb");
            case 444: return applyCopy("detail_plattegrond_sos_detectie", "", "_sectie_6rb");
            case 445: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_7_rb_1");
            case 446: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_7_rb_2");
            case 447: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_7_rb_3");
            case 448: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_7_rb_12");
            case 449: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_7_rb_23");
            case 450: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_7");
            case 451: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_7_lb_1");
            case 452: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_7_lb_2");
            case 453: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_7_lb_3");
            case 454: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_7_lb_12");
            case 455: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_7_lb_23");
            case 456: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_7_rb_1");
            case 457: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_7_rb_2");
            case 458: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_7_rb_3");
            case 459: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_7_lb_1");
            case 460: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_7_lb_2");
            case 461: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_7_lb_3");
            case 462: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "5_sectie_7lb");
            case 463: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "5_sectie_7lb");
            case 464: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "2_sectie_7rb");
            case 465: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "2_sectie_7rb");
            case 466: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_8_rb_1");
            case 467: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_8_rb_2");
            case 468: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_8_rb_3");
            case 469: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_8_rb_1");
            case 470: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_8_rb_2");
            case 471: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_8_rb_3");
            case 472: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_8_rb_12");
            case 473: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_8_rb_23");
            case 474: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_8");
            case 475: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_8_lb_1");
            case 476: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_8_lb_2");
            case 477: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_8_lb_3");
            case 478: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_8_lb_1");
            case 479: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_8_lb_2");
            case 480: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_8_lb_3");
            case 481: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_8_lb_12");
            case 482: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_8_lb_23");
            case 483: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_8_rb_1");
            case 484: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_8_rb_2");
            case 485: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_8_rb_3");
            case 486: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_8_rb_1");
            case 487: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_8_rb_2");
            case 488: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_8_rb_3");
            case 489: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_8_lb_1");
            case 490: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_8_lb_2");
            case 491: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_8_lb_3");
            case 492: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_8_lb_1");
            case 493: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_8_lb_2");
            case 494: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_8_lb_3");
            case 495: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "5_sectie_8lb");
            case 496: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "5_sectie_8lb");
            case 497: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "2_sectie_8rb");
            case 498: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "2_sectie_8rb");
            case 499: return applyCopy("detail_plattegrond_actieve_camera_links", "", "6_sectie_8lb");
            case 500: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "6_sectie_8lb");
            case 501: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "1_sectie_8rb");
            case 502: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "1_sectie_8rb");
            case 503: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_9_rb_1");
            case 504: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_9_rb_2");
            case 505: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_9_rb_3");
            case 506: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_9_rb_1");
            case 507: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_9_rb_2");
            case 508: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_9_rb_3");
            case 509: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_9_rb_12");
            case 510: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_9_rb_23");
            case 511: return applyCopy("detail_midden_tunnel_kanaal", "", "_sectie_9");
            case 512: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_9_lb_1");
            case 513: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_9_lb_2");
            case 514: return applyCopy("detail_open_rijstrook_binnen_tunnel", "", "_sectie_9_lb_3");
            case 515: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_9_lb_1");
            case 516: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_9_lb_2");
            case 517: return applyCopy("detail_open_rijstrook_buiten_tunnel", "", "_sectie_9_lb_3");
            case 518: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_9_lb_12");
            case 519: return applyCopy("detail_stippellijn_rijstrook_scheiding", "", "_sectie_9_lb_23");
            case 520: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_9_rb_1");
            case 521: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_9_rb_2");
            case 522: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_9_rb_3");
            case 523: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_9_rb_1");
            case 524: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_9_rb_2");
            case 525: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_9_rb_3");
            case 526: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_9_lb_1");
            case 527: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_9_lb_2");
            case 528: return applyCopy("detail_afgesloten_rijstrook_binnen_tunnel", "", "_sectie_9_lb_3");
            case 529: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_9_lb_1");
            case 530: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_9_lb_2");
            case 531: return applyCopy("detail_afgesloten_rijstrook_buiten_tunnel", "", "_sectie_9_lb_3");
            case 532: return applyCopy("detail_plattegrond_verkeerslicht_uit", "", "_rb_1");
            case 533: return applyCopy("detail_plattegrond_verkeerslicht_rood", "", "_rb_1");
            case 534: return applyCopy("detail_plattegrond_verkeerslicht_oranje", "", "_rb_1");
            case 535: return applyCopy("detail_plattegrond_verkeerslicht_uit", "", "_rb_2");
            case 536: return applyCopy("detail_plattegrond_verkeerslicht_rood", "", "_rb_2");
            case 537: return applyCopy("detail_plattegrond_verkeerslicht_oranje", "", "_rb_2");
            case 538: return applyCopy("detail_plattegrond_verkeerslicht_uit", "", "_rb_3");
            case 539: return applyCopy("detail_plattegrond_verkeerslicht_rood", "", "_rb_3");
            case 540: return applyCopy("detail_plattegrond_verkeerslicht_oranje", "", "_rb_3");
            case 541: return applyCopy("detail_plattegrond_afsluitboom_open", "", "_rb");
            case 542: return applyCopy("detail_plattegrond_afsluitboom_in_beweging", "", "_rb");
            case 543: return applyCopy("detail_plattegrond_afsluitboom_gesloten", "", "_rb");
            case 544: return applyCopy("detail_plattegrond_actieve_camera_links", "", "6_sectie_9lb");
            case 545: return applyCopy("detail_plattegrond_inactieve_camera_links", "", "6_sectie_9lb");
            case 546: return applyCopy("detail_plattegrond_actieve_camera_rechts", "", "1_sectie_9rb");
            case 547: return applyCopy("detail_plattegrond_inactieve_camera_rechts", "", "1_sectie_9rb");
        }
        throw new RuntimeException("Unknown idx: " + idx);
    }

    @Override
    protected void applyMoves() {
        applyMove("Naam_tunnel", 10.0, 5.0);
        applyMove("Aanduiding_tunnel_buis_rechter_buis", 20.0, 80.0);
        applyMove("Knop_drop-down_menu_verkeersbuis_states_rechter_buis", 66.0, 103.0);
        applyMove("drop_down_menu_stand_buis_rechter_buis", 110.0, 131.0);
        applyMove("Groep_indicatie_buis_open_of_dicht_rechter_buis", 250.0, 103.0);
        applyMove("primaire_bediening_drop_down_vri_rechter_buis", 376.0, 142.0);
        applyMove("knoppen_primaire_bediening_normaal_rechter_buis", 25.0, 98.0);
        applyMove("knoppen_primaire_bediening_niet_beschikbaar_rechter_buis", 25.0, 98.0);
        applyMove("knoppen_primaire_bediening_ingedrukt_rechter_buis", 25.0, 98.0);
        applyMove("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_rechter_buis", 25.0, 98.0);
        applyMove("pop_up_bevestigen_calamiteit_rechter_buis", 25.0, 140.0);
        applyMove("Aanduiding_tunnel_buis_linker_buis", 20.0, 230.0);
        applyMove("Knop_drop-down_menu_verkeersbuis_states_linker_buis", 66.0, 253.0);
        applyMove("drop_down_menu_stand_buis_linker_buis", 110.0, 281.0);
        applyMove("Groep_indicatie_buis_open_of_dicht_linker_buis", 250.0, 253.0);
        applyMove("primaire_bediening_drop_down_vri_linker_buis", 376.0, 292.0);
        applyMove("knoppen_primaire_bediening_normaal_linker_buis", 25.0, 248.0);
        applyMove("knoppen_primaire_bediening_niet_beschikbaar_linker_buis", 25.0, 248.0);
        applyMove("knoppen_primaire_bediening_ingedrukt_linker_buis", 25.0, 248.0);
        applyMove("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_linker_buis", 25.0, 248.0);
        applyMove("pop_up_bevestigen_calamiteit_linker_buis", 25.0, 290.0);
        applyMove("Midden_tunnel_kanaal_overzichtsplattengrond", 775.0, 150.0);
        applyMove("aanduiding_richting_tunnel_buis_rechter_buis", 725.0, 71.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_1", 625.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_2", 725.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_3", 825.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_4", 925.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_5", 1025.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_6", 1125.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_7", 1225.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_8", 1325.0, 49.0);
        applyMove("keuze_sectie_voor_detail_plattegrond_sectie_9", 1425.0, 49.0);
        applyMove("achtergrond_overzichts_plattegrond_rechter_buis", 625.0, 70.0);
        applyMove("weg_binnen_tunnel_rechter_buis", 775.0, 71.0);
        applyMove("punt_richtingspijl_links_rechter_buis", 1410.0, 49.0);
        applyMove("horizontaal_richtingspijl_rechter_buis", 1412.0, 56.0);
        applyMove("Naam_buis_op_rechter_buis", 1455.0, 55.0);
        applyMove("verkeerslicht_overzichtsplattengrond_rechter_buis", 1570.0, 100.0);
        applyMove("slagboom_overzichtsplattengrond_rechter_buis", 1550.0, 67.0);
        applyMove("slagboom_dicht_overzichtsplattegrond_rechter_buis", 1550.0, 67.0);
        applyMove("verkeerskundigalarm_plattegrond_rechter_buis", 1125.0, 107.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera1_rb", 1500.0, 107.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera2_rb", 1350.0, 107.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera3_rb", 1200.0, 107.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera4_rb", 1050.0, 107.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera5_rb", 900.0, 107.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera6_rb", 650.0, 107.0);
        applyMove("aanduiding_richting_tunnel_buis_linker_buis", 1475.0, 221.0);
        applyMove("achtergrond_overzichts_plattegrond_linker_buis", 625.0, 220.0);
        applyMove("weg_binnen_tunnel_linker_buis", 775.0, 221.0);
        applyMove("punt_richtingspijl_rechts_linker_buis", 815.0, 309.0);
        applyMove("horizontaal_richtingspijl_linker_buis", 800.0, 316.0);
        applyMove("Naam_buis_op_linker_buis", 775.0, 310.0);
        applyMove("verkeerslicht_overzichtsplattengrond_linker_buis", 675.0, 250.0);
        applyMove("slagboom_overzichtsplattengrond_linker_buis", 695.0, 293.0);
        applyMove("slagboom_dicht_overzichtsplattegrond_linker_buis", 695.0, 209.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera1_lb", 750.0, 257.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera2_lb", 900.0, 257.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera3_lb", 1050.0, 257.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera4_lb", 1200.0, 257.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera5_lb", 1350.0, 257.0);
        applyMove("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera6_lb", 1570.0, 257.0);
        applyMove("active_tab_systemen_en_detecties_rechter_buis", 10.0, 310.0);
        applyMove("inactive_tab_systemen_en_detecties_rechter_buis", 10.0, 310.0);
        applyMove("active_tab_systemen_en_detecties_linker_buis", 10.0, 420.0);
        applyMove("inactive_tab_systemen_en_detecties_linker_buis", 10.0, 420.0);
        applyMove("overzicht_systemen_en_detecties_ventilatie_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_rechter_buis", 528.0, 430.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rechter_buis", 520.0, 450.0);
        applyMove("overzicht_systemen_en_detecties_verlichting_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_verlichting_dropdown_standen_rechter_buis", 528.0, 450.0);
        applyMove("overzicht_systemen_en_detecties_vluchtdeurindicatie_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_rechter_buis", 528.0, 450.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_rechter_buis", 520.0, 500.0);
        applyMove("overzicht_systemen_en_detecties_vluchtdeuren_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_dynamische_vluchtroute_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_rechter_buis", 502.0, 432.0);
        applyMove("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_rechter_buis", 502.0, 432.0);
        applyMove("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_rechter_buis", 502.0, 432.0);
        applyMove("overzicht_systemen_en_detecties_bluswatervoorziening_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_rechter_buis", 552.0, 452.0);
        applyMove("overzicht_systemen_en_detecties_vloeistofafvoer_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_rechter_buis", 552.0, 452.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_rechter_buis", 552.0, 512.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_rechter_buis", 552.0, 562.0);
        applyMove("overzicht_systemen_en_detecties_VRI_en_afsluitboom_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_SOS_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_hulppost_rechter_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_ventilatie_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_linker_buis", 528.0, 430.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_linker_buis", 520.0, 450.0);
        applyMove("overzicht_systemen_en_detecties_verlichting_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_verlichting_dropdown_standen_linker_buis", 528.0, 450.0);
        applyMove("overzicht_systemen_en_detecties_vluchtdeurindicatie_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_linker_buis", 528.0, 450.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_linker_buis", 520.0, 500.0);
        applyMove("overzicht_systemen_en_detecties_vluchtdeuren_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_dynamische_vluchtroute_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_linker_buis", 502.0, 432.0);
        applyMove("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_linker_buis", 502.0, 432.0);
        applyMove("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_linker_buis", 502.0, 432.0);
        applyMove("overzicht_systemen_en_detecties_bluswatervoorziening_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_linker_buis", 552.0, 452.0);
        applyMove("overzicht_systemen_en_detecties_vloeistofafvoer_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_linker_buis", 552.0, 452.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_linker_buis", 552.0, 512.0);
        applyMove("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_linker_buis", 552.0, 562.0);
        applyMove("overzicht_systemen_en_detecties_VRI_en_afsluitboom_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_SOS_linker_buis", 345.0, 370.0);
        applyMove("overzicht_systemen_en_detecties_hulppost_linker_buis", 345.0, 370.0);
        applyMove("tab_detailplattegrond_inactief", 825.0, 1015.0);
        applyMove("tab_detailplattegrond_actief", 825.0, 1000.0);
        applyMove("tab_meldingen_inactief", 695.0, 1015.0);
        applyMove("tab_meldingen_actief", 695.0, 1000.0);
        applyMove("knoppen_meldingen_normaal", 1300.0, 370.0);
        applyMove("knoppen_meldingen_niet_bedienbaar", 1300.0, 370.0);
        applyMove("knoppen_meldingen_ingedrukt", 1300.0, 370.0);
        applyMove("knoppen_meldingen_ingedrukt_niet_bedienbaar", 1570.0, 370.0);
        applyMove("titel_blok_meldingen_bevestigde_meldingen", 730.0, 420.0);
        applyMove("titel_blok_meldingen_onbevestigde_meldingen", 730.0, 690.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen1", 730.0, 440.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen2", 730.0, 460.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen3", 730.0, 480.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen4", 730.0, 500.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen5", 730.0, 520.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen6", 730.0, 540.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen7", 730.0, 560.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen8", 730.0, 580.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen9", 730.0, 600.0);
        applyMove("blok_meldingen_leeg_onbevestigde_meldingen10", 730.0, 620.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen1", 730.0, 710.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen2", 730.0, 730.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen3", 730.0, 750.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen4", 730.0, 770.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen5", 730.0, 790.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen6", 730.0, 810.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen7", 730.0, 830.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen8", 730.0, 850.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen9", 730.0, 870.0);
        applyMove("blok_meldingen_leeg_bevestigde_meldingen10", 730.0, 890.0);
        applyMove("blok_meldingen_sos_rechter_buis_onbevestigd", 730.0, 440.0);
        applyMove("blok_meldingen_sos_rechter_buis_bevestigd", 730.0, 710.0);
        applyMove("detail_plattegrond_verkeerslicht_uit_lb_1", 1000.0, 784.0);
        applyMove("detail_plattegrond_verkeerslicht_rood_lb_1", 1000.0, 784.0);
        applyMove("detail_plattegrond_verkeerslicht_oranje_lb_1", 1000.0, 784.0);
        applyMove("detail_plattegrond_verkeerslicht_uit_lb_2", 1000.0, 834.0);
        applyMove("detail_plattegrond_verkeerslicht_rood_lb_2", 1000.0, 834.0);
        applyMove("detail_plattegrond_verkeerslicht_oranje_lb_2", 1000.0, 834.0);
        applyMove("detail_plattegrond_verkeerslicht_uit_lb_3", 1000.0, 884.0);
        applyMove("detail_plattegrond_verkeerslicht_rood_lb_3", 1000.0, 884.0);
        applyMove("detail_plattegrond_verkeerslicht_oranje_lb_3", 1000.0, 884.0);
        applyMove("detail_plattegrond_afsluitboom_open_lb", 1030.0, 774.0);
        applyMove("detail_plattegrond_afsluitboom_in_beweging_lb", 1030.0, 774.0);
        applyMove("detail_plattegrond_afsluitboom_gesloten_lb", 1030.0, 774.0);
        applyMove("detail_plattegrond_actieve_camera_links1_sectie_1lb", 1300.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links1_sectie_1lb", 1300.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts6_sectie_1rb", 1300.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts6_sectie_1rb", 1300.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_links1_sectie_2lb", 900.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links1_sectie_2lb", 900.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts6_sectie_2rb", 900.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts6_sectie_2rb", 900.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_links2_sectie_2lb", 1500.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links2_sectie_2lb", 1500.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_links5_sectie_2rb", 1500.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_links5_sectie_2rb", 1500.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_links2_sectie_3lb", 1100.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links2_sectie_3lb", 1100.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_links5_sectie_3rb", 1100.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_links5_sectie_3rb", 1100.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_rechts3_sectie_4lb", 1300.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts3_sectie_4lb", 1300.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts4_sectie_4rb", 1300.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts4_sectie_4rb", 1300.0, 650.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_4_rb", 1566.0, 713.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_4_rb", 1566.0, 713.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_4_lb", 1566.0, 763.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_4_lb", 1566.0, 763.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_4_rb", 1490.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_4_rb", 1490.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_brandslangA_sectie_4_rb", 1506.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_4_rb", 1506.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserA_sectie_4_rb", 1522.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_4_rb", 1522.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_4_rb", 1490.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_4_rb", 1490.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserC_sectie_4_rb", 1506.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_4_rb", 1506.0, 568.0);
        applyMove("detail_plattegrond_sos_detectie_sectie_4rb", 1400.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_rechts3_sectie_5lb", 900.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts3_sectie_5lb", 900.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts4_sectie_5rb", 900.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts4_sectie_5rb", 900.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_links4_sectie_5lb", 1500.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links4_sectie_5lb", 1500.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_links3_sectie_5rb", 1500.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_links3_sectie_5rb", 1500.0, 650.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_5_rb", 1166.0, 713.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_5_rb", 1166.0, 713.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_5_lb", 1166.0, 763.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_5_lb", 1166.0, 763.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_rb", 1090.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_rb", 1090.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_brandslangA_sectie_5_rb", 1106.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_rb", 1106.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserA_sectie_5_rb", 1122.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_rb", 1122.0, 718.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_lb", 1260.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_lb", 1260.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_brandslangA_sectie_5_lb", 1276.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_lb", 1276.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserA_sectie_5_lb", 1292.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_lb", 1292.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_rb", 1090.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_rb", 1090.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserC_sectie_5_rb", 1106.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_rb", 1106.0, 568.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_lb", 1260.0, 918.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_lb", 1260.0, 918.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserC_sectie_5_lb", 1276.0, 918.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_lb", 1276.0, 918.0);
        applyMove("detail_plattegrond_sos_detectie_sectie_5rb", 1000.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_links4_sectie_6lb", 1100.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links4_sectie_6lb", 1100.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_links3_sectie_6rb", 1100.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_links3_sectie_6rb", 1100.0, 650.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_6_rb", 766.0, 713.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_6_rb", 766.0, 713.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_6_lb", 766.0, 763.0);
        applyMove("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_6_lb", 766.0, 763.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_6_lb", 860.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_6_lb", 1260.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_brandslangA_sectie_6_lb", 876.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_6_lb", 1276.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserA_sectie_6_lb", 892.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_6_lb", 1292.0, 768.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_6_lb", 860.0, 918.0);
        applyMove("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_6_lb", 860.0, 918.0);
        applyMove("detail_plattegrond_hulppostkast_handblusserC_sectie_6_lb", 876.0, 918.0);
        applyMove("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_6_lb", 876.0, 918.0);
        applyMove("detail_plattegrond_sos_detectie_sectie_6rb", 600.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_rechts5_sectie_7lb", 1300.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts5_sectie_7lb", 1300.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts2_sectie_7rb", 1300.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts2_sectie_7rb", 1300.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_rechts5_sectie_8lb", 900.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts5_sectie_8lb", 900.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts2_sectie_8rb", 900.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts2_sectie_8rb", 900.0, 650.0);
        applyMove("detail_plattegrond_actieve_camera_links6_sectie_8lb", 1500.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links6_sectie_8lb", 1500.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts1_sectie_8rb", 1500.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts1_sectie_8rb", 1500.0, 650.0);
        applyMove("detail_plattegrond_verkeerslicht_uit_rb_1", 1400.0, 584.0);
        applyMove("detail_plattegrond_verkeerslicht_rood_rb_1", 1400.0, 584.0);
        applyMove("detail_plattegrond_verkeerslicht_oranje_rb_1", 1400.0, 584.0);
        applyMove("detail_plattegrond_verkeerslicht_uit_rb_2", 1400.0, 634.0);
        applyMove("detail_plattegrond_verkeerslicht_rood_rb_2", 1400.0, 634.0);
        applyMove("detail_plattegrond_verkeerslicht_oranje_rb_2", 1400.0, 634.0);
        applyMove("detail_plattegrond_verkeerslicht_uit_rb_3", 1400.0, 684.0);
        applyMove("detail_plattegrond_verkeerslicht_rood_rb_3", 1400.0, 684.0);
        applyMove("detail_plattegrond_verkeerslicht_oranje_rb_3", 1400.0, 684.0);
        applyMove("detail_plattegrond_afsluitboom_open_rb", 1370.0, 574.0);
        applyMove("detail_plattegrond_afsluitboom_in_beweging_rb", 1370.0, 574.0);
        applyMove("detail_plattegrond_afsluitboom_gesloten_rb", 1370.0, 574.0);
        applyMove("detail_plattegrond_actieve_camera_links6_sectie_9lb", 1100.0, 850.0);
        applyMove("detail_plattegrond_inactieve_camera_links6_sectie_9lb", 1100.0, 850.0);
        applyMove("detail_plattegrond_actieve_camera_rechts1_sectie_9rb", 1100.0, 650.0);
        applyMove("detail_plattegrond_inactieve_camera_rechts1_sectie_9rb", 1100.0, 650.0);
        applyMove("detail_plattegrond_knop_rechts", 1625.0, 700.0);
        applyMove("detail_plattegrond_knop_rechts_niet_beschikbaar", 1625.0, 700.0);
        applyMove("detail_plattegrond_knop_links", 693.0, 700.0);
        applyMove("detail_plattegrond_knop_links_niet_beschikbaar", 693.0, 700.0);

        if (debug) dbg.println();
    }


    @Override
    protected void initCaches() {
        outElem0 = document.getElementById("Naam_tunnel");
        outStyle0 = SvgUtils.isCssAttr(outElem0, "fill") ? (SVGStylable)outElem0 : null;
        outElem1 = document.getElementById("Naam_tunnel");
        outText1 = SvgUtils.getTextNode(outElem1);
        outElem2 = document.getElementById("knoppen_primaire_bediening_ingedrukt_rechter_buis");
        outStyle2 = SvgUtils.isCssAttr(outElem2, "visibility") ? (SVGStylable)outElem2 : null;
        outElem3 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_rechter_buis");
        outStyle3 = SvgUtils.isCssAttr(outElem3, "visibility") ? (SVGStylable)outElem3 : null;
        outElem4 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_rechter_buis");
        outStyle4 = SvgUtils.isCssAttr(outElem4, "visibility") ? (SVGStylable)outElem4 : null;
        outElem5 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_rechter_buis");
        outStyle5 = SvgUtils.isCssAttr(outElem5, "visibility") ? (SVGStylable)outElem5 : null;
        outElem6 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_rechter_buis");
        outStyle6 = SvgUtils.isCssAttr(outElem6, "visibility") ? (SVGStylable)outElem6 : null;
        outElem7 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_vri_rechter_buis");
        outStyle7 = SvgUtils.isCssAttr(outElem7, "visibility") ? (SVGStylable)outElem7 : null;
        outElem8 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_rechter_buis");
        outStyle8 = SvgUtils.isCssAttr(outElem8, "visibility") ? (SVGStylable)outElem8 : null;
        outElem9 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_rechter_buis");
        outStyle9 = SvgUtils.isCssAttr(outElem9, "visibility") ? (SVGStylable)outElem9 : null;
        outElem10 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_buis_openen_rechter_buis");
        outStyle10 = SvgUtils.isCssAttr(outElem10, "visibility") ? (SVGStylable)outElem10 : null;
        outElem11 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_rechter_buis");
        outStyle11 = SvgUtils.isCssAttr(outElem11, "visibility") ? (SVGStylable)outElem11 : null;
        outElem12 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_rechter_buis");
        outStyle12 = SvgUtils.isCssAttr(outElem12, "visibility") ? (SVGStylable)outElem12 : null;
        outElem13 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_rechter_buis");
        outStyle13 = SvgUtils.isCssAttr(outElem13, "visibility") ? (SVGStylable)outElem13 : null;
        outElem14 = document.getElementById("pop_up_bevestigen_calamiteit_rechter_buis");
        outStyle14 = SvgUtils.isCssAttr(outElem14, "visibility") ? (SVGStylable)outElem14 : null;
        outElem15 = document.getElementById("Naam_buis_rechter_buis");
        outText15 = SvgUtils.getTextNode(outElem15);
        outElem16 = document.getElementById("Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis");
        outStyle16 = SvgUtils.isCssAttr(outElem16, "fill") ? (SVGStylable)outElem16 : null;
        outElem17 = document.getElementById("drop_down_menu_stand_buis_rechter_buis");
        outStyle17 = SvgUtils.isCssAttr(outElem17, "visibility") ? (SVGStylable)outElem17 : null;
        outElem18 = document.getElementById("Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis");
        outText18 = SvgUtils.getTextNode(outElem18);
        outElem19 = document.getElementById("Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis");
        outStyle19 = SvgUtils.isCssAttr(outElem19, "fill") ? (SVGStylable)outElem19 : null;
        outElem20 = document.getElementById("drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis");
        outStyle20 = SvgUtils.isCssAttr(outElem20, "visibility") ? (SVGStylable)outElem20 : null;
        outElem21 = document.getElementById("drop_down_menu_stand_buis_standby_check_mark_rechter_buis");
        outStyle21 = SvgUtils.isCssAttr(outElem21, "visibility") ? (SVGStylable)outElem21 : null;
        outElem22 = document.getElementById("drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis");
        outStyle22 = SvgUtils.isCssAttr(outElem22, "visibility") ? (SVGStylable)outElem22 : null;
        outElem23 = document.getElementById("drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis");
        outStyle23 = SvgUtils.isCssAttr(outElem23, "visibility") ? (SVGStylable)outElem23 : null;
        outElem24 = document.getElementById("drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis");
        outStyle24 = SvgUtils.isCssAttr(outElem24, "visibility") ? (SVGStylable)outElem24 : null;
        outElem25 = document.getElementById("drop_down_menu_stand_buis_herstel_check_mark_rechter_buis");
        outStyle25 = SvgUtils.isCssAttr(outElem25, "visibility") ? (SVGStylable)outElem25 : null;
        outElem26 = document.getElementById("drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis");
        outStyle26 = SvgUtils.isCssAttr(outElem26, "visibility") ? (SVGStylable)outElem26 : null;
        outElem27 = document.getElementById("drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis");
        outStyle27 = SvgUtils.isCssAttr(outElem27, "fill") ? (SVGStylable)outElem27 : null;
        outElem28 = document.getElementById("drop_down_menu_stand_buis_standby_check_mark_rechter_buis");
        outStyle28 = SvgUtils.isCssAttr(outElem28, "fill") ? (SVGStylable)outElem28 : null;
        outElem29 = document.getElementById("drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis");
        outStyle29 = SvgUtils.isCssAttr(outElem29, "fill") ? (SVGStylable)outElem29 : null;
        outElem30 = document.getElementById("drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis");
        outStyle30 = SvgUtils.isCssAttr(outElem30, "fill") ? (SVGStylable)outElem30 : null;
        outElem31 = document.getElementById("drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis");
        outStyle31 = SvgUtils.isCssAttr(outElem31, "fill") ? (SVGStylable)outElem31 : null;
        outElem32 = document.getElementById("drop_down_menu_stand_buis_herstel_check_mark_rechter_buis");
        outStyle32 = SvgUtils.isCssAttr(outElem32, "fill") ? (SVGStylable)outElem32 : null;
        outElem33 = document.getElementById("drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis");
        outStyle33 = SvgUtils.isCssAttr(outElem33, "fill") ? (SVGStylable)outElem33 : null;
        outElem34 = document.getElementById("drop_down_menu_stand_buis_operationeel_rechter_buis");
        outStyle34 = SvgUtils.isCssAttr(outElem34, "fill") ? (SVGStylable)outElem34 : null;
        outElem35 = document.getElementById("drop_down_menu_stand_buis_standby_rechter_buis");
        outStyle35 = SvgUtils.isCssAttr(outElem35, "fill") ? (SVGStylable)outElem35 : null;
        outElem36 = document.getElementById("drop_down_menu_stand_buis_evacuatie_rechter_buis");
        outStyle36 = SvgUtils.isCssAttr(outElem36, "fill") ? (SVGStylable)outElem36 : null;
        outElem37 = document.getElementById("drop_down_menu_stand_buis_calamiteit_rechter_buis");
        outStyle37 = SvgUtils.isCssAttr(outElem37, "fill") ? (SVGStylable)outElem37 : null;
        outElem38 = document.getElementById("drop_down_menu_stand_buis_ondersteunend_rechter_buis");
        outStyle38 = SvgUtils.isCssAttr(outElem38, "fill") ? (SVGStylable)outElem38 : null;
        outElem39 = document.getElementById("drop_down_menu_stand_buis_herstel_rechter_buis");
        outStyle39 = SvgUtils.isCssAttr(outElem39, "fill") ? (SVGStylable)outElem39 : null;
        outElem40 = document.getElementById("drop_down_menu_stand_buis_onderhoud_rechter_buis");
        outStyle40 = SvgUtils.isCssAttr(outElem40, "fill") ? (SVGStylable)outElem40 : null;
        outElem41 = document.getElementById("knoppen_primaire_bediening_ingedrukt_vri_drop_down_rechter_buis");
        outStyle41 = SvgUtils.isCssAttr(outElem41, "visibility") ? (SVGStylable)outElem41 : null;
        outElem42 = document.getElementById("bedienmenu_voor_verkeerslichtenstanden_rechter_buis");
        outStyle42 = SvgUtils.isCssAttr(outElem42, "visibility") ? (SVGStylable)outElem42 : null;
        outElem43 = document.getElementById("knoppen_primaire_bediening_ingedrukt_buis_sluiten_rechter_buis");
        outStyle43 = SvgUtils.isCssAttr(outElem43, "visibility") ? (SVGStylable)outElem43 : null;
        outElem44 = document.getElementById("knoppen_primaire_bediening_ingedrukt_buis_openen_rechter_buis");
        outStyle44 = SvgUtils.isCssAttr(outElem44, "visibility") ? (SVGStylable)outElem44 : null;
        outElem45 = document.getElementById("Text_indicatie_buis_open_of_dicht_rechter_buis");
        outText45 = SvgUtils.getTextNode(outElem45);
        outElem46 = document.getElementById("Text_indicatie_buis_open_of_dicht_rechter_buis");
        outStyle46 = SvgUtils.isCssAttr(outElem46, "fill") ? (SVGStylable)outElem46 : null;
        outElem47 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_camera_links_rechter_buis");
        outStyle47 = SvgUtils.isCssAttr(outElem47, "visibility") ? (SVGStylable)outElem47 : null;
        outElem48 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_rechter_buis");
        outStyle48 = SvgUtils.isCssAttr(outElem48, "visibility") ? (SVGStylable)outElem48 : null;
        outElem49 = document.getElementById("knoppen_primaire_bediening_ingedrukt_linker_buis");
        outStyle49 = SvgUtils.isCssAttr(outElem49, "visibility") ? (SVGStylable)outElem49 : null;
        outElem50 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_linker_buis");
        outStyle50 = SvgUtils.isCssAttr(outElem50, "visibility") ? (SVGStylable)outElem50 : null;
        outElem51 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_linker_buis");
        outStyle51 = SvgUtils.isCssAttr(outElem51, "visibility") ? (SVGStylable)outElem51 : null;
        outElem52 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_linker_buis");
        outStyle52 = SvgUtils.isCssAttr(outElem52, "visibility") ? (SVGStylable)outElem52 : null;
        outElem53 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_linker_buis");
        outStyle53 = SvgUtils.isCssAttr(outElem53, "visibility") ? (SVGStylable)outElem53 : null;
        outElem54 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_vri_linker_buis");
        outStyle54 = SvgUtils.isCssAttr(outElem54, "visibility") ? (SVGStylable)outElem54 : null;
        outElem55 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_linker_buis");
        outStyle55 = SvgUtils.isCssAttr(outElem55, "visibility") ? (SVGStylable)outElem55 : null;
        outElem56 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_linker_buis");
        outStyle56 = SvgUtils.isCssAttr(outElem56, "visibility") ? (SVGStylable)outElem56 : null;
        outElem57 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_buis_openen_linker_buis");
        outStyle57 = SvgUtils.isCssAttr(outElem57, "visibility") ? (SVGStylable)outElem57 : null;
        outElem58 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_linker_buis");
        outStyle58 = SvgUtils.isCssAttr(outElem58, "visibility") ? (SVGStylable)outElem58 : null;
        outElem59 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_linker_buis");
        outStyle59 = SvgUtils.isCssAttr(outElem59, "visibility") ? (SVGStylable)outElem59 : null;
        outElem60 = document.getElementById("knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_linker_buis");
        outStyle60 = SvgUtils.isCssAttr(outElem60, "visibility") ? (SVGStylable)outElem60 : null;
        outElem61 = document.getElementById("pop_up_bevestigen_calamiteit_linker_buis");
        outStyle61 = SvgUtils.isCssAttr(outElem61, "visibility") ? (SVGStylable)outElem61 : null;
        outElem62 = document.getElementById("Naam_buis_linker_buis");
        outText62 = SvgUtils.getTextNode(outElem62);
        outElem63 = document.getElementById("Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis");
        outStyle63 = SvgUtils.isCssAttr(outElem63, "fill") ? (SVGStylable)outElem63 : null;
        outElem64 = document.getElementById("drop_down_menu_stand_buis_linker_buis");
        outStyle64 = SvgUtils.isCssAttr(outElem64, "visibility") ? (SVGStylable)outElem64 : null;
        outElem65 = document.getElementById("Text_knop_drop-down_menu_verkeersbuis_states_linker_buis");
        outText65 = SvgUtils.getTextNode(outElem65);
        outElem66 = document.getElementById("Text_knop_drop-down_menu_verkeersbuis_states_linker_buis");
        outStyle66 = SvgUtils.isCssAttr(outElem66, "fill") ? (SVGStylable)outElem66 : null;
        outElem67 = document.getElementById("drop_down_menu_stand_buis_operationeel_check_mark_linker_buis");
        outStyle67 = SvgUtils.isCssAttr(outElem67, "visibility") ? (SVGStylable)outElem67 : null;
        outElem68 = document.getElementById("drop_down_menu_stand_buis_standby_check_mark_linker_buis");
        outStyle68 = SvgUtils.isCssAttr(outElem68, "visibility") ? (SVGStylable)outElem68 : null;
        outElem69 = document.getElementById("drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis");
        outStyle69 = SvgUtils.isCssAttr(outElem69, "visibility") ? (SVGStylable)outElem69 : null;
        outElem70 = document.getElementById("drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis");
        outStyle70 = SvgUtils.isCssAttr(outElem70, "visibility") ? (SVGStylable)outElem70 : null;
        outElem71 = document.getElementById("drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis");
        outStyle71 = SvgUtils.isCssAttr(outElem71, "visibility") ? (SVGStylable)outElem71 : null;
        outElem72 = document.getElementById("drop_down_menu_stand_buis_herstel_check_mark_linker_buis");
        outStyle72 = SvgUtils.isCssAttr(outElem72, "visibility") ? (SVGStylable)outElem72 : null;
        outElem73 = document.getElementById("drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis");
        outStyle73 = SvgUtils.isCssAttr(outElem73, "visibility") ? (SVGStylable)outElem73 : null;
        outElem74 = document.getElementById("drop_down_menu_stand_buis_operationeel_check_mark_linker_buis");
        outStyle74 = SvgUtils.isCssAttr(outElem74, "fill") ? (SVGStylable)outElem74 : null;
        outElem75 = document.getElementById("drop_down_menu_stand_buis_standby_check_mark_linker_buis");
        outStyle75 = SvgUtils.isCssAttr(outElem75, "fill") ? (SVGStylable)outElem75 : null;
        outElem76 = document.getElementById("drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis");
        outStyle76 = SvgUtils.isCssAttr(outElem76, "fill") ? (SVGStylable)outElem76 : null;
        outElem77 = document.getElementById("drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis");
        outStyle77 = SvgUtils.isCssAttr(outElem77, "fill") ? (SVGStylable)outElem77 : null;
        outElem78 = document.getElementById("drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis");
        outStyle78 = SvgUtils.isCssAttr(outElem78, "fill") ? (SVGStylable)outElem78 : null;
        outElem79 = document.getElementById("drop_down_menu_stand_buis_herstel_check_mark_linker_buis");
        outStyle79 = SvgUtils.isCssAttr(outElem79, "fill") ? (SVGStylable)outElem79 : null;
        outElem80 = document.getElementById("drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis");
        outStyle80 = SvgUtils.isCssAttr(outElem80, "fill") ? (SVGStylable)outElem80 : null;
        outElem81 = document.getElementById("drop_down_menu_stand_buis_operationeel_linker_buis");
        outStyle81 = SvgUtils.isCssAttr(outElem81, "fill") ? (SVGStylable)outElem81 : null;
        outElem82 = document.getElementById("drop_down_menu_stand_buis_standby_linker_buis");
        outStyle82 = SvgUtils.isCssAttr(outElem82, "fill") ? (SVGStylable)outElem82 : null;
        outElem83 = document.getElementById("drop_down_menu_stand_buis_evacuatie_linker_buis");
        outStyle83 = SvgUtils.isCssAttr(outElem83, "fill") ? (SVGStylable)outElem83 : null;
        outElem84 = document.getElementById("drop_down_menu_stand_buis_calamiteit_linker_buis");
        outStyle84 = SvgUtils.isCssAttr(outElem84, "fill") ? (SVGStylable)outElem84 : null;
        outElem85 = document.getElementById("drop_down_menu_stand_buis_ondersteunend_linker_buis");
        outStyle85 = SvgUtils.isCssAttr(outElem85, "fill") ? (SVGStylable)outElem85 : null;
        outElem86 = document.getElementById("drop_down_menu_stand_buis_herstel_linker_buis");
        outStyle86 = SvgUtils.isCssAttr(outElem86, "fill") ? (SVGStylable)outElem86 : null;
        outElem87 = document.getElementById("drop_down_menu_stand_buis_onderhoud_linker_buis");
        outStyle87 = SvgUtils.isCssAttr(outElem87, "fill") ? (SVGStylable)outElem87 : null;
        outElem88 = document.getElementById("knoppen_primaire_bediening_ingedrukt_vri_drop_down_linker_buis");
        outStyle88 = SvgUtils.isCssAttr(outElem88, "visibility") ? (SVGStylable)outElem88 : null;
        outElem89 = document.getElementById("bedienmenu_voor_verkeerslichtenstanden_linker_buis");
        outStyle89 = SvgUtils.isCssAttr(outElem89, "visibility") ? (SVGStylable)outElem89 : null;
        outElem90 = document.getElementById("knoppen_primaire_bediening_ingedrukt_buis_sluiten_linker_buis");
        outStyle90 = SvgUtils.isCssAttr(outElem90, "visibility") ? (SVGStylable)outElem90 : null;
        outElem91 = document.getElementById("knoppen_primaire_bediening_ingedrukt_buis_openen_linker_buis");
        outStyle91 = SvgUtils.isCssAttr(outElem91, "visibility") ? (SVGStylable)outElem91 : null;
        outElem92 = document.getElementById("Text_indicatie_buis_open_of_dicht_linker_buis");
        outText92 = SvgUtils.getTextNode(outElem92);
        outElem93 = document.getElementById("Text_indicatie_buis_open_of_dicht_linker_buis");
        outStyle93 = SvgUtils.isCssAttr(outElem93, "fill") ? (SVGStylable)outElem93 : null;
        outElem94 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_linker_buis");
        outStyle94 = SvgUtils.isCssAttr(outElem94, "visibility") ? (SVGStylable)outElem94 : null;
        outElem95 = document.getElementById("knoppen_primaire_bediening_niet_beschikbaar_camera_links_linker_buis");
        outStyle95 = SvgUtils.isCssAttr(outElem95, "visibility") ? (SVGStylable)outElem95 : null;
        outElem96 = document.getElementById("geselecteerde_sectie_voor_detail_plattegrond");
        outStyle96 = SvgUtils.isCssAttr(outElem96, "transform") ? (SVGStylable)outElem96 : null;
        outElem97 = document.getElementById("Naam_buis_op_rechter_buis");
        outText97 = SvgUtils.getTextNode(outElem97);
        outElem98 = document.getElementById("punt_richtingspijl_links_rechter_buis");
        outStyle98 = SvgUtils.isCssAttr(outElem98, "stroke") ? (SVGStylable)outElem98 : null;
        outElem99 = document.getElementById("horizontaal_richtingspijl_rechter_buis");
        outStyle99 = SvgUtils.isCssAttr(outElem99, "stroke") ? (SVGStylable)outElem99 : null;
        outElem100 = document.getElementById("Naam_buis_op_rechter_buis");
        outStyle100 = SvgUtils.isCssAttr(outElem100, "fill") ? (SVGStylable)outElem100 : null;
        outElem101 = document.getElementById("weg_binnen_tunnel_rechter_buis");
        outStyle101 = SvgUtils.isCssAttr(outElem101, "fill") ? (SVGStylable)outElem101 : null;
        outElem102 = document.getElementById("aanduiding_richting_tunnel_buis_rechter_buis");
        outStyle102 = SvgUtils.isCssAttr(outElem102, "fill") ? (SVGStylable)outElem102 : null;
        outElem103 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera1_rb");
        outStyle103 = SvgUtils.isCssAttr(outElem103, "visibility") ? (SVGStylable)outElem103 : null;
        outElem104 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera2_rb");
        outStyle104 = SvgUtils.isCssAttr(outElem104, "visibility") ? (SVGStylable)outElem104 : null;
        outElem105 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera3_rb");
        outStyle105 = SvgUtils.isCssAttr(outElem105, "visibility") ? (SVGStylable)outElem105 : null;
        outElem106 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera4_rb");
        outStyle106 = SvgUtils.isCssAttr(outElem106, "visibility") ? (SVGStylable)outElem106 : null;
        outElem107 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera5_rb");
        outStyle107 = SvgUtils.isCssAttr(outElem107, "visibility") ? (SVGStylable)outElem107 : null;
        outElem108 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera6_rb");
        outStyle108 = SvgUtils.isCssAttr(outElem108, "visibility") ? (SVGStylable)outElem108 : null;
        outElem109 = document.getElementById("rood_licht_verkeerslicht_overzichtsplattengrond_rechter_buis");
        outStyle109 = SvgUtils.isCssAttr(outElem109, "visibility") ? (SVGStylable)outElem109 : null;
        outElem110 = document.getElementById("oranje_licht_verkeerslicht_overzichtsplattengrond_rechter_buis");
        outStyle110 = SvgUtils.isCssAttr(outElem110, "visibility") ? (SVGStylable)outElem110 : null;
        outElem111 = document.getElementById("groen_licht_verkeerslicht_overzichtsplattengrond_rechter_buis");
        outStyle111 = SvgUtils.isCssAttr(outElem111, "visibility") ? (SVGStylable)outElem111 : null;
        outElem112 = document.getElementById("achtergrond_verkeerslicht_overzichtsplattegrond_rechter_buis");
        outStyle112 = SvgUtils.isCssAttr(outElem112, "fill") ? (SVGStylable)outElem112 : null;
        outElem113 = document.getElementById("slagboom_overzichtsplattengrond_rechter_buis");
        outStyle113 = SvgUtils.isCssAttr(outElem113, "visibility") ? (SVGStylable)outElem113 : null;
        outElem114 = document.getElementById("slagboom_dicht_overzichtsplattegrond_rechter_buis");
        outStyle114 = SvgUtils.isCssAttr(outElem114, "visibility") ? (SVGStylable)outElem114 : null;
        outElem115 = document.getElementById("vervagen_slagboom_dicht_rechter_buis");
        outStyle115 = SvgUtils.isCssAttr(outElem115, "visibility") ? (SVGStylable)outElem115 : null;
        outElem116 = document.getElementById("verkeerskundigalarm_plattegrond_rechter_buis");
        outStyle116 = SvgUtils.isCssAttr(outElem116, "visibility") ? (SVGStylable)outElem116 : null;
        outElem117 = document.getElementById("weg_binnen_tunnel_linker_buis");
        outStyle117 = SvgUtils.isCssAttr(outElem117, "fill") ? (SVGStylable)outElem117 : null;
        outElem118 = document.getElementById("aanduiding_richting_tunnel_buis_linker_buis");
        outStyle118 = SvgUtils.isCssAttr(outElem118, "fill") ? (SVGStylable)outElem118 : null;
        outElem119 = document.getElementById("Naam_buis_op_linker_buis");
        outText119 = SvgUtils.getTextNode(outElem119);
        outElem120 = document.getElementById("punt_richtingspijl_rechts_linker_buis");
        outStyle120 = SvgUtils.isCssAttr(outElem120, "stroke") ? (SVGStylable)outElem120 : null;
        outElem121 = document.getElementById("horizontaal_richtingspijl_linker_buis");
        outStyle121 = SvgUtils.isCssAttr(outElem121, "stroke") ? (SVGStylable)outElem121 : null;
        outElem122 = document.getElementById("Naam_buis_op_linker_buis");
        outStyle122 = SvgUtils.isCssAttr(outElem122, "fill") ? (SVGStylable)outElem122 : null;
        outElem123 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera1_lb");
        outStyle123 = SvgUtils.isCssAttr(outElem123, "visibility") ? (SVGStylable)outElem123 : null;
        outElem124 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera2_lb");
        outStyle124 = SvgUtils.isCssAttr(outElem124, "visibility") ? (SVGStylable)outElem124 : null;
        outElem125 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera3_lb");
        outStyle125 = SvgUtils.isCssAttr(outElem125, "visibility") ? (SVGStylable)outElem125 : null;
        outElem126 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera4_lb");
        outStyle126 = SvgUtils.isCssAttr(outElem126, "visibility") ? (SVGStylable)outElem126 : null;
        outElem127 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera5_lb");
        outStyle127 = SvgUtils.isCssAttr(outElem127, "visibility") ? (SVGStylable)outElem127 : null;
        outElem128 = document.getElementById("geselecteerde_camera_overzichtsplattegrond_links_gericht_camera6_lb");
        outStyle128 = SvgUtils.isCssAttr(outElem128, "visibility") ? (SVGStylable)outElem128 : null;
        outElem129 = document.getElementById("rood_licht_verkeerslicht_overzichtsplattengrond_linker_buis");
        outStyle129 = SvgUtils.isCssAttr(outElem129, "visibility") ? (SVGStylable)outElem129 : null;
        outElem130 = document.getElementById("oranje_licht_verkeerslicht_overzichtsplattengrond_linker_buis");
        outStyle130 = SvgUtils.isCssAttr(outElem130, "visibility") ? (SVGStylable)outElem130 : null;
        outElem131 = document.getElementById("groen_licht_verkeerslicht_overzichtsplattengrond_linker_buis");
        outStyle131 = SvgUtils.isCssAttr(outElem131, "visibility") ? (SVGStylable)outElem131 : null;
        outElem132 = document.getElementById("achtergrond_verkeerslicht_overzichtsplattegrond_linker_buis");
        outStyle132 = SvgUtils.isCssAttr(outElem132, "fill") ? (SVGStylable)outElem132 : null;
        outElem133 = document.getElementById("slagboom_overzichtsplattengrond_linker_buis");
        outStyle133 = SvgUtils.isCssAttr(outElem133, "visibility") ? (SVGStylable)outElem133 : null;
        outElem134 = document.getElementById("slagboom_dicht_overzichtsplattegrond_linker_buis");
        outStyle134 = SvgUtils.isCssAttr(outElem134, "visibility") ? (SVGStylable)outElem134 : null;
        outElem135 = document.getElementById("vervagen_slagboom_dicht_linker_buis");
        outStyle135 = SvgUtils.isCssAttr(outElem135, "visibility") ? (SVGStylable)outElem135 : null;
        outElem136 = document.getElementById("active_tab_systemen_en_detecties_pijl_rechts_rechter_buis");
        outStyle136 = SvgUtils.isCssAttr(outElem136, "visibility") ? (SVGStylable)outElem136 : null;
        outElem137 = document.getElementById("inactive_tab_systemen_en_detecties_pijl_rechts_rechter_buis");
        outStyle137 = SvgUtils.isCssAttr(outElem137, "visibility") ? (SVGStylable)outElem137 : null;
        outElem138 = document.getElementById("Naam_active_tab_systemen_en_detecties_rechter_buis");
        outStyle138 = SvgUtils.isCssAttr(outElem138, "fill") ? (SVGStylable)outElem138 : null;
        outElem139 = document.getElementById("Naam_inactive_tab_systemen_en_detecties_rechter_buis");
        outStyle139 = SvgUtils.isCssAttr(outElem139, "fill") ? (SVGStylable)outElem139 : null;
        outElem140 = document.getElementById("Naam_active_tab_systemen_en_detecties_rechter_buis");
        outText140 = SvgUtils.getTextNode(outElem140);
        outElem141 = document.getElementById("Naam_inactive_tab_systemen_en_detecties_rechter_buis");
        outText141 = SvgUtils.getTextNode(outElem141);
        outElem142 = document.getElementById("active_tab_systemen_en_detecties_pijl_links_linker_buis");
        outStyle142 = SvgUtils.isCssAttr(outElem142, "visibility") ? (SVGStylable)outElem142 : null;
        outElem143 = document.getElementById("inactive_tab_systemen_en_detecties_pijl_links_linker_buis");
        outStyle143 = SvgUtils.isCssAttr(outElem143, "visibility") ? (SVGStylable)outElem143 : null;
        outElem144 = document.getElementById("Naam_active_tab_systemen_en_detecties_linker_buis");
        outStyle144 = SvgUtils.isCssAttr(outElem144, "fill") ? (SVGStylable)outElem144 : null;
        outElem145 = document.getElementById("Naam_inactive_tab_systemen_en_detecties_linker_buis");
        outStyle145 = SvgUtils.isCssAttr(outElem145, "fill") ? (SVGStylable)outElem145 : null;
        outElem146 = document.getElementById("Naam_active_tab_systemen_en_detecties_linker_buis");
        outText146 = SvgUtils.getTextNode(outElem146);
        outElem147 = document.getElementById("Naam_inactive_tab_systemen_en_detecties_linker_buis");
        outText147 = SvgUtils.getTextNode(outElem147);
        outElem148 = document.getElementById("inactive_tab_systemen_en_detecties_rechter_buis");
        outStyle148 = SvgUtils.isCssAttr(outElem148, "visibility") ? (SVGStylable)outElem148 : null;
        outElem149 = document.getElementById("inactive_tab_systemen_en_detecties_linker_buis");
        outStyle149 = SvgUtils.isCssAttr(outElem149, "visibility") ? (SVGStylable)outElem149 : null;
        outElem150 = document.getElementById("active_tab_systemen_en_detecties_rechter_buis");
        outStyle150 = SvgUtils.isCssAttr(outElem150, "visibility") ? (SVGStylable)outElem150 : null;
        outElem151 = document.getElementById("active_tab_systemen_en_detecties_linker_buis");
        outStyle151 = SvgUtils.isCssAttr(outElem151, "visibility") ? (SVGStylable)outElem151 : null;
        outElem152 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis");
        outText152 = SvgUtils.getTextNode(outElem152);
        outElem153 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis");
        outText153 = SvgUtils.getTextNode(outElem153);
        outElem154 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis");
        outText154 = SvgUtils.getTextNode(outElem154);
        outElem155 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis");
        outText155 = SvgUtils.getTextNode(outElem155);
        outElem156 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis");
        outText156 = SvgUtils.getTextNode(outElem156);
        outElem157 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis");
        outText157 = SvgUtils.getTextNode(outElem157);
        outElem158 = document.getElementById("Drop_down_menu_open_pijltje_buis_rechter_buis");
        outStyle158 = SvgUtils.isCssAttr(outElem158, "visibility") ? (SVGStylable)outElem158 : null;
        outElem159 = document.getElementById("Drop_down_menu_dicht_pijltje_buis_rechter_buis");
        outStyle159 = SvgUtils.isCssAttr(outElem159, "visibility") ? (SVGStylable)outElem159 : null;
        outElem160 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis");
        outStyle160 = SvgUtils.isCssAttr(outElem160, "fill") ? (SVGStylable)outElem160 : null;
        outElem161 = document.getElementById("Drop_down_menu_open_pijltje_vluchtroute_rechter_buis");
        outStyle161 = SvgUtils.isCssAttr(outElem161, "visibility") ? (SVGStylable)outElem161 : null;
        outElem162 = document.getElementById("Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis");
        outStyle162 = SvgUtils.isCssAttr(outElem162, "visibility") ? (SVGStylable)outElem162 : null;
        outElem163 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis");
        outStyle163 = SvgUtils.isCssAttr(outElem163, "fill") ? (SVGStylable)outElem163 : null;
        outElem164 = document.getElementById("Drop_down_menu_open_pijltje_tunnel_rechter_buis");
        outStyle164 = SvgUtils.isCssAttr(outElem164, "visibility") ? (SVGStylable)outElem164 : null;
        outElem165 = document.getElementById("Drop_down_menu_dicht_pijltje_tunnel_rechter_buis");
        outStyle165 = SvgUtils.isCssAttr(outElem165, "visibility") ? (SVGStylable)outElem165 : null;
        outElem166 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis");
        outStyle166 = SvgUtils.isCssAttr(outElem166, "fill") ? (SVGStylable)outElem166 : null;
        outElem167 = document.getElementById("Drop_down_menu_open_pijltje_verkeer_rechter_buis");
        outStyle167 = SvgUtils.isCssAttr(outElem167, "visibility") ? (SVGStylable)outElem167 : null;
        outElem168 = document.getElementById("Drop_down_menu_dicht_pijltje_verkeer_rechter_buis");
        outStyle168 = SvgUtils.isCssAttr(outElem168, "visibility") ? (SVGStylable)outElem168 : null;
        outElem169 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis");
        outStyle169 = SvgUtils.isCssAttr(outElem169, "fill") ? (SVGStylable)outElem169 : null;
        outElem170 = document.getElementById("Drop_down_menu_open_pijltje_detecties_rechter_buis");
        outStyle170 = SvgUtils.isCssAttr(outElem170, "visibility") ? (SVGStylable)outElem170 : null;
        outElem171 = document.getElementById("Drop_down_menu_dicht_pijltje_detecties_rechter_buis");
        outStyle171 = SvgUtils.isCssAttr(outElem171, "visibility") ? (SVGStylable)outElem171 : null;
        outElem172 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis");
        outStyle172 = SvgUtils.isCssAttr(outElem172, "fill") ? (SVGStylable)outElem172 : null;
        outElem173 = document.getElementById("Drop_down_menu_open_pijltje_overig_rechter_buis");
        outStyle173 = SvgUtils.isCssAttr(outElem173, "visibility") ? (SVGStylable)outElem173 : null;
        outElem174 = document.getElementById("Drop_down_menu_dicht_pijltje_overig_rechter_buis");
        outStyle174 = SvgUtils.isCssAttr(outElem174, "visibility") ? (SVGStylable)outElem174 : null;
        outElem175 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis");
        outStyle175 = SvgUtils.isCssAttr(outElem175, "fill") ? (SVGStylable)outElem175 : null;
        outElem176 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis");
        outStyle176 = SvgUtils.isCssAttr(outElem176, "transform") ? (SVGStylable)outElem176 : null;
        outElem177 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis");
        outStyle177 = SvgUtils.isCssAttr(outElem177, "transform") ? (SVGStylable)outElem177 : null;
        outElem178 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis");
        outStyle178 = SvgUtils.isCssAttr(outElem178, "transform") ? (SVGStylable)outElem178 : null;
        outElem179 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis");
        outStyle179 = SvgUtils.isCssAttr(outElem179, "transform") ? (SVGStylable)outElem179 : null;
        outElem180 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis");
        outStyle180 = SvgUtils.isCssAttr(outElem180, "transform") ? (SVGStylable)outElem180 : null;
        outElem181 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis");
        outStyle181 = SvgUtils.isCssAttr(outElem181, "transform") ? (SVGStylable)outElem181 : null;
        outElem182 = document.getElementById("blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis");
        outStyle182 = SvgUtils.isCssAttr(outElem182, "transform") ? (SVGStylable)outElem182 : null;
        outElem183 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis");
        outStyle183 = SvgUtils.isCssAttr(outElem183, "fill") ? (SVGStylable)outElem183 : null;
        outElem184 = document.getElementById("blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis");
        outStyle184 = SvgUtils.isCssAttr(outElem184, "transform") ? (SVGStylable)outElem184 : null;
        outElem185 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis");
        outStyle185 = SvgUtils.isCssAttr(outElem185, "fill") ? (SVGStylable)outElem185 : null;
        outElem186 = document.getElementById("blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis");
        outStyle186 = SvgUtils.isCssAttr(outElem186, "transform") ? (SVGStylable)outElem186 : null;
        outElem187 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis");
        outStyle187 = SvgUtils.isCssAttr(outElem187, "fill") ? (SVGStylable)outElem187 : null;
        outElem188 = document.getElementById("blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis");
        outStyle188 = SvgUtils.isCssAttr(outElem188, "transform") ? (SVGStylable)outElem188 : null;
        outElem189 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis");
        outStyle189 = SvgUtils.isCssAttr(outElem189, "fill") ? (SVGStylable)outElem189 : null;
        outElem190 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis");
        outText190 = SvgUtils.getTextNode(outElem190);
        outElem191 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis");
        outText191 = SvgUtils.getTextNode(outElem191);
        outElem192 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis");
        outText192 = SvgUtils.getTextNode(outElem192);
        outElem193 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis");
        outText193 = SvgUtils.getTextNode(outElem193);
        outElem194 = document.getElementById("blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis");
        outStyle194 = SvgUtils.isCssAttr(outElem194, "transform") ? (SVGStylable)outElem194 : null;
        outElem195 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis");
        outStyle195 = SvgUtils.isCssAttr(outElem195, "fill") ? (SVGStylable)outElem195 : null;
        outElem196 = document.getElementById("blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis");
        outStyle196 = SvgUtils.isCssAttr(outElem196, "transform") ? (SVGStylable)outElem196 : null;
        outElem197 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis");
        outStyle197 = SvgUtils.isCssAttr(outElem197, "fill") ? (SVGStylable)outElem197 : null;
        outElem198 = document.getElementById("blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis");
        outStyle198 = SvgUtils.isCssAttr(outElem198, "transform") ? (SVGStylable)outElem198 : null;
        outElem199 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis");
        outStyle199 = SvgUtils.isCssAttr(outElem199, "fill") ? (SVGStylable)outElem199 : null;
        outElem200 = document.getElementById("blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis");
        outStyle200 = SvgUtils.isCssAttr(outElem200, "transform") ? (SVGStylable)outElem200 : null;
        outElem201 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis");
        outStyle201 = SvgUtils.isCssAttr(outElem201, "fill") ? (SVGStylable)outElem201 : null;
        outElem202 = document.getElementById("blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis");
        outStyle202 = SvgUtils.isCssAttr(outElem202, "transform") ? (SVGStylable)outElem202 : null;
        outElem203 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis");
        outStyle203 = SvgUtils.isCssAttr(outElem203, "fill") ? (SVGStylable)outElem203 : null;
        outElem204 = document.getElementById("blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis");
        outStyle204 = SvgUtils.isCssAttr(outElem204, "transform") ? (SVGStylable)outElem204 : null;
        outElem205 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis");
        outStyle205 = SvgUtils.isCssAttr(outElem205, "fill") ? (SVGStylable)outElem205 : null;
        outElem206 = document.getElementById("blokken_overzicht_systemen_en_detecties_Licht_rechter_buis");
        outStyle206 = SvgUtils.isCssAttr(outElem206, "transform") ? (SVGStylable)outElem206 : null;
        outElem207 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis");
        outStyle207 = SvgUtils.isCssAttr(outElem207, "fill") ? (SVGStylable)outElem207 : null;
        outElem208 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis");
        outText208 = SvgUtils.getTextNode(outElem208);
        outElem209 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis");
        outText209 = SvgUtils.getTextNode(outElem209);
        outElem210 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis");
        outText210 = SvgUtils.getTextNode(outElem210);
        outElem211 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis");
        outText211 = SvgUtils.getTextNode(outElem211);
        outElem212 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis");
        outText212 = SvgUtils.getTextNode(outElem212);
        outElem213 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis");
        outText213 = SvgUtils.getTextNode(outElem213);
        outElem214 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis");
        outText214 = SvgUtils.getTextNode(outElem214);
        outElem215 = document.getElementById("blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis");
        outStyle215 = SvgUtils.isCssAttr(outElem215, "transform") ? (SVGStylable)outElem215 : null;
        outElem216 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis");
        outStyle216 = SvgUtils.isCssAttr(outElem216, "fill") ? (SVGStylable)outElem216 : null;
        outElem217 = document.getElementById("blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis");
        outStyle217 = SvgUtils.isCssAttr(outElem217, "transform") ? (SVGStylable)outElem217 : null;
        outElem218 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis");
        outStyle218 = SvgUtils.isCssAttr(outElem218, "fill") ? (SVGStylable)outElem218 : null;
        outElem219 = document.getElementById("blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis");
        outStyle219 = SvgUtils.isCssAttr(outElem219, "transform") ? (SVGStylable)outElem219 : null;
        outElem220 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis");
        outStyle220 = SvgUtils.isCssAttr(outElem220, "fill") ? (SVGStylable)outElem220 : null;
        outElem221 = document.getElementById("blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis");
        outStyle221 = SvgUtils.isCssAttr(outElem221, "transform") ? (SVGStylable)outElem221 : null;
        outElem222 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis");
        outStyle222 = SvgUtils.isCssAttr(outElem222, "fill") ? (SVGStylable)outElem222 : null;
        outElem223 = document.getElementById("blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis");
        outStyle223 = SvgUtils.isCssAttr(outElem223, "transform") ? (SVGStylable)outElem223 : null;
        outElem224 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis");
        outStyle224 = SvgUtils.isCssAttr(outElem224, "fill") ? (SVGStylable)outElem224 : null;
        outElem225 = document.getElementById("blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis");
        outStyle225 = SvgUtils.isCssAttr(outElem225, "transform") ? (SVGStylable)outElem225 : null;
        outElem226 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis");
        outStyle226 = SvgUtils.isCssAttr(outElem226, "fill") ? (SVGStylable)outElem226 : null;
        outElem227 = document.getElementById("blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis");
        outStyle227 = SvgUtils.isCssAttr(outElem227, "transform") ? (SVGStylable)outElem227 : null;
        outElem228 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis");
        outStyle228 = SvgUtils.isCssAttr(outElem228, "fill") ? (SVGStylable)outElem228 : null;
        outElem229 = document.getElementById("blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis");
        outStyle229 = SvgUtils.isCssAttr(outElem229, "transform") ? (SVGStylable)outElem229 : null;
        outElem230 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis");
        outStyle230 = SvgUtils.isCssAttr(outElem230, "fill") ? (SVGStylable)outElem230 : null;
        outElem231 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis");
        outText231 = SvgUtils.getTextNode(outElem231);
        outElem232 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis");
        outText232 = SvgUtils.getTextNode(outElem232);
        outElem233 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis");
        outText233 = SvgUtils.getTextNode(outElem233);
        outElem234 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis");
        outText234 = SvgUtils.getTextNode(outElem234);
        outElem235 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis");
        outText235 = SvgUtils.getTextNode(outElem235);
        outElem236 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis");
        outText236 = SvgUtils.getTextNode(outElem236);
        outElem237 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis");
        outText237 = SvgUtils.getTextNode(outElem237);
        outElem238 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis");
        outText238 = SvgUtils.getTextNode(outElem238);
        outElem239 = document.getElementById("blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis");
        outStyle239 = SvgUtils.isCssAttr(outElem239, "transform") ? (SVGStylable)outElem239 : null;
        outElem240 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis");
        outStyle240 = SvgUtils.isCssAttr(outElem240, "fill") ? (SVGStylable)outElem240 : null;
        outElem241 = document.getElementById("blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis");
        outStyle241 = SvgUtils.isCssAttr(outElem241, "transform") ? (SVGStylable)outElem241 : null;
        outElem242 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis");
        outStyle242 = SvgUtils.isCssAttr(outElem242, "fill") ? (SVGStylable)outElem242 : null;
        outElem243 = document.getElementById("blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis");
        outStyle243 = SvgUtils.isCssAttr(outElem243, "transform") ? (SVGStylable)outElem243 : null;
        outElem244 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis");
        outStyle244 = SvgUtils.isCssAttr(outElem244, "fill") ? (SVGStylable)outElem244 : null;
        outElem245 = document.getElementById("blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis");
        outStyle245 = SvgUtils.isCssAttr(outElem245, "transform") ? (SVGStylable)outElem245 : null;
        outElem246 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis");
        outStyle246 = SvgUtils.isCssAttr(outElem246, "fill") ? (SVGStylable)outElem246 : null;
        outElem247 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis");
        outText247 = SvgUtils.getTextNode(outElem247);
        outElem248 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis");
        outText248 = SvgUtils.getTextNode(outElem248);
        outElem249 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis");
        outText249 = SvgUtils.getTextNode(outElem249);
        outElem250 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis");
        outText250 = SvgUtils.getTextNode(outElem250);
        outElem251 = document.getElementById("blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis");
        outStyle251 = SvgUtils.isCssAttr(outElem251, "transform") ? (SVGStylable)outElem251 : null;
        outElem252 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis");
        outStyle252 = SvgUtils.isCssAttr(outElem252, "fill") ? (SVGStylable)outElem252 : null;
        outElem253 = document.getElementById("blokken_overzicht_systemen_en_detecties_SOS_rechter_buis");
        outStyle253 = SvgUtils.isCssAttr(outElem253, "transform") ? (SVGStylable)outElem253 : null;
        outElem254 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis");
        outStyle254 = SvgUtils.isCssAttr(outElem254, "fill") ? (SVGStylable)outElem254 : null;
        outElem255 = document.getElementById("blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis");
        outStyle255 = SvgUtils.isCssAttr(outElem255, "transform") ? (SVGStylable)outElem255 : null;
        outElem256 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis");
        outStyle256 = SvgUtils.isCssAttr(outElem256, "fill") ? (SVGStylable)outElem256 : null;
        outElem257 = document.getElementById("blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis");
        outStyle257 = SvgUtils.isCssAttr(outElem257, "transform") ? (SVGStylable)outElem257 : null;
        outElem258 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis");
        outStyle258 = SvgUtils.isCssAttr(outElem258, "fill") ? (SVGStylable)outElem258 : null;
        outElem259 = document.getElementById("blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis");
        outStyle259 = SvgUtils.isCssAttr(outElem259, "transform") ? (SVGStylable)outElem259 : null;
        outElem260 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis");
        outStyle260 = SvgUtils.isCssAttr(outElem260, "fill") ? (SVGStylable)outElem260 : null;
        outElem261 = document.getElementById("blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis");
        outStyle261 = SvgUtils.isCssAttr(outElem261, "transform") ? (SVGStylable)outElem261 : null;
        outElem262 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis");
        outStyle262 = SvgUtils.isCssAttr(outElem262, "fill") ? (SVGStylable)outElem262 : null;
        outElem263 = document.getElementById("blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis");
        outStyle263 = SvgUtils.isCssAttr(outElem263, "transform") ? (SVGStylable)outElem263 : null;
        outElem264 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis");
        outStyle264 = SvgUtils.isCssAttr(outElem264, "fill") ? (SVGStylable)outElem264 : null;
        outElem265 = document.getElementById("blokken_overzicht_systemen_en_detecties_Deur_rechter_buis");
        outStyle265 = SvgUtils.isCssAttr(outElem265, "transform") ? (SVGStylable)outElem265 : null;
        outElem266 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis");
        outStyle266 = SvgUtils.isCssAttr(outElem266, "fill") ? (SVGStylable)outElem266 : null;
        outElem267 = document.getElementById("blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis");
        outStyle267 = SvgUtils.isCssAttr(outElem267, "transform") ? (SVGStylable)outElem267 : null;
        outElem268 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis");
        outStyle268 = SvgUtils.isCssAttr(outElem268, "fill") ? (SVGStylable)outElem268 : null;
        outElem269 = document.getElementById("blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis");
        outStyle269 = SvgUtils.isCssAttr(outElem269, "transform") ? (SVGStylable)outElem269 : null;
        outElem270 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis");
        outStyle270 = SvgUtils.isCssAttr(outElem270, "fill") ? (SVGStylable)outElem270 : null;
        outElem271 = document.getElementById("blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis");
        outStyle271 = SvgUtils.isCssAttr(outElem271, "transform") ? (SVGStylable)outElem271 : null;
        outElem272 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis");
        outStyle272 = SvgUtils.isCssAttr(outElem272, "fill") ? (SVGStylable)outElem272 : null;
        outElem273 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis");
        outText273 = SvgUtils.getTextNode(outElem273);
        outElem274 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis");
        outText274 = SvgUtils.getTextNode(outElem274);
        outElem275 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis");
        outText275 = SvgUtils.getTextNode(outElem275);
        outElem276 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis");
        outText276 = SvgUtils.getTextNode(outElem276);
        outElem277 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis");
        outText277 = SvgUtils.getTextNode(outElem277);
        outElem278 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis");
        outText278 = SvgUtils.getTextNode(outElem278);
        outElem279 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis");
        outText279 = SvgUtils.getTextNode(outElem279);
        outElem280 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis");
        outText280 = SvgUtils.getTextNode(outElem280);
        outElem281 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis");
        outText281 = SvgUtils.getTextNode(outElem281);
        outElem282 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis");
        outText282 = SvgUtils.getTextNode(outElem282);
        outElem283 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis");
        outText283 = SvgUtils.getTextNode(outElem283);
        outElem284 = document.getElementById("blokken_overzicht_systemen_en_detecties_C2000_rechter_buis");
        outStyle284 = SvgUtils.isCssAttr(outElem284, "transform") ? (SVGStylable)outElem284 : null;
        outElem285 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis");
        outStyle285 = SvgUtils.isCssAttr(outElem285, "fill") ? (SVGStylable)outElem285 : null;
        outElem286 = document.getElementById("blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis");
        outStyle286 = SvgUtils.isCssAttr(outElem286, "transform") ? (SVGStylable)outElem286 : null;
        outElem287 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis");
        outStyle287 = SvgUtils.isCssAttr(outElem287, "fill") ? (SVGStylable)outElem287 : null;
        outElem288 = document.getElementById("blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis");
        outStyle288 = SvgUtils.isCssAttr(outElem288, "transform") ? (SVGStylable)outElem288 : null;
        outElem289 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis");
        outStyle289 = SvgUtils.isCssAttr(outElem289, "fill") ? (SVGStylable)outElem289 : null;
        outElem290 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis");
        outText290 = SvgUtils.getTextNode(outElem290);
        outElem291 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis");
        outText291 = SvgUtils.getTextNode(outElem291);
        outElem292 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis");
        outText292 = SvgUtils.getTextNode(outElem292);
        outElem293 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis");
        outText293 = SvgUtils.getTextNode(outElem293);
        outElem294 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis");
        outText294 = SvgUtils.getTextNode(outElem294);
        outElem295 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis");
        outText295 = SvgUtils.getTextNode(outElem295);
        outElem296 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis");
        outText296 = SvgUtils.getTextNode(outElem296);
        outElem297 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis");
        outText297 = SvgUtils.getTextNode(outElem297);
        outElem298 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis");
        outText298 = SvgUtils.getTextNode(outElem298);
        outElem299 = document.getElementById("Drop_down_menu_open_pijltje_buis_linker_buis");
        outStyle299 = SvgUtils.isCssAttr(outElem299, "visibility") ? (SVGStylable)outElem299 : null;
        outElem300 = document.getElementById("Drop_down_menu_dicht_pijltje_buis_linker_buis");
        outStyle300 = SvgUtils.isCssAttr(outElem300, "visibility") ? (SVGStylable)outElem300 : null;
        outElem301 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis");
        outStyle301 = SvgUtils.isCssAttr(outElem301, "fill") ? (SVGStylable)outElem301 : null;
        outElem302 = document.getElementById("Drop_down_menu_open_pijltje_vluchtroute_linker_buis");
        outStyle302 = SvgUtils.isCssAttr(outElem302, "visibility") ? (SVGStylable)outElem302 : null;
        outElem303 = document.getElementById("Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis");
        outStyle303 = SvgUtils.isCssAttr(outElem303, "visibility") ? (SVGStylable)outElem303 : null;
        outElem304 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis");
        outStyle304 = SvgUtils.isCssAttr(outElem304, "fill") ? (SVGStylable)outElem304 : null;
        outElem305 = document.getElementById("Drop_down_menu_open_pijltje_tunnel_linker_buis");
        outStyle305 = SvgUtils.isCssAttr(outElem305, "visibility") ? (SVGStylable)outElem305 : null;
        outElem306 = document.getElementById("Drop_down_menu_dicht_pijltje_tunnel_linker_buis");
        outStyle306 = SvgUtils.isCssAttr(outElem306, "visibility") ? (SVGStylable)outElem306 : null;
        outElem307 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis");
        outStyle307 = SvgUtils.isCssAttr(outElem307, "fill") ? (SVGStylable)outElem307 : null;
        outElem308 = document.getElementById("Drop_down_menu_open_pijltje_verkeer_linker_buis");
        outStyle308 = SvgUtils.isCssAttr(outElem308, "visibility") ? (SVGStylable)outElem308 : null;
        outElem309 = document.getElementById("Drop_down_menu_dicht_pijltje_verkeer_linker_buis");
        outStyle309 = SvgUtils.isCssAttr(outElem309, "visibility") ? (SVGStylable)outElem309 : null;
        outElem310 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis");
        outStyle310 = SvgUtils.isCssAttr(outElem310, "fill") ? (SVGStylable)outElem310 : null;
        outElem311 = document.getElementById("Drop_down_menu_open_pijltje_detecties_linker_buis");
        outStyle311 = SvgUtils.isCssAttr(outElem311, "visibility") ? (SVGStylable)outElem311 : null;
        outElem312 = document.getElementById("Drop_down_menu_dicht_pijltje_detecties_linker_buis");
        outStyle312 = SvgUtils.isCssAttr(outElem312, "visibility") ? (SVGStylable)outElem312 : null;
        outElem313 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis");
        outStyle313 = SvgUtils.isCssAttr(outElem313, "fill") ? (SVGStylable)outElem313 : null;
        outElem314 = document.getElementById("Drop_down_menu_open_pijltje_overig_linker_buis");
        outStyle314 = SvgUtils.isCssAttr(outElem314, "visibility") ? (SVGStylable)outElem314 : null;
        outElem315 = document.getElementById("Drop_down_menu_dicht_pijltje_overig_linker_buis");
        outStyle315 = SvgUtils.isCssAttr(outElem315, "visibility") ? (SVGStylable)outElem315 : null;
        outElem316 = document.getElementById("text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis");
        outStyle316 = SvgUtils.isCssAttr(outElem316, "fill") ? (SVGStylable)outElem316 : null;
        outElem317 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis");
        outStyle317 = SvgUtils.isCssAttr(outElem317, "transform") ? (SVGStylable)outElem317 : null;
        outElem318 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis");
        outStyle318 = SvgUtils.isCssAttr(outElem318, "transform") ? (SVGStylable)outElem318 : null;
        outElem319 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis");
        outStyle319 = SvgUtils.isCssAttr(outElem319, "transform") ? (SVGStylable)outElem319 : null;
        outElem320 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis");
        outStyle320 = SvgUtils.isCssAttr(outElem320, "transform") ? (SVGStylable)outElem320 : null;
        outElem321 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis");
        outStyle321 = SvgUtils.isCssAttr(outElem321, "transform") ? (SVGStylable)outElem321 : null;
        outElem322 = document.getElementById("titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis");
        outStyle322 = SvgUtils.isCssAttr(outElem322, "transform") ? (SVGStylable)outElem322 : null;
        outElem323 = document.getElementById("blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis");
        outStyle323 = SvgUtils.isCssAttr(outElem323, "transform") ? (SVGStylable)outElem323 : null;
        outElem324 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis");
        outStyle324 = SvgUtils.isCssAttr(outElem324, "fill") ? (SVGStylable)outElem324 : null;
        outElem325 = document.getElementById("blokken_overzicht_systemen_en_detecties_verlichting_linker_buis");
        outStyle325 = SvgUtils.isCssAttr(outElem325, "transform") ? (SVGStylable)outElem325 : null;
        outElem326 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis");
        outStyle326 = SvgUtils.isCssAttr(outElem326, "fill") ? (SVGStylable)outElem326 : null;
        outElem327 = document.getElementById("blokken_overzicht_systemen_en_detecties_CCTV_linker_buis");
        outStyle327 = SvgUtils.isCssAttr(outElem327, "transform") ? (SVGStylable)outElem327 : null;
        outElem328 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis");
        outStyle328 = SvgUtils.isCssAttr(outElem328, "fill") ? (SVGStylable)outElem328 : null;
        outElem329 = document.getElementById("blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis");
        outStyle329 = SvgUtils.isCssAttr(outElem329, "transform") ? (SVGStylable)outElem329 : null;
        outElem330 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis");
        outStyle330 = SvgUtils.isCssAttr(outElem330, "fill") ? (SVGStylable)outElem330 : null;
        outElem331 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis");
        outText331 = SvgUtils.getTextNode(outElem331);
        outElem332 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis");
        outText332 = SvgUtils.getTextNode(outElem332);
        outElem333 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis");
        outText333 = SvgUtils.getTextNode(outElem333);
        outElem334 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis");
        outText334 = SvgUtils.getTextNode(outElem334);
        outElem335 = document.getElementById("blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis");
        outStyle335 = SvgUtils.isCssAttr(outElem335, "transform") ? (SVGStylable)outElem335 : null;
        outElem336 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis");
        outStyle336 = SvgUtils.isCssAttr(outElem336, "fill") ? (SVGStylable)outElem336 : null;
        outElem337 = document.getElementById("blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis");
        outStyle337 = SvgUtils.isCssAttr(outElem337, "transform") ? (SVGStylable)outElem337 : null;
        outElem338 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis");
        outStyle338 = SvgUtils.isCssAttr(outElem338, "fill") ? (SVGStylable)outElem338 : null;
        outElem339 = document.getElementById("blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis");
        outStyle339 = SvgUtils.isCssAttr(outElem339, "transform") ? (SVGStylable)outElem339 : null;
        outElem340 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis");
        outStyle340 = SvgUtils.isCssAttr(outElem340, "fill") ? (SVGStylable)outElem340 : null;
        outElem341 = document.getElementById("blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis");
        outStyle341 = SvgUtils.isCssAttr(outElem341, "transform") ? (SVGStylable)outElem341 : null;
        outElem342 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis");
        outStyle342 = SvgUtils.isCssAttr(outElem342, "fill") ? (SVGStylable)outElem342 : null;
        outElem343 = document.getElementById("blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis");
        outStyle343 = SvgUtils.isCssAttr(outElem343, "transform") ? (SVGStylable)outElem343 : null;
        outElem344 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis");
        outStyle344 = SvgUtils.isCssAttr(outElem344, "fill") ? (SVGStylable)outElem344 : null;
        outElem345 = document.getElementById("blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis");
        outStyle345 = SvgUtils.isCssAttr(outElem345, "transform") ? (SVGStylable)outElem345 : null;
        outElem346 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis");
        outStyle346 = SvgUtils.isCssAttr(outElem346, "fill") ? (SVGStylable)outElem346 : null;
        outElem347 = document.getElementById("blokken_overzicht_systemen_en_detecties_Licht_linker_buis");
        outStyle347 = SvgUtils.isCssAttr(outElem347, "transform") ? (SVGStylable)outElem347 : null;
        outElem348 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis");
        outStyle348 = SvgUtils.isCssAttr(outElem348, "fill") ? (SVGStylable)outElem348 : null;
        outElem349 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis");
        outText349 = SvgUtils.getTextNode(outElem349);
        outElem350 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis");
        outText350 = SvgUtils.getTextNode(outElem350);
        outElem351 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis");
        outText351 = SvgUtils.getTextNode(outElem351);
        outElem352 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis");
        outText352 = SvgUtils.getTextNode(outElem352);
        outElem353 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis");
        outText353 = SvgUtils.getTextNode(outElem353);
        outElem354 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis");
        outText354 = SvgUtils.getTextNode(outElem354);
        outElem355 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis");
        outText355 = SvgUtils.getTextNode(outElem355);
        outElem356 = document.getElementById("blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis");
        outStyle356 = SvgUtils.isCssAttr(outElem356, "transform") ? (SVGStylable)outElem356 : null;
        outElem357 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis");
        outStyle357 = SvgUtils.isCssAttr(outElem357, "fill") ? (SVGStylable)outElem357 : null;
        outElem358 = document.getElementById("blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis");
        outStyle358 = SvgUtils.isCssAttr(outElem358, "transform") ? (SVGStylable)outElem358 : null;
        outElem359 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis");
        outStyle359 = SvgUtils.isCssAttr(outElem359, "fill") ? (SVGStylable)outElem359 : null;
        outElem360 = document.getElementById("blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis");
        outStyle360 = SvgUtils.isCssAttr(outElem360, "transform") ? (SVGStylable)outElem360 : null;
        outElem361 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis");
        outStyle361 = SvgUtils.isCssAttr(outElem361, "fill") ? (SVGStylable)outElem361 : null;
        outElem362 = document.getElementById("blokken_overzicht_systemen_en_detecties_Intercom_linker_buis");
        outStyle362 = SvgUtils.isCssAttr(outElem362, "transform") ? (SVGStylable)outElem362 : null;
        outElem363 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis");
        outStyle363 = SvgUtils.isCssAttr(outElem363, "fill") ? (SVGStylable)outElem363 : null;
        outElem364 = document.getElementById("blokken_overzicht_systemen_en_detecties_Bediening_linker_buis");
        outStyle364 = SvgUtils.isCssAttr(outElem364, "transform") ? (SVGStylable)outElem364 : null;
        outElem365 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis");
        outStyle365 = SvgUtils.isCssAttr(outElem365, "fill") ? (SVGStylable)outElem365 : null;
        outElem366 = document.getElementById("blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis");
        outStyle366 = SvgUtils.isCssAttr(outElem366, "transform") ? (SVGStylable)outElem366 : null;
        outElem367 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis");
        outStyle367 = SvgUtils.isCssAttr(outElem367, "fill") ? (SVGStylable)outElem367 : null;
        outElem368 = document.getElementById("blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis");
        outStyle368 = SvgUtils.isCssAttr(outElem368, "transform") ? (SVGStylable)outElem368 : null;
        outElem369 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis");
        outStyle369 = SvgUtils.isCssAttr(outElem369, "fill") ? (SVGStylable)outElem369 : null;
        outElem370 = document.getElementById("blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis");
        outStyle370 = SvgUtils.isCssAttr(outElem370, "transform") ? (SVGStylable)outElem370 : null;
        outElem371 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis");
        outStyle371 = SvgUtils.isCssAttr(outElem371, "fill") ? (SVGStylable)outElem371 : null;
        outElem372 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis");
        outText372 = SvgUtils.getTextNode(outElem372);
        outElem373 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis");
        outText373 = SvgUtils.getTextNode(outElem373);
        outElem374 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis");
        outText374 = SvgUtils.getTextNode(outElem374);
        outElem375 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis");
        outText375 = SvgUtils.getTextNode(outElem375);
        outElem376 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis");
        outText376 = SvgUtils.getTextNode(outElem376);
        outElem377 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis");
        outText377 = SvgUtils.getTextNode(outElem377);
        outElem378 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis");
        outText378 = SvgUtils.getTextNode(outElem378);
        outElem379 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis");
        outText379 = SvgUtils.getTextNode(outElem379);
        outElem380 = document.getElementById("blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis");
        outStyle380 = SvgUtils.isCssAttr(outElem380, "transform") ? (SVGStylable)outElem380 : null;
        outElem381 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis");
        outStyle381 = SvgUtils.isCssAttr(outElem381, "fill") ? (SVGStylable)outElem381 : null;
        outElem382 = document.getElementById("blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis");
        outStyle382 = SvgUtils.isCssAttr(outElem382, "transform") ? (SVGStylable)outElem382 : null;
        outElem383 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis");
        outStyle383 = SvgUtils.isCssAttr(outElem383, "fill") ? (SVGStylable)outElem383 : null;
        outElem384 = document.getElementById("blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis");
        outStyle384 = SvgUtils.isCssAttr(outElem384, "transform") ? (SVGStylable)outElem384 : null;
        outElem385 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis");
        outStyle385 = SvgUtils.isCssAttr(outElem385, "fill") ? (SVGStylable)outElem385 : null;
        outElem386 = document.getElementById("blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis");
        outStyle386 = SvgUtils.isCssAttr(outElem386, "transform") ? (SVGStylable)outElem386 : null;
        outElem387 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis");
        outStyle387 = SvgUtils.isCssAttr(outElem387, "fill") ? (SVGStylable)outElem387 : null;
        outElem388 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis");
        outText388 = SvgUtils.getTextNode(outElem388);
        outElem389 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis");
        outText389 = SvgUtils.getTextNode(outElem389);
        outElem390 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis");
        outText390 = SvgUtils.getTextNode(outElem390);
        outElem391 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis");
        outText391 = SvgUtils.getTextNode(outElem391);
        outElem392 = document.getElementById("blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis");
        outStyle392 = SvgUtils.isCssAttr(outElem392, "transform") ? (SVGStylable)outElem392 : null;
        outElem393 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis");
        outStyle393 = SvgUtils.isCssAttr(outElem393, "fill") ? (SVGStylable)outElem393 : null;
        outElem394 = document.getElementById("blokken_overzicht_systemen_en_detecties_SOS_linker_buis");
        outStyle394 = SvgUtils.isCssAttr(outElem394, "transform") ? (SVGStylable)outElem394 : null;
        outElem395 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis");
        outStyle395 = SvgUtils.isCssAttr(outElem395, "fill") ? (SVGStylable)outElem395 : null;
        outElem396 = document.getElementById("blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis");
        outStyle396 = SvgUtils.isCssAttr(outElem396, "transform") ? (SVGStylable)outElem396 : null;
        outElem397 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis");
        outStyle397 = SvgUtils.isCssAttr(outElem397, "fill") ? (SVGStylable)outElem397 : null;
        outElem398 = document.getElementById("blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis");
        outStyle398 = SvgUtils.isCssAttr(outElem398, "transform") ? (SVGStylable)outElem398 : null;
        outElem399 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis");
        outStyle399 = SvgUtils.isCssAttr(outElem399, "fill") ? (SVGStylable)outElem399 : null;
        outElem400 = document.getElementById("blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis");
        outStyle400 = SvgUtils.isCssAttr(outElem400, "transform") ? (SVGStylable)outElem400 : null;
        outElem401 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis");
        outStyle401 = SvgUtils.isCssAttr(outElem401, "fill") ? (SVGStylable)outElem401 : null;
        outElem402 = document.getElementById("blokken_overzicht_systemen_en_detecties_Zicht_linker_buis");
        outStyle402 = SvgUtils.isCssAttr(outElem402, "transform") ? (SVGStylable)outElem402 : null;
        outElem403 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis");
        outStyle403 = SvgUtils.isCssAttr(outElem403, "fill") ? (SVGStylable)outElem403 : null;
        outElem404 = document.getElementById("blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis");
        outStyle404 = SvgUtils.isCssAttr(outElem404, "transform") ? (SVGStylable)outElem404 : null;
        outElem405 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis");
        outStyle405 = SvgUtils.isCssAttr(outElem405, "fill") ? (SVGStylable)outElem405 : null;
        outElem406 = document.getElementById("blokken_overzicht_systemen_en_detecties_Deur_linker_buis");
        outStyle406 = SvgUtils.isCssAttr(outElem406, "transform") ? (SVGStylable)outElem406 : null;
        outElem407 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis");
        outStyle407 = SvgUtils.isCssAttr(outElem407, "fill") ? (SVGStylable)outElem407 : null;
        outElem408 = document.getElementById("blokken_overzicht_systemen_en_detecties_Blusser_linker_buis");
        outStyle408 = SvgUtils.isCssAttr(outElem408, "transform") ? (SVGStylable)outElem408 : null;
        outElem409 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis");
        outStyle409 = SvgUtils.isCssAttr(outElem409, "fill") ? (SVGStylable)outElem409 : null;
        outElem410 = document.getElementById("blokken_overzicht_systemen_en_detecties_Haspel_linker_buis");
        outStyle410 = SvgUtils.isCssAttr(outElem410, "transform") ? (SVGStylable)outElem410 : null;
        outElem411 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis");
        outStyle411 = SvgUtils.isCssAttr(outElem411, "fill") ? (SVGStylable)outElem411 : null;
        outElem412 = document.getElementById("blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis");
        outStyle412 = SvgUtils.isCssAttr(outElem412, "transform") ? (SVGStylable)outElem412 : null;
        outElem413 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis");
        outStyle413 = SvgUtils.isCssAttr(outElem413, "fill") ? (SVGStylable)outElem413 : null;
        outElem414 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis");
        outText414 = SvgUtils.getTextNode(outElem414);
        outElem415 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis");
        outText415 = SvgUtils.getTextNode(outElem415);
        outElem416 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis");
        outText416 = SvgUtils.getTextNode(outElem416);
        outElem417 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis");
        outText417 = SvgUtils.getTextNode(outElem417);
        outElem418 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis");
        outText418 = SvgUtils.getTextNode(outElem418);
        outElem419 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis");
        outText419 = SvgUtils.getTextNode(outElem419);
        outElem420 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis");
        outText420 = SvgUtils.getTextNode(outElem420);
        outElem421 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis");
        outText421 = SvgUtils.getTextNode(outElem421);
        outElem422 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis");
        outText422 = SvgUtils.getTextNode(outElem422);
        outElem423 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis");
        outText423 = SvgUtils.getTextNode(outElem423);
        outElem424 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis");
        outText424 = SvgUtils.getTextNode(outElem424);
        outElem425 = document.getElementById("blokken_overzicht_systemen_en_detecties_C2000_linker_buis");
        outStyle425 = SvgUtils.isCssAttr(outElem425, "transform") ? (SVGStylable)outElem425 : null;
        outElem426 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis");
        outStyle426 = SvgUtils.isCssAttr(outElem426, "fill") ? (SVGStylable)outElem426 : null;
        outElem427 = document.getElementById("blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis");
        outStyle427 = SvgUtils.isCssAttr(outElem427, "transform") ? (SVGStylable)outElem427 : null;
        outElem428 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis");
        outStyle428 = SvgUtils.isCssAttr(outElem428, "fill") ? (SVGStylable)outElem428 : null;
        outElem429 = document.getElementById("blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis");
        outStyle429 = SvgUtils.isCssAttr(outElem429, "transform") ? (SVGStylable)outElem429 : null;
        outElem430 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis");
        outStyle430 = SvgUtils.isCssAttr(outElem430, "fill") ? (SVGStylable)outElem430 : null;
        outElem431 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis");
        outText431 = SvgUtils.getTextNode(outElem431);
        outElem432 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis");
        outText432 = SvgUtils.getTextNode(outElem432);
        outElem433 = document.getElementById("text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis");
        outText433 = SvgUtils.getTextNode(outElem433);
        outElem434 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_rechter_buis");
        outStyle434 = SvgUtils.isCssAttr(outElem434, "visibility") ? (SVGStylable)outElem434 : null;
        outElem435 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_rechter_buis");
        outStyle435 = SvgUtils.isCssAttr(outElem435, "fill") ? (SVGStylable)outElem435 : null;
        outElem436 = document.getElementById("Langsventilatie_auto_knop_rechter_buis");
        outStyle436 = SvgUtils.isCssAttr(outElem436, "visibility") ? (SVGStylable)outElem436 : null;
        outElem437 = document.getElementById("Langsventilatie_handmatig_knop_rechter_buis");
        outStyle437 = SvgUtils.isCssAttr(outElem437, "visibility") ? (SVGStylable)outElem437 : null;
        outElem438 = document.getElementById("langsventilatie_handmatig_rechter_buis");
        outStyle438 = SvgUtils.isCssAttr(outElem438, "visibility") ? (SVGStylable)outElem438 : null;
        outElem439 = document.getElementById("Langsventilatie_auto_rechter_buis");
        outStyle439 = SvgUtils.isCssAttr(outElem439, "visibility") ? (SVGStylable)outElem439 : null;
        outElem440 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_rechter_buis");
        outStyle440 = SvgUtils.isCssAttr(outElem440, "visibility") ? (SVGStylable)outElem440 : null;
        outElem441 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis");
        outStyle441 = SvgUtils.isCssAttr(outElem441, "visibility") ? (SVGStylable)outElem441 : null;
        outElem442 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_rechter_buis");
        outStyle442 = SvgUtils.isCssAttr(outElem442, "visibility") ? (SVGStylable)outElem442 : null;
        outElem443 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_rechter_buis");
        outStyle443 = SvgUtils.isCssAttr(outElem443, "visibility") ? (SVGStylable)outElem443 : null;
        outElem444 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_rechter_buis");
        outStyle444 = SvgUtils.isCssAttr(outElem444, "visibility") ? (SVGStylable)outElem444 : null;
        outElem445 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_rechter_buis");
        outStyle445 = SvgUtils.isCssAttr(outElem445, "visibility") ? (SVGStylable)outElem445 : null;
        outElem446 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_rechter_buis");
        outStyle446 = SvgUtils.isCssAttr(outElem446, "visibility") ? (SVGStylable)outElem446 : null;
        outElem447 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_rechter_buis");
        outStyle447 = SvgUtils.isCssAttr(outElem447, "visibility") ? (SVGStylable)outElem447 : null;
        outElem448 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_rechter_buis");
        outStyle448 = SvgUtils.isCssAttr(outElem448, "visibility") ? (SVGStylable)outElem448 : null;
        outElem449 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_rechter_buis");
        outStyle449 = SvgUtils.isCssAttr(outElem449, "visibility") ? (SVGStylable)outElem449 : null;
        outElem450 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_rechter_buis");
        outStyle450 = SvgUtils.isCssAttr(outElem450, "visibility") ? (SVGStylable)outElem450 : null;
        outElem451 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis");
        outStyle451 = SvgUtils.isCssAttr(outElem451, "visibility") ? (SVGStylable)outElem451 : null;
        outElem452 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rechter_buis");
        outStyle452 = SvgUtils.isCssAttr(outElem452, "visibility") ? (SVGStylable)outElem452 : null;
        outElem453 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_rechter_buis");
        outStyle453 = SvgUtils.isCssAttr(outElem453, "visibility") ? (SVGStylable)outElem453 : null;
        outElem454 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_rechter_buis");
        outStyle454 = SvgUtils.isCssAttr(outElem454, "visibility") ? (SVGStylable)outElem454 : null;
        outElem455 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_percentage_stand_rechter_buis");
        outText455 = SvgUtils.getTextNode(outElem455);
        outElem456 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_rechter_buis");
        outStyle456 = SvgUtils.isCssAttr(outElem456, "visibility") ? (SVGStylable)outElem456 : null;
        outElem457 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_rechter_buis");
        outStyle457 = SvgUtils.isCssAttr(outElem457, "visibility") ? (SVGStylable)outElem457 : null;
        outElem458 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_stand_richting_rechter_buis");
        outText458 = SvgUtils.getTextNode(outElem458);
        outElem459 = document.getElementById("overzicht_systemen_en_detecties_verlichting_rechter_buis");
        outStyle459 = SvgUtils.isCssAttr(outElem459, "visibility") ? (SVGStylable)outElem459 : null;
        outElem460 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_rechter_buis");
        outStyle460 = SvgUtils.isCssAttr(outElem460, "fill") ? (SVGStylable)outElem460 : null;
        outElem461 = document.getElementById("verlichting_auto_knop_rechter_buis");
        outStyle461 = SvgUtils.isCssAttr(outElem461, "visibility") ? (SVGStylable)outElem461 : null;
        outElem462 = document.getElementById("verlichting_handmatig_knop_rechter_buis");
        outStyle462 = SvgUtils.isCssAttr(outElem462, "visibility") ? (SVGStylable)outElem462 : null;
        outElem463 = document.getElementById("verlichting_handmatig_rechter_buis");
        outStyle463 = SvgUtils.isCssAttr(outElem463, "visibility") ? (SVGStylable)outElem463 : null;
        outElem464 = document.getElementById("verlichting_auto_rechter_buis");
        outStyle464 = SvgUtils.isCssAttr(outElem464, "visibility") ? (SVGStylable)outElem464 : null;
        outElem465 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_rechter_buis");
        outStyle465 = SvgUtils.isCssAttr(outElem465, "visibility") ? (SVGStylable)outElem465 : null;
        outElem466 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis");
        outStyle466 = SvgUtils.isCssAttr(outElem466, "visibility") ? (SVGStylable)outElem466 : null;
        outElem467 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_rechter_buis");
        outStyle467 = SvgUtils.isCssAttr(outElem467, "visibility") ? (SVGStylable)outElem467 : null;
        outElem468 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_rechter_buis");
        outStyle468 = SvgUtils.isCssAttr(outElem468, "visibility") ? (SVGStylable)outElem468 : null;
        outElem469 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_rechter_buis");
        outStyle469 = SvgUtils.isCssAttr(outElem469, "visibility") ? (SVGStylable)outElem469 : null;
        outElem470 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_rechter_buis");
        outStyle470 = SvgUtils.isCssAttr(outElem470, "visibility") ? (SVGStylable)outElem470 : null;
        outElem471 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_rechter_buis");
        outStyle471 = SvgUtils.isCssAttr(outElem471, "visibility") ? (SVGStylable)outElem471 : null;
        outElem472 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_rechter_buis");
        outStyle472 = SvgUtils.isCssAttr(outElem472, "visibility") ? (SVGStylable)outElem472 : null;
        outElem473 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_rechter_buis");
        outStyle473 = SvgUtils.isCssAttr(outElem473, "visibility") ? (SVGStylable)outElem473 : null;
        outElem474 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_rechter_buis");
        outStyle474 = SvgUtils.isCssAttr(outElem474, "visibility") ? (SVGStylable)outElem474 : null;
        outElem475 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_rechter_buis");
        outStyle475 = SvgUtils.isCssAttr(outElem475, "visibility") ? (SVGStylable)outElem475 : null;
        outElem476 = document.getElementById("overzicht_systemen_en_detecties_verlichting_percentage_stand_rechter_buis");
        outText476 = SvgUtils.getTextNode(outElem476);
        outElem477 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_rechter_buis");
        outStyle477 = SvgUtils.isCssAttr(outElem477, "fill") ? (SVGStylable)outElem477 : null;
        outElem478 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_rechter_buis");
        outStyle478 = SvgUtils.isCssAttr(outElem478, "fill") ? (SVGStylable)outElem478 : null;
        outElem479 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_rechter_buis");
        outStyle479 = SvgUtils.isCssAttr(outElem479, "visibility") ? (SVGStylable)outElem479 : null;
        outElem480 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_rechter_buis");
        outStyle480 = SvgUtils.isCssAttr(outElem480, "fill") ? (SVGStylable)outElem480 : null;
        outElem481 = document.getElementById("geluidsbakens_auto_knop_rechter_buis");
        outStyle481 = SvgUtils.isCssAttr(outElem481, "visibility") ? (SVGStylable)outElem481 : null;
        outElem482 = document.getElementById("geluidsbakens_handmatig_knop_rechter_buis");
        outStyle482 = SvgUtils.isCssAttr(outElem482, "visibility") ? (SVGStylable)outElem482 : null;
        outElem483 = document.getElementById("geluidsbakens_handmatig_rechter_buis");
        outStyle483 = SvgUtils.isCssAttr(outElem483, "visibility") ? (SVGStylable)outElem483 : null;
        outElem484 = document.getElementById("geluidsbakens_auto_rechter_buis");
        outStyle484 = SvgUtils.isCssAttr(outElem484, "visibility") ? (SVGStylable)outElem484 : null;
        outElem485 = document.getElementById("contourverlichting_auto_knop_rechter_buis");
        outStyle485 = SvgUtils.isCssAttr(outElem485, "visibility") ? (SVGStylable)outElem485 : null;
        outElem486 = document.getElementById("contourverlichting_handmatig_knop_rechter_buis");
        outStyle486 = SvgUtils.isCssAttr(outElem486, "visibility") ? (SVGStylable)outElem486 : null;
        outElem487 = document.getElementById("contourverlichting_handmatig_rechter_buis");
        outStyle487 = SvgUtils.isCssAttr(outElem487, "visibility") ? (SVGStylable)outElem487 : null;
        outElem488 = document.getElementById("contourverlichting_auto_rechter_buis");
        outStyle488 = SvgUtils.isCssAttr(outElem488, "visibility") ? (SVGStylable)outElem488 : null;
        outElem489 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis");
        outStyle489 = SvgUtils.isCssAttr(outElem489, "visibility") ? (SVGStylable)outElem489 : null;
        outElem490 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_rechter_buis");
        outStyle490 = SvgUtils.isCssAttr(outElem490, "visibility") ? (SVGStylable)outElem490 : null;
        outElem491 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_rechter_buis");
        outStyle491 = SvgUtils.isCssAttr(outElem491, "visibility") ? (SVGStylable)outElem491 : null;
        outElem492 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_geluidsbakens_stand_rechter_buis");
        outText492 = SvgUtils.getTextNode(outElem492);
        outElem493 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_rechter_buis");
        outStyle493 = SvgUtils.isCssAttr(outElem493, "visibility") ? (SVGStylable)outElem493 : null;
        outElem494 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_rechter_buis");
        outStyle494 = SvgUtils.isCssAttr(outElem494, "visibility") ? (SVGStylable)outElem494 : null;
        outElem495 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_rechter_buis");
        outStyle495 = SvgUtils.isCssAttr(outElem495, "visibility") ? (SVGStylable)outElem495 : null;
        outElem496 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis");
        outStyle496 = SvgUtils.isCssAttr(outElem496, "visibility") ? (SVGStylable)outElem496 : null;
        outElem497 = document.getElementById("overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_rechter_buis");
        outStyle497 = SvgUtils.isCssAttr(outElem497, "visibility") ? (SVGStylable)outElem497 : null;
        outElem498 = document.getElementById("overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_rechter_buis");
        outStyle498 = SvgUtils.isCssAttr(outElem498, "visibility") ? (SVGStylable)outElem498 : null;
        outElem499 = document.getElementById("overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_rechter_buis");
        outStyle499 = SvgUtils.isCssAttr(outElem499, "visibility") ? (SVGStylable)outElem499 : null;
        outElem500 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_contourverlichting_stand_rechter_buis");
        outText500 = SvgUtils.getTextNode(outElem500);
        outElem501 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_rechter_buis");
        outStyle501 = SvgUtils.isCssAttr(outElem501, "fill") ? (SVGStylable)outElem501 : null;
        outElem502 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeuren_rechter_buis");
        outStyle502 = SvgUtils.isCssAttr(outElem502, "visibility") ? (SVGStylable)outElem502 : null;
        outElem503 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_rechter_buis");
        outStyle503 = SvgUtils.isCssAttr(outElem503, "fill") ? (SVGStylable)outElem503 : null;
        outElem504 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeuren_open_sensor_stand_rechter_buis");
        outText504 = SvgUtils.getTextNode(outElem504);
        outElem505 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_rechter_buis");
        outStyle505 = SvgUtils.isCssAttr(outElem505, "fill") ? (SVGStylable)outElem505 : null;
        outElem506 = document.getElementById("overzicht_systemen_en_detecties_dynamische_vluchtroute_rechter_buis");
        outStyle506 = SvgUtils.isCssAttr(outElem506, "visibility") ? (SVGStylable)outElem506 : null;
        outElem507 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_rechter_buis");
        outStyle507 = SvgUtils.isCssAttr(outElem507, "fill") ? (SVGStylable)outElem507 : null;
        outElem508 = document.getElementById("dynamische_vluchtroute_auto_knop_rechter_buis");
        outStyle508 = SvgUtils.isCssAttr(outElem508, "visibility") ? (SVGStylable)outElem508 : null;
        outElem509 = document.getElementById("dynamische_vluchtroute_handmatig_knop_rechter_buis");
        outStyle509 = SvgUtils.isCssAttr(outElem509, "visibility") ? (SVGStylable)outElem509 : null;
        outElem510 = document.getElementById("dynamische_vluchtroute_handmatig_rechter_buis");
        outStyle510 = SvgUtils.isCssAttr(outElem510, "visibility") ? (SVGStylable)outElem510 : null;
        outElem511 = document.getElementById("dynamische_vluchtroute_auto_rechter_buis");
        outStyle511 = SvgUtils.isCssAttr(outElem511, "visibility") ? (SVGStylable)outElem511 : null;
        outElem512 = document.getElementById("overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis");
        outStyle512 = SvgUtils.isCssAttr(outElem512, "visibility") ? (SVGStylable)outElem512 : null;
        outElem513 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_rechter_buis");
        outStyle513 = SvgUtils.isCssAttr(outElem513, "visibility") ? (SVGStylable)outElem513 : null;
        outElem514 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_rechter_buis");
        outStyle514 = SvgUtils.isCssAttr(outElem514, "visibility") ? (SVGStylable)outElem514 : null;
        outElem515 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_rechter_buis");
        outStyle515 = SvgUtils.isCssAttr(outElem515, "visibility") ? (SVGStylable)outElem515 : null;
        outElem516 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_rechter_buis");
        outStyle516 = SvgUtils.isCssAttr(outElem516, "visibility") ? (SVGStylable)outElem516 : null;
        outElem517 = document.getElementById("overzicht_systemen_en_detecties_dynamische_vluchtroute_stand_rechter_buis");
        outText517 = SvgUtils.getTextNode(outElem517);
        outElem518 = document.getElementById("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_rechter_buis");
        outStyle518 = SvgUtils.isCssAttr(outElem518, "visibility") ? (SVGStylable)outElem518 : null;
        outElem519 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_rechter_buis");
        outStyle519 = SvgUtils.isCssAttr(outElem519, "fill") ? (SVGStylable)outElem519 : null;
        outElem520 = document.getElementById("overdruk_veilige_ruimte_auto_knop_rechter_buis");
        outStyle520 = SvgUtils.isCssAttr(outElem520, "visibility") ? (SVGStylable)outElem520 : null;
        outElem521 = document.getElementById("overdruk_veilige_ruimte_handmatig_knop_rechter_buis");
        outStyle521 = SvgUtils.isCssAttr(outElem521, "visibility") ? (SVGStylable)outElem521 : null;
        outElem522 = document.getElementById("overdruk_veilige_ruimte_handmatig_rechter_buis");
        outStyle522 = SvgUtils.isCssAttr(outElem522, "visibility") ? (SVGStylable)outElem522 : null;
        outElem523 = document.getElementById("overdruk_veilige_ruimte_auto_rechter_buis");
        outStyle523 = SvgUtils.isCssAttr(outElem523, "visibility") ? (SVGStylable)outElem523 : null;
        outElem524 = document.getElementById("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis");
        outStyle524 = SvgUtils.isCssAttr(outElem524, "visibility") ? (SVGStylable)outElem524 : null;
        outElem525 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_rechter_buis");
        outStyle525 = SvgUtils.isCssAttr(outElem525, "visibility") ? (SVGStylable)outElem525 : null;
        outElem526 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_rechter_buis");
        outStyle526 = SvgUtils.isCssAttr(outElem526, "visibility") ? (SVGStylable)outElem526 : null;
        outElem527 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_rechter_buis");
        outStyle527 = SvgUtils.isCssAttr(outElem527, "visibility") ? (SVGStylable)outElem527 : null;
        outElem528 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_rechter_buis");
        outStyle528 = SvgUtils.isCssAttr(outElem528, "visibility") ? (SVGStylable)outElem528 : null;
        outElem529 = document.getElementById("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_stand_rechter_buis");
        outText529 = SvgUtils.getTextNode(outElem529);
        outElem530 = document.getElementById("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_rechter_buis");
        outStyle530 = SvgUtils.isCssAttr(outElem530, "visibility") ? (SVGStylable)outElem530 : null;
        outElem531 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Licht_rechter_buis");
        outStyle531 = SvgUtils.isCssAttr(outElem531, "fill") ? (SVGStylable)outElem531 : null;
        outElem532 = document.getElementById("verlichting_veilige_ruimte_auto_knop_rechter_buis");
        outStyle532 = SvgUtils.isCssAttr(outElem532, "visibility") ? (SVGStylable)outElem532 : null;
        outElem533 = document.getElementById("verlichting_veilige_ruimte_handmatig_knop_rechter_buis");
        outStyle533 = SvgUtils.isCssAttr(outElem533, "visibility") ? (SVGStylable)outElem533 : null;
        outElem534 = document.getElementById("verlichting_veilige_ruimte_handmatig_rechter_buis");
        outStyle534 = SvgUtils.isCssAttr(outElem534, "visibility") ? (SVGStylable)outElem534 : null;
        outElem535 = document.getElementById("verlichting_veilige_ruimte_auto_rechter_buis");
        outStyle535 = SvgUtils.isCssAttr(outElem535, "visibility") ? (SVGStylable)outElem535 : null;
        outElem536 = document.getElementById("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis");
        outStyle536 = SvgUtils.isCssAttr(outElem536, "visibility") ? (SVGStylable)outElem536 : null;
        outElem537 = document.getElementById("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_rechter_buis");
        outStyle537 = SvgUtils.isCssAttr(outElem537, "visibility") ? (SVGStylable)outElem537 : null;
        outElem538 = document.getElementById("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_rechter_buis");
        outStyle538 = SvgUtils.isCssAttr(outElem538, "visibility") ? (SVGStylable)outElem538 : null;
        outElem539 = document.getElementById("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_rechter_buis");
        outStyle539 = SvgUtils.isCssAttr(outElem539, "visibility") ? (SVGStylable)outElem539 : null;
        outElem540 = document.getElementById("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_stand_rechter_buis");
        outText540 = SvgUtils.getTextNode(outElem540);
        outElem541 = document.getElementById("overzicht_systemen_en_detecties_bluswatervoorziening_rechter_buis");
        outStyle541 = SvgUtils.isCssAttr(outElem541, "visibility") ? (SVGStylable)outElem541 : null;
        outElem542 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_rechter_buis");
        outStyle542 = SvgUtils.isCssAttr(outElem542, "fill") ? (SVGStylable)outElem542 : null;
        outElem543 = document.getElementById("bluswatervoorziening_auto_knop_rechter_buis");
        outStyle543 = SvgUtils.isCssAttr(outElem543, "visibility") ? (SVGStylable)outElem543 : null;
        outElem544 = document.getElementById("bluswatervoorziening_handmatig_knop_rechter_buis");
        outStyle544 = SvgUtils.isCssAttr(outElem544, "visibility") ? (SVGStylable)outElem544 : null;
        outElem545 = document.getElementById("bluswatervoorziening_handmatig_rechter_buis");
        outStyle545 = SvgUtils.isCssAttr(outElem545, "visibility") ? (SVGStylable)outElem545 : null;
        outElem546 = document.getElementById("bluswatervoorziening_auto_rechter_buis");
        outStyle546 = SvgUtils.isCssAttr(outElem546, "visibility") ? (SVGStylable)outElem546 : null;
        outElem547 = document.getElementById("overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis");
        outStyle547 = SvgUtils.isCssAttr(outElem547, "visibility") ? (SVGStylable)outElem547 : null;
        outElem548 = document.getElementById("overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_rechter_buis");
        outStyle548 = SvgUtils.isCssAttr(outElem548, "visibility") ? (SVGStylable)outElem548 : null;
        outElem549 = document.getElementById("overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_rechter_buis");
        outStyle549 = SvgUtils.isCssAttr(outElem549, "visibility") ? (SVGStylable)outElem549 : null;
        outElem550 = document.getElementById("overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_rechter_buis");
        outStyle550 = SvgUtils.isCssAttr(outElem550, "visibility") ? (SVGStylable)outElem550 : null;
        outElem551 = document.getElementById("overzicht_systemen_en_detecties_blussen_ingestelde_stand_rechter_buis");
        outText551 = SvgUtils.getTextNode(outElem551);
        outElem552 = document.getElementById("brand_blus_installatie_sensor_laag_text_rechter_buis");
        outText552 = SvgUtils.getTextNode(outElem552);
        outElem553 = document.getElementById("brand_blus_installatie_sensor_hoog_text_rechter_buis");
        outText553 = SvgUtils.getTextNode(outElem553);
        outElem554 = document.getElementById("brand_blus_installatie_blus_pomp_stand_text_rechter_buis");
        outText554 = SvgUtils.getTextNode(outElem554);
        outElem555 = document.getElementById("overzicht_systemen_en_detecties_vloeistofafvoer_rechter_buis");
        outStyle555 = SvgUtils.isCssAttr(outElem555, "visibility") ? (SVGStylable)outElem555 : null;
        outElem556 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_rechter_buis");
        outStyle556 = SvgUtils.isCssAttr(outElem556, "fill") ? (SVGStylable)outElem556 : null;
        outElem557 = document.getElementById("midden_pomp_kelder_auto_knop_rechter_buis");
        outStyle557 = SvgUtils.isCssAttr(outElem557, "visibility") ? (SVGStylable)outElem557 : null;
        outElem558 = document.getElementById("midden_pomp_kelder_handmatig_knop_rechter_buis");
        outStyle558 = SvgUtils.isCssAttr(outElem558, "visibility") ? (SVGStylable)outElem558 : null;
        outElem559 = document.getElementById("midden_pomp_kelder_handmatig_rechter_buis");
        outStyle559 = SvgUtils.isCssAttr(outElem559, "visibility") ? (SVGStylable)outElem559 : null;
        outElem560 = document.getElementById("midden_pomp_kelder_auto_rechter_buis");
        outStyle560 = SvgUtils.isCssAttr(outElem560, "visibility") ? (SVGStylable)outElem560 : null;
        outElem561 = document.getElementById("overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis");
        outStyle561 = SvgUtils.isCssAttr(outElem561, "visibility") ? (SVGStylable)outElem561 : null;
        outElem562 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_rechter_buis");
        outStyle562 = SvgUtils.isCssAttr(outElem562, "visibility") ? (SVGStylable)outElem562 : null;
        outElem563 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_rechter_buis");
        outStyle563 = SvgUtils.isCssAttr(outElem563, "visibility") ? (SVGStylable)outElem563 : null;
        outElem564 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_rechter_buis");
        outStyle564 = SvgUtils.isCssAttr(outElem564, "visibility") ? (SVGStylable)outElem564 : null;
        outElem565 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_rechter_buis");
        outStyle565 = SvgUtils.isCssAttr(outElem565, "visibility") ? (SVGStylable)outElem565 : null;
        outElem566 = document.getElementById("overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_rechter_buis");
        outText566 = SvgUtils.getTextNode(outElem566);
        outElem567 = document.getElementById("overzicht_systemen_en_detecties_midden_pomp_kelder_niveau_stand_rechter_buis");
        outText567 = SvgUtils.getTextNode(outElem567);
        outElem568 = document.getElementById("hoofd_pomp_kelder_1_auto_knop_rechter_buis");
        outStyle568 = SvgUtils.isCssAttr(outElem568, "visibility") ? (SVGStylable)outElem568 : null;
        outElem569 = document.getElementById("hoofd_pomp_kelder_1_handmatig_knop_rechter_buis");
        outStyle569 = SvgUtils.isCssAttr(outElem569, "visibility") ? (SVGStylable)outElem569 : null;
        outElem570 = document.getElementById("hoofd_pomp_kelder_1_handmatig_rechter_buis");
        outStyle570 = SvgUtils.isCssAttr(outElem570, "visibility") ? (SVGStylable)outElem570 : null;
        outElem571 = document.getElementById("hoofd_pomp_kelder_1_auto_rechter_buis");
        outStyle571 = SvgUtils.isCssAttr(outElem571, "visibility") ? (SVGStylable)outElem571 : null;
        outElem572 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis");
        outStyle572 = SvgUtils.isCssAttr(outElem572, "visibility") ? (SVGStylable)outElem572 : null;
        outElem573 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_rechter_buis");
        outStyle573 = SvgUtils.isCssAttr(outElem573, "visibility") ? (SVGStylable)outElem573 : null;
        outElem574 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_rechter_buis");
        outStyle574 = SvgUtils.isCssAttr(outElem574, "visibility") ? (SVGStylable)outElem574 : null;
        outElem575 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_rechter_buis");
        outStyle575 = SvgUtils.isCssAttr(outElem575, "visibility") ? (SVGStylable)outElem575 : null;
        outElem576 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_rechter_buis");
        outStyle576 = SvgUtils.isCssAttr(outElem576, "visibility") ? (SVGStylable)outElem576 : null;
        outElem577 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_rechter_buis");
        outText577 = SvgUtils.getTextNode(outElem577);
        outElem578 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_niveau_stand_rechter_buis");
        outText578 = SvgUtils.getTextNode(outElem578);
        outElem579 = document.getElementById("hoofd_pomp_kelder_2_auto_knop_rechter_buis");
        outStyle579 = SvgUtils.isCssAttr(outElem579, "visibility") ? (SVGStylable)outElem579 : null;
        outElem580 = document.getElementById("hoofd_pomp_kelder_2_handmatig_knop_rechter_buis");
        outStyle580 = SvgUtils.isCssAttr(outElem580, "visibility") ? (SVGStylable)outElem580 : null;
        outElem581 = document.getElementById("hoofd_pomp_kelder_2_handmatig_rechter_buis");
        outStyle581 = SvgUtils.isCssAttr(outElem581, "visibility") ? (SVGStylable)outElem581 : null;
        outElem582 = document.getElementById("hoofd_pomp_kelder_2_auto_rechter_buis");
        outStyle582 = SvgUtils.isCssAttr(outElem582, "visibility") ? (SVGStylable)outElem582 : null;
        outElem583 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis");
        outStyle583 = SvgUtils.isCssAttr(outElem583, "visibility") ? (SVGStylable)outElem583 : null;
        outElem584 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_rechter_buis");
        outStyle584 = SvgUtils.isCssAttr(outElem584, "visibility") ? (SVGStylable)outElem584 : null;
        outElem585 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_rechter_buis");
        outStyle585 = SvgUtils.isCssAttr(outElem585, "visibility") ? (SVGStylable)outElem585 : null;
        outElem586 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_rechter_buis");
        outStyle586 = SvgUtils.isCssAttr(outElem586, "visibility") ? (SVGStylable)outElem586 : null;
        outElem587 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_rechter_buis");
        outStyle587 = SvgUtils.isCssAttr(outElem587, "visibility") ? (SVGStylable)outElem587 : null;
        outElem588 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_rechter_buis");
        outText588 = SvgUtils.getTextNode(outElem588);
        outElem589 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_niveau_stand_rechter_buis");
        outText589 = SvgUtils.getTextNode(outElem589);
        outElem590 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_rechter_buis");
        outStyle590 = SvgUtils.isCssAttr(outElem590, "fill") ? (SVGStylable)outElem590 : null;
        outElem591 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_rechter_buis");
        outStyle591 = SvgUtils.isCssAttr(outElem591, "fill") ? (SVGStylable)outElem591 : null;
        outElem592 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_rechter_buis");
        outStyle592 = SvgUtils.isCssAttr(outElem592, "fill") ? (SVGStylable)outElem592 : null;
        outElem593 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_rechter_buis");
        outStyle593 = SvgUtils.isCssAttr(outElem593, "fill") ? (SVGStylable)outElem593 : null;
        outElem594 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_rechter_buis");
        outStyle594 = SvgUtils.isCssAttr(outElem594, "fill") ? (SVGStylable)outElem594 : null;
        outElem595 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_rechter_buis");
        outStyle595 = SvgUtils.isCssAttr(outElem595, "fill") ? (SVGStylable)outElem595 : null;
        outElem596 = document.getElementById("overzicht_systemen_en_detecties_VRI_en_afsluitboom_rechter_buis");
        outStyle596 = SvgUtils.isCssAttr(outElem596, "visibility") ? (SVGStylable)outElem596 : null;
        outElem597 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_rechter_buis");
        outStyle597 = SvgUtils.isCssAttr(outElem597, "fill") ? (SVGStylable)outElem597 : null;
        outElem598 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_auto_knop_rechter_buis");
        outStyle598 = SvgUtils.isCssAttr(outElem598, "visibility") ? (SVGStylable)outElem598 : null;
        outElem599 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_handmatig_knop_rechter_buis");
        outStyle599 = SvgUtils.isCssAttr(outElem599, "visibility") ? (SVGStylable)outElem599 : null;
        outElem600 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_handmatig_rechter_buis");
        outStyle600 = SvgUtils.isCssAttr(outElem600, "visibility") ? (SVGStylable)outElem600 : null;
        outElem601 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_auto_rechter_buis");
        outStyle601 = SvgUtils.isCssAttr(outElem601, "visibility") ? (SVGStylable)outElem601 : null;
        outElem602 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_auto_knop_rechter_buis");
        outStyle602 = SvgUtils.isCssAttr(outElem602, "visibility") ? (SVGStylable)outElem602 : null;
        outElem603 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_handmatig_knop_rechter_buis");
        outStyle603 = SvgUtils.isCssAttr(outElem603, "visibility") ? (SVGStylable)outElem603 : null;
        outElem604 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_handmatig_rechter_buis");
        outStyle604 = SvgUtils.isCssAttr(outElem604, "visibility") ? (SVGStylable)outElem604 : null;
        outElem605 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_auto_rechter_buis");
        outStyle605 = SvgUtils.isCssAttr(outElem605, "visibility") ? (SVGStylable)outElem605 : null;
        outElem606 = document.getElementById("VRI_en_afsluitboom_buis_status_rechter_buis");
        outText606 = SvgUtils.getTextNode(outElem606);
        outElem607 = document.getElementById("VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_rechter_buis");
        outStyle607 = SvgUtils.isCssAttr(outElem607, "fill") ? (SVGStylable)outElem607 : null;
        outElem608 = document.getElementById("VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_rechter_buis");
        outStyle608 = SvgUtils.isCssAttr(outElem608, "fill") ? (SVGStylable)outElem608 : null;
        outElem609 = document.getElementById("VRI_en_afsluitboom_rood_alle_verkeerslichten_rechter_buis");
        outStyle609 = SvgUtils.isCssAttr(outElem609, "fill") ? (SVGStylable)outElem609 : null;
        outElem610 = document.getElementById("VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_rechter_buis");
        outStyle610 = SvgUtils.isCssAttr(outElem610, "fill") ? (SVGStylable)outElem610 : null;
        outElem611 = document.getElementById("VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_rechter_buis");
        outStyle611 = SvgUtils.isCssAttr(outElem611, "fill") ? (SVGStylable)outElem611 : null;
        outElem612 = document.getElementById("VRI_en_afsluitboom_rood_alle_verkeerslichten_text_rechter_buis");
        outStyle612 = SvgUtils.isCssAttr(outElem612, "fill") ? (SVGStylable)outElem612 : null;
        outElem613 = document.getElementById("VRI_en_afsluitboom_openen_alle_afsluitbomen_rechter_buis");
        outStyle613 = SvgUtils.isCssAttr(outElem613, "fill") ? (SVGStylable)outElem613 : null;
        outElem614 = document.getElementById("VRI_en_afsluitboom_stop_alle_afsluitbomen_rechter_buis");
        outStyle614 = SvgUtils.isCssAttr(outElem614, "fill") ? (SVGStylable)outElem614 : null;
        outElem615 = document.getElementById("VRI_en_afsluitboom_sluiten_alle_afsluitbomen_rechter_buis");
        outStyle615 = SvgUtils.isCssAttr(outElem615, "fill") ? (SVGStylable)outElem615 : null;
        outElem616 = document.getElementById("VRI_en_afsluitboom_openen_alle_afsluitbomen_text_rechter_buis");
        outStyle616 = SvgUtils.isCssAttr(outElem616, "fill") ? (SVGStylable)outElem616 : null;
        outElem617 = document.getElementById("VRI_en_afsluitboom_stop_alle_afsluitbomen_text_rechter_buis");
        outStyle617 = SvgUtils.isCssAttr(outElem617, "fill") ? (SVGStylable)outElem617 : null;
        outElem618 = document.getElementById("VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_rechter_buis");
        outStyle618 = SvgUtils.isCssAttr(outElem618, "fill") ? (SVGStylable)outElem618 : null;
        outElem619 = document.getElementById("VRI_en_afsluitboom_stand_afsluitboom1_rechter_buis");
        outText619 = SvgUtils.getTextNode(outElem619);
        outElem620 = document.getElementById("VRI_en_afsluitboom_stand_afsluitboom2_rechter_buis");
        outText620 = SvgUtils.getTextNode(outElem620);
        outElem621 = document.getElementById("VRI_en_afsluitboom_geblokeerd_stand_afsluitboom1_rechter_buis");
        outText621 = SvgUtils.getTextNode(outElem621);
        outElem622 = document.getElementById("VRI_en_afsluitboom_geblokeerd_stand_afsluitboom2_rechter_buis");
        outText622 = SvgUtils.getTextNode(outElem622);
        outElem623 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_rechter_buis");
        outStyle623 = SvgUtils.isCssAttr(outElem623, "fill") ? (SVGStylable)outElem623 : null;
        outElem624 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_rechter_buis");
        outStyle624 = SvgUtils.isCssAttr(outElem624, "fill") ? (SVGStylable)outElem624 : null;
        outElem625 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_rechter_buis");
        outStyle625 = SvgUtils.isCssAttr(outElem625, "fill") ? (SVGStylable)outElem625 : null;
        outElem626 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_rechter_buis");
        outStyle626 = SvgUtils.isCssAttr(outElem626, "fill") ? (SVGStylable)outElem626 : null;
        outElem627 = document.getElementById("overzicht_systemen_en_detecties_SOS_rechter_buis");
        outStyle627 = SvgUtils.isCssAttr(outElem627, "visibility") ? (SVGStylable)outElem627 : null;
        outElem628 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_SOS_rechter_buis");
        outStyle628 = SvgUtils.isCssAttr(outElem628, "fill") ? (SVGStylable)outElem628 : null;
        outElem629 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_rechter_buis");
        outStyle629 = SvgUtils.isCssAttr(outElem629, "fill") ? (SVGStylable)outElem629 : null;
        outElem630 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_rechter_buis");
        outStyle630 = SvgUtils.isCssAttr(outElem630, "fill") ? (SVGStylable)outElem630 : null;
        outElem631 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_rechter_buis");
        outStyle631 = SvgUtils.isCssAttr(outElem631, "fill") ? (SVGStylable)outElem631 : null;
        outElem632 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_rechter_buis");
        outStyle632 = SvgUtils.isCssAttr(outElem632, "fill") ? (SVGStylable)outElem632 : null;
        outElem633 = document.getElementById("overzicht_systemen_en_detecties_hulppost_rechter_buis");
        outStyle633 = SvgUtils.isCssAttr(outElem633, "visibility") ? (SVGStylable)outElem633 : null;
        outElem634 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_rechter_buis");
        outStyle634 = SvgUtils.isCssAttr(outElem634, "fill") ? (SVGStylable)outElem634 : null;
        outElem635 = document.getElementById("systemen_en_detecties_hulppostA_deur_open_stand_rechter_buis");
        outText635 = SvgUtils.getTextNode(outElem635);
        outElem636 = document.getElementById("systemen_en_detecties_hulppostA_handblusser_in_houder_stand_rechter_buis");
        outText636 = SvgUtils.getTextNode(outElem636);
        outElem637 = document.getElementById("systemen_en_detecties_hulppostA_brandslang_in_houder_stand_rechter_buis");
        outText637 = SvgUtils.getTextNode(outElem637);
        outElem638 = document.getElementById("systemen_en_detecties_hulppostA_noodtelefoon_gebruikt_stand_rechter_buis");
        outText638 = SvgUtils.getTextNode(outElem638);
        outElem639 = document.getElementById("systemen_en_detecties_hulppostC_deur_open_stand_rechter_buis");
        outText639 = SvgUtils.getTextNode(outElem639);
        outElem640 = document.getElementById("systemen_en_detecties_hulppostC_handblusser_in_houder_stand_rechter_buis");
        outText640 = SvgUtils.getTextNode(outElem640);
        outElem641 = document.getElementById("systemen_en_detecties_hulppostC_noodtelefoon_gebruikt_stand_rechter_buis");
        outText641 = SvgUtils.getTextNode(outElem641);
        outElem642 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Deur_rechter_buis");
        outStyle642 = SvgUtils.isCssAttr(outElem642, "fill") ? (SVGStylable)outElem642 : null;
        outElem643 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_rechter_buis");
        outStyle643 = SvgUtils.isCssAttr(outElem643, "fill") ? (SVGStylable)outElem643 : null;
        outElem644 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_rechter_buis");
        outStyle644 = SvgUtils.isCssAttr(outElem644, "fill") ? (SVGStylable)outElem644 : null;
        outElem645 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_rechter_buis");
        outStyle645 = SvgUtils.isCssAttr(outElem645, "fill") ? (SVGStylable)outElem645 : null;
        outElem646 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_C2000_rechter_buis");
        outStyle646 = SvgUtils.isCssAttr(outElem646, "fill") ? (SVGStylable)outElem646 : null;
        outElem647 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_rechter_buis");
        outStyle647 = SvgUtils.isCssAttr(outElem647, "fill") ? (SVGStylable)outElem647 : null;
        outElem648 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_rechter_buis");
        outStyle648 = SvgUtils.isCssAttr(outElem648, "fill") ? (SVGStylable)outElem648 : null;
        outElem649 = document.getElementById("active_tab_systemen_en_detecties_handbediening_rechter_buis");
        outStyle649 = SvgUtils.isCssAttr(outElem649, "visibility") ? (SVGStylable)outElem649 : null;
        outElem650 = document.getElementById("inactive_tab_systemen_en_detecties_handbediening_rechter_buis");
        outStyle650 = SvgUtils.isCssAttr(outElem650, "visibility") ? (SVGStylable)outElem650 : null;
        outElem651 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_buis_rechter_buis");
        outStyle651 = SvgUtils.isCssAttr(outElem651, "visibility") ? (SVGStylable)outElem651 : null;
        outElem652 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_rechter_buis");
        outStyle652 = SvgUtils.isCssAttr(outElem652, "visibility") ? (SVGStylable)outElem652 : null;
        outElem653 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_rechter_buis");
        outStyle653 = SvgUtils.isCssAttr(outElem653, "visibility") ? (SVGStylable)outElem653 : null;
        outElem654 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_rechter_buis");
        outStyle654 = SvgUtils.isCssAttr(outElem654, "visibility") ? (SVGStylable)outElem654 : null;
        outElem655 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_rechter_buis");
        outStyle655 = SvgUtils.isCssAttr(outElem655, "visibility") ? (SVGStylable)outElem655 : null;
        outElem656 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_overig_rechter_buis");
        outStyle656 = SvgUtils.isCssAttr(outElem656, "visibility") ? (SVGStylable)outElem656 : null;
        outElem657 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_ventilatie_rechter_buis");
        outStyle657 = SvgUtils.isCssAttr(outElem657, "visibility") ? (SVGStylable)outElem657 : null;
        outElem658 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_verlichting_rechter_buis");
        outStyle658 = SvgUtils.isCssAttr(outElem658, "visibility") ? (SVGStylable)outElem658 : null;
        outElem659 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_CCTV_rechter_buis");
        outStyle659 = SvgUtils.isCssAttr(outElem659, "visibility") ? (SVGStylable)outElem659 : null;
        outElem660 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_rechter_buis");
        outStyle660 = SvgUtils.isCssAttr(outElem660, "visibility") ? (SVGStylable)outElem660 : null;
        outElem661 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_rechter_buis");
        outStyle661 = SvgUtils.isCssAttr(outElem661, "visibility") ? (SVGStylable)outElem661 : null;
        outElem662 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_rechter_buis");
        outStyle662 = SvgUtils.isCssAttr(outElem662, "visibility") ? (SVGStylable)outElem662 : null;
        outElem663 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_rechter_buis");
        outStyle663 = SvgUtils.isCssAttr(outElem663, "visibility") ? (SVGStylable)outElem663 : null;
        outElem664 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_rechter_buis");
        outStyle664 = SvgUtils.isCssAttr(outElem664, "visibility") ? (SVGStylable)outElem664 : null;
        outElem665 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_rechter_buis");
        outStyle665 = SvgUtils.isCssAttr(outElem665, "visibility") ? (SVGStylable)outElem665 : null;
        outElem666 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Overdruk_rechter_buis");
        outStyle666 = SvgUtils.isCssAttr(outElem666, "visibility") ? (SVGStylable)outElem666 : null;
        outElem667 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Licht_rechter_buis");
        outStyle667 = SvgUtils.isCssAttr(outElem667, "visibility") ? (SVGStylable)outElem667 : null;
        outElem668 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_rechter_buis");
        outStyle668 = SvgUtils.isCssAttr(outElem668, "visibility") ? (SVGStylable)outElem668 : null;
        outElem669 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_rechter_buis");
        outStyle669 = SvgUtils.isCssAttr(outElem669, "visibility") ? (SVGStylable)outElem669 : null;
        outElem670 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_rechter_buis");
        outStyle670 = SvgUtils.isCssAttr(outElem670, "visibility") ? (SVGStylable)outElem670 : null;
        outElem671 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_rechter_buis");
        outStyle671 = SvgUtils.isCssAttr(outElem671, "visibility") ? (SVGStylable)outElem671 : null;
        outElem672 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Intercom_rechter_buis");
        outStyle672 = SvgUtils.isCssAttr(outElem672, "visibility") ? (SVGStylable)outElem672 : null;
        outElem673 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Bediening_rechter_buis");
        outStyle673 = SvgUtils.isCssAttr(outElem673, "visibility") ? (SVGStylable)outElem673 : null;
        outElem674 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_rechter_buis");
        outStyle674 = SvgUtils.isCssAttr(outElem674, "visibility") ? (SVGStylable)outElem674 : null;
        outElem675 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_rechter_buis");
        outStyle675 = SvgUtils.isCssAttr(outElem675, "visibility") ? (SVGStylable)outElem675 : null;
        outElem676 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_rechter_buis");
        outStyle676 = SvgUtils.isCssAttr(outElem676, "visibility") ? (SVGStylable)outElem676 : null;
        outElem677 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_rechter_buis");
        outStyle677 = SvgUtils.isCssAttr(outElem677, "visibility") ? (SVGStylable)outElem677 : null;
        outElem678 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_rechter_buis");
        outStyle678 = SvgUtils.isCssAttr(outElem678, "visibility") ? (SVGStylable)outElem678 : null;
        outElem679 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_rechter_buis");
        outStyle679 = SvgUtils.isCssAttr(outElem679, "visibility") ? (SVGStylable)outElem679 : null;
        outElem680 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Hoogte_rechter_buis");
        outStyle680 = SvgUtils.isCssAttr(outElem680, "visibility") ? (SVGStylable)outElem680 : null;
        outElem681 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_SOS_rechter_buis");
        outStyle681 = SvgUtils.isCssAttr(outElem681, "visibility") ? (SVGStylable)outElem681 : null;
        outElem682 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_rechter_buis");
        outStyle682 = SvgUtils.isCssAttr(outElem682, "visibility") ? (SVGStylable)outElem682 : null;
        outElem683 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Stilstand_rechter_buis");
        outStyle683 = SvgUtils.isCssAttr(outElem683, "visibility") ? (SVGStylable)outElem683 : null;
        outElem684 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_rechter_buis");
        outStyle684 = SvgUtils.isCssAttr(outElem684, "visibility") ? (SVGStylable)outElem684 : null;
        outElem685 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Zicht_rechter_buis");
        outStyle685 = SvgUtils.isCssAttr(outElem685, "visibility") ? (SVGStylable)outElem685 : null;
        outElem686 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Hulppost_rechter_buis");
        outStyle686 = SvgUtils.isCssAttr(outElem686, "visibility") ? (SVGStylable)outElem686 : null;
        outElem687 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Deur_rechter_buis");
        outStyle687 = SvgUtils.isCssAttr(outElem687, "visibility") ? (SVGStylable)outElem687 : null;
        outElem688 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Blusser_rechter_buis");
        outStyle688 = SvgUtils.isCssAttr(outElem688, "visibility") ? (SVGStylable)outElem688 : null;
        outElem689 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Haspel_rechter_buis");
        outStyle689 = SvgUtils.isCssAttr(outElem689, "visibility") ? (SVGStylable)outElem689 : null;
        outElem690 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_rechter_buis");
        outStyle690 = SvgUtils.isCssAttr(outElem690, "visibility") ? (SVGStylable)outElem690 : null;
        outElem691 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_C2000_rechter_buis");
        outStyle691 = SvgUtils.isCssAttr(outElem691, "visibility") ? (SVGStylable)outElem691 : null;
        outElem692 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Telefoon_rechter_buis");
        outStyle692 = SvgUtils.isCssAttr(outElem692, "visibility") ? (SVGStylable)outElem692 : null;
        outElem693 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_rechter_buis");
        outStyle693 = SvgUtils.isCssAttr(outElem693, "visibility") ? (SVGStylable)outElem693 : null;
        outElem694 = document.getElementById("handbedieningalarm_langsventilatie_rechter_buis");
        outStyle694 = SvgUtils.isCssAttr(outElem694, "visibility") ? (SVGStylable)outElem694 : null;
        outElem695 = document.getElementById("handbedieningalarm_verlichting_rechter_buis");
        outStyle695 = SvgUtils.isCssAttr(outElem695, "visibility") ? (SVGStylable)outElem695 : null;
        outElem696 = document.getElementById("handbedieningalarm_verlichting_gesloten_deel_rechter_buis");
        outStyle696 = SvgUtils.isCssAttr(outElem696, "visibility") ? (SVGStylable)outElem696 : null;
        outElem697 = document.getElementById("handbedieningalarm_vluchtdeurindicatie_rechter_buis");
        outStyle697 = SvgUtils.isCssAttr(outElem697, "visibility") ? (SVGStylable)outElem697 : null;
        outElem698 = document.getElementById("handbedieningalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis");
        outStyle698 = SvgUtils.isCssAttr(outElem698, "visibility") ? (SVGStylable)outElem698 : null;
        outElem699 = document.getElementById("handbedieningalarm_vluchtdeurindicatie_contourverlichting_rechter_buis");
        outStyle699 = SvgUtils.isCssAttr(outElem699, "visibility") ? (SVGStylable)outElem699 : null;
        outElem700 = document.getElementById("handbedieningalarm_vluchtdeuren_rechter_buis");
        outStyle700 = SvgUtils.isCssAttr(outElem700, "visibility") ? (SVGStylable)outElem700 : null;
        outElem701 = document.getElementById("handbedieningalarm_vluchtdeur_open_sensor_rechter_buis");
        outStyle701 = SvgUtils.isCssAttr(outElem701, "visibility") ? (SVGStylable)outElem701 : null;
        outElem702 = document.getElementById("handbedieningalarm_dynamische_vluchtroute_rechter_buis");
        outStyle702 = SvgUtils.isCssAttr(outElem702, "visibility") ? (SVGStylable)outElem702 : null;
        outElem703 = document.getElementById("handbedieningalarm_overdruk_veilige_ruimte_rechter_buis");
        outStyle703 = SvgUtils.isCssAttr(outElem703, "visibility") ? (SVGStylable)outElem703 : null;
        outElem704 = document.getElementById("handbedieningalarm_verlichting_veilige_ruimte_rechter_buis");
        outStyle704 = SvgUtils.isCssAttr(outElem704, "visibility") ? (SVGStylable)outElem704 : null;
        outElem705 = document.getElementById("handbedieningalarm_bluswatervoorziening_rechter_buis");
        outStyle705 = SvgUtils.isCssAttr(outElem705, "visibility") ? (SVGStylable)outElem705 : null;
        outElem706 = document.getElementById("handbedieningalarm_sensor_brand_blus_installatie_rechter_buis");
        outStyle706 = SvgUtils.isCssAttr(outElem706, "visibility") ? (SVGStylable)outElem706 : null;
        outElem707 = document.getElementById("handbedieningalarm_blus_pomp_rechter_buis");
        outStyle707 = SvgUtils.isCssAttr(outElem707, "visibility") ? (SVGStylable)outElem707 : null;
        outElem708 = document.getElementById("handbedieningalarm_vloeistofafvoer_rechter_buis");
        outStyle708 = SvgUtils.isCssAttr(outElem708, "visibility") ? (SVGStylable)outElem708 : null;
        outElem709 = document.getElementById("handbedieningalarm_midden_pomp_kelder_rechter_buis");
        outStyle709 = SvgUtils.isCssAttr(outElem709, "visibility") ? (SVGStylable)outElem709 : null;
        outElem710 = document.getElementById("handbedieningalarm_hoofd_pomp_kelder_1_rechter_buis");
        outStyle710 = SvgUtils.isCssAttr(outElem710, "visibility") ? (SVGStylable)outElem710 : null;
        outElem711 = document.getElementById("handbedieningalarm_hoofd_pomp_kelder_2_rechter_buis");
        outStyle711 = SvgUtils.isCssAttr(outElem711, "visibility") ? (SVGStylable)outElem711 : null;
        outElem712 = document.getElementById("VRI_en_afsluitboom_handbedieningalarm_rechter_buis");
        outStyle712 = SvgUtils.isCssAttr(outElem712, "visibility") ? (SVGStylable)outElem712 : null;
        outElem713 = document.getElementById("VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_rechter_buis");
        outStyle713 = SvgUtils.isCssAttr(outElem713, "visibility") ? (SVGStylable)outElem713 : null;
        outElem714 = document.getElementById("VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_rechter_buis");
        outStyle714 = SvgUtils.isCssAttr(outElem714, "visibility") ? (SVGStylable)outElem714 : null;
        outElem715 = document.getElementById("handbedieningalarm_sos_rechter_buis");
        outStyle715 = SvgUtils.isCssAttr(outElem715, "visibility") ? (SVGStylable)outElem715 : null;
        outElem716 = document.getElementById("handbedieningalarm_sos_sectie1_rechter_buis");
        outStyle716 = SvgUtils.isCssAttr(outElem716, "visibility") ? (SVGStylable)outElem716 : null;
        outElem717 = document.getElementById("handmatigalarm_hulpposten_rechter_buis");
        outStyle717 = SvgUtils.isCssAttr(outElem717, "visibility") ? (SVGStylable)outElem717 : null;
        outElem718 = document.getElementById("handmatigalarm_hulppostA_rechter_buis");
        outStyle718 = SvgUtils.isCssAttr(outElem718, "visibility") ? (SVGStylable)outElem718 : null;
        outElem719 = document.getElementById("handmatigalarm_hulppostC_rechter_buis");
        outStyle719 = SvgUtils.isCssAttr(outElem719, "visibility") ? (SVGStylable)outElem719 : null;
        outElem720 = document.getElementById("active_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis");
        outStyle720 = SvgUtils.isCssAttr(outElem720, "visibility") ? (SVGStylable)outElem720 : null;
        outElem721 = document.getElementById("inactive_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis");
        outStyle721 = SvgUtils.isCssAttr(outElem721, "visibility") ? (SVGStylable)outElem721 : null;
        outElem722 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_rechter_buis");
        outStyle722 = SvgUtils.isCssAttr(outElem722, "visibility") ? (SVGStylable)outElem722 : null;
        outElem723 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_rechter_buis");
        outStyle723 = SvgUtils.isCssAttr(outElem723, "visibility") ? (SVGStylable)outElem723 : null;
        outElem724 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_rechter_buis");
        outStyle724 = SvgUtils.isCssAttr(outElem724, "visibility") ? (SVGStylable)outElem724 : null;
        outElem725 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_rechter_buis");
        outStyle725 = SvgUtils.isCssAttr(outElem725, "visibility") ? (SVGStylable)outElem725 : null;
        outElem726 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_rechter_buis");
        outStyle726 = SvgUtils.isCssAttr(outElem726, "visibility") ? (SVGStylable)outElem726 : null;
        outElem727 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_rechter_buis");
        outStyle727 = SvgUtils.isCssAttr(outElem727, "visibility") ? (SVGStylable)outElem727 : null;
        outElem728 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_rechter_buis");
        outStyle728 = SvgUtils.isCssAttr(outElem728, "visibility") ? (SVGStylable)outElem728 : null;
        outElem729 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_rechter_buis");
        outStyle729 = SvgUtils.isCssAttr(outElem729, "visibility") ? (SVGStylable)outElem729 : null;
        outElem730 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_rechter_buis");
        outStyle730 = SvgUtils.isCssAttr(outElem730, "visibility") ? (SVGStylable)outElem730 : null;
        outElem731 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_rechter_buis");
        outStyle731 = SvgUtils.isCssAttr(outElem731, "visibility") ? (SVGStylable)outElem731 : null;
        outElem732 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_rechter_buis");
        outStyle732 = SvgUtils.isCssAttr(outElem732, "visibility") ? (SVGStylable)outElem732 : null;
        outElem733 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_rechter_buis");
        outStyle733 = SvgUtils.isCssAttr(outElem733, "visibility") ? (SVGStylable)outElem733 : null;
        outElem734 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_rechter_buis");
        outStyle734 = SvgUtils.isCssAttr(outElem734, "visibility") ? (SVGStylable)outElem734 : null;
        outElem735 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_rechter_buis");
        outStyle735 = SvgUtils.isCssAttr(outElem735, "visibility") ? (SVGStylable)outElem735 : null;
        outElem736 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_rechter_buis");
        outStyle736 = SvgUtils.isCssAttr(outElem736, "visibility") ? (SVGStylable)outElem736 : null;
        outElem737 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_rechter_buis");
        outStyle737 = SvgUtils.isCssAttr(outElem737, "visibility") ? (SVGStylable)outElem737 : null;
        outElem738 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_rechter_buis");
        outStyle738 = SvgUtils.isCssAttr(outElem738, "visibility") ? (SVGStylable)outElem738 : null;
        outElem739 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_rechter_buis");
        outStyle739 = SvgUtils.isCssAttr(outElem739, "visibility") ? (SVGStylable)outElem739 : null;
        outElem740 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_rechter_buis");
        outStyle740 = SvgUtils.isCssAttr(outElem740, "visibility") ? (SVGStylable)outElem740 : null;
        outElem741 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_rechter_buis");
        outStyle741 = SvgUtils.isCssAttr(outElem741, "visibility") ? (SVGStylable)outElem741 : null;
        outElem742 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_rechter_buis");
        outStyle742 = SvgUtils.isCssAttr(outElem742, "visibility") ? (SVGStylable)outElem742 : null;
        outElem743 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_rechter_buis");
        outStyle743 = SvgUtils.isCssAttr(outElem743, "visibility") ? (SVGStylable)outElem743 : null;
        outElem744 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_rechter_buis");
        outStyle744 = SvgUtils.isCssAttr(outElem744, "visibility") ? (SVGStylable)outElem744 : null;
        outElem745 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_rechter_buis");
        outStyle745 = SvgUtils.isCssAttr(outElem745, "visibility") ? (SVGStylable)outElem745 : null;
        outElem746 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_rechter_buis");
        outStyle746 = SvgUtils.isCssAttr(outElem746, "visibility") ? (SVGStylable)outElem746 : null;
        outElem747 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_rechter_buis");
        outStyle747 = SvgUtils.isCssAttr(outElem747, "visibility") ? (SVGStylable)outElem747 : null;
        outElem748 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_rechter_buis");
        outStyle748 = SvgUtils.isCssAttr(outElem748, "visibility") ? (SVGStylable)outElem748 : null;
        outElem749 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_rechter_buis");
        outStyle749 = SvgUtils.isCssAttr(outElem749, "visibility") ? (SVGStylable)outElem749 : null;
        outElem750 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_rechter_buis");
        outStyle750 = SvgUtils.isCssAttr(outElem750, "visibility") ? (SVGStylable)outElem750 : null;
        outElem751 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_rechter_buis");
        outStyle751 = SvgUtils.isCssAttr(outElem751, "visibility") ? (SVGStylable)outElem751 : null;
        outElem752 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_rechter_buis");
        outStyle752 = SvgUtils.isCssAttr(outElem752, "visibility") ? (SVGStylable)outElem752 : null;
        outElem753 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_rechter_buis");
        outStyle753 = SvgUtils.isCssAttr(outElem753, "visibility") ? (SVGStylable)outElem753 : null;
        outElem754 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_rechter_buis");
        outStyle754 = SvgUtils.isCssAttr(outElem754, "visibility") ? (SVGStylable)outElem754 : null;
        outElem755 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_rechter_buis");
        outStyle755 = SvgUtils.isCssAttr(outElem755, "visibility") ? (SVGStylable)outElem755 : null;
        outElem756 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_rechter_buis");
        outStyle756 = SvgUtils.isCssAttr(outElem756, "visibility") ? (SVGStylable)outElem756 : null;
        outElem757 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_rechter_buis");
        outStyle757 = SvgUtils.isCssAttr(outElem757, "visibility") ? (SVGStylable)outElem757 : null;
        outElem758 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_rechter_buis");
        outStyle758 = SvgUtils.isCssAttr(outElem758, "visibility") ? (SVGStylable)outElem758 : null;
        outElem759 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_rechter_buis");
        outStyle759 = SvgUtils.isCssAttr(outElem759, "visibility") ? (SVGStylable)outElem759 : null;
        outElem760 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_rechter_buis");
        outStyle760 = SvgUtils.isCssAttr(outElem760, "visibility") ? (SVGStylable)outElem760 : null;
        outElem761 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_rechter_buis");
        outStyle761 = SvgUtils.isCssAttr(outElem761, "visibility") ? (SVGStylable)outElem761 : null;
        outElem762 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_rechter_buis");
        outStyle762 = SvgUtils.isCssAttr(outElem762, "visibility") ? (SVGStylable)outElem762 : null;
        outElem763 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_rechter_buis");
        outStyle763 = SvgUtils.isCssAttr(outElem763, "visibility") ? (SVGStylable)outElem763 : null;
        outElem764 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_rechter_buis");
        outStyle764 = SvgUtils.isCssAttr(outElem764, "visibility") ? (SVGStylable)outElem764 : null;
        outElem765 = document.getElementById("verkeerskundigalarm_langsventilatie_rechter_buis");
        outStyle765 = SvgUtils.isCssAttr(outElem765, "visibility") ? (SVGStylable)outElem765 : null;
        outElem766 = document.getElementById("verkeerskundigalarm_verlichting_rechter_buis");
        outStyle766 = SvgUtils.isCssAttr(outElem766, "visibility") ? (SVGStylable)outElem766 : null;
        outElem767 = document.getElementById("verkeerskundigalarm_verlichting_gesloten_deel_rechter_buis");
        outStyle767 = SvgUtils.isCssAttr(outElem767, "visibility") ? (SVGStylable)outElem767 : null;
        outElem768 = document.getElementById("verkeerskundigalarm_vluchtdeurindicatie_rechter_buis");
        outStyle768 = SvgUtils.isCssAttr(outElem768, "visibility") ? (SVGStylable)outElem768 : null;
        outElem769 = document.getElementById("verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis");
        outStyle769 = SvgUtils.isCssAttr(outElem769, "visibility") ? (SVGStylable)outElem769 : null;
        outElem770 = document.getElementById("verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_rechter_buis");
        outStyle770 = SvgUtils.isCssAttr(outElem770, "visibility") ? (SVGStylable)outElem770 : null;
        outElem771 = document.getElementById("verkeerskundigalarm_vluchtdeuren_rechter_buis");
        outStyle771 = SvgUtils.isCssAttr(outElem771, "visibility") ? (SVGStylable)outElem771 : null;
        outElem772 = document.getElementById("verkeerskundigalarm_vluchtdeur_open_sensor_rechter_buis");
        outStyle772 = SvgUtils.isCssAttr(outElem772, "visibility") ? (SVGStylable)outElem772 : null;
        outElem773 = document.getElementById("verkeerskundigalarm_dynamische_vluchtroute_rechter_buis");
        outStyle773 = SvgUtils.isCssAttr(outElem773, "visibility") ? (SVGStylable)outElem773 : null;
        outElem774 = document.getElementById("verkeerskundigalarm_overdruk_veilige_ruimte_rechter_buis");
        outStyle774 = SvgUtils.isCssAttr(outElem774, "visibility") ? (SVGStylable)outElem774 : null;
        outElem775 = document.getElementById("verkeerskundigalarm_verlichting_veilige_ruimte_rechter_buis");
        outStyle775 = SvgUtils.isCssAttr(outElem775, "visibility") ? (SVGStylable)outElem775 : null;
        outElem776 = document.getElementById("verkeerskundigalarm_bluswatervoorziening_rechter_buis");
        outStyle776 = SvgUtils.isCssAttr(outElem776, "visibility") ? (SVGStylable)outElem776 : null;
        outElem777 = document.getElementById("verkeerskundigalarm_sensor_brand_blus_installatie_rechter_buis");
        outStyle777 = SvgUtils.isCssAttr(outElem777, "visibility") ? (SVGStylable)outElem777 : null;
        outElem778 = document.getElementById("verkeerskundigalarm_vloeistofafvoer_rechter_buis");
        outStyle778 = SvgUtils.isCssAttr(outElem778, "visibility") ? (SVGStylable)outElem778 : null;
        outElem779 = document.getElementById("verkeerskundigalarm_blus_pomp_rechter_buis");
        outStyle779 = SvgUtils.isCssAttr(outElem779, "visibility") ? (SVGStylable)outElem779 : null;
        outElem780 = document.getElementById("verkeerskundigalarm_midden_pomp_kelder_rechter_buis");
        outStyle780 = SvgUtils.isCssAttr(outElem780, "visibility") ? (SVGStylable)outElem780 : null;
        outElem781 = document.getElementById("verkeerskundigalarm_hoofd_pomp_kelder_1_rechter_buis");
        outStyle781 = SvgUtils.isCssAttr(outElem781, "visibility") ? (SVGStylable)outElem781 : null;
        outElem782 = document.getElementById("verkeerskundigalarm_hoofd_pomp_kelder_2_rechter_buis");
        outStyle782 = SvgUtils.isCssAttr(outElem782, "visibility") ? (SVGStylable)outElem782 : null;
        outElem783 = document.getElementById("VRI_en_afsluitboom_verkeerskundigalarm_rechter_buis");
        outStyle783 = SvgUtils.isCssAttr(outElem783, "visibility") ? (SVGStylable)outElem783 : null;
        outElem784 = document.getElementById("VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_rechter_buis");
        outStyle784 = SvgUtils.isCssAttr(outElem784, "visibility") ? (SVGStylable)outElem784 : null;
        outElem785 = document.getElementById("VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_rechter_buis");
        outStyle785 = SvgUtils.isCssAttr(outElem785, "visibility") ? (SVGStylable)outElem785 : null;
        outElem786 = document.getElementById("verkeerskundigalarm_sos_rechter_buis");
        outStyle786 = SvgUtils.isCssAttr(outElem786, "visibility") ? (SVGStylable)outElem786 : null;
        outElem787 = document.getElementById("verkeerskundigalarm_sos_sectie1_rechter_buis");
        outStyle787 = SvgUtils.isCssAttr(outElem787, "visibility") ? (SVGStylable)outElem787 : null;
        outElem788 = document.getElementById("verkeerskundigalarm_hulpposten_rechter_buis");
        outStyle788 = SvgUtils.isCssAttr(outElem788, "visibility") ? (SVGStylable)outElem788 : null;
        outElem789 = document.getElementById("verkeerskundigalarm_hulppostA_rechter_buis");
        outStyle789 = SvgUtils.isCssAttr(outElem789, "visibility") ? (SVGStylable)outElem789 : null;
        outElem790 = document.getElementById("verkeerskundigalarm_hulppostC_rechter_buis");
        outStyle790 = SvgUtils.isCssAttr(outElem790, "visibility") ? (SVGStylable)outElem790 : null;
        outElem791 = document.getElementById("active_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis");
        outStyle791 = SvgUtils.isCssAttr(outElem791, "visibility") ? (SVGStylable)outElem791 : null;
        outElem792 = document.getElementById("inactive_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis");
        outStyle792 = SvgUtils.isCssAttr(outElem792, "visibility") ? (SVGStylable)outElem792 : null;
        outElem793 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_rechter_buis");
        outStyle793 = SvgUtils.isCssAttr(outElem793, "visibility") ? (SVGStylable)outElem793 : null;
        outElem794 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_rechter_buis");
        outStyle794 = SvgUtils.isCssAttr(outElem794, "visibility") ? (SVGStylable)outElem794 : null;
        outElem795 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_rechter_buis");
        outStyle795 = SvgUtils.isCssAttr(outElem795, "visibility") ? (SVGStylable)outElem795 : null;
        outElem796 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_rechter_buis");
        outStyle796 = SvgUtils.isCssAttr(outElem796, "visibility") ? (SVGStylable)outElem796 : null;
        outElem797 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_rechter_buis");
        outStyle797 = SvgUtils.isCssAttr(outElem797, "visibility") ? (SVGStylable)outElem797 : null;
        outElem798 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_rechter_buis");
        outStyle798 = SvgUtils.isCssAttr(outElem798, "visibility") ? (SVGStylable)outElem798 : null;
        outElem799 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_rechter_buis");
        outStyle799 = SvgUtils.isCssAttr(outElem799, "visibility") ? (SVGStylable)outElem799 : null;
        outElem800 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_rechter_buis");
        outStyle800 = SvgUtils.isCssAttr(outElem800, "visibility") ? (SVGStylable)outElem800 : null;
        outElem801 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_rechter_buis");
        outStyle801 = SvgUtils.isCssAttr(outElem801, "visibility") ? (SVGStylable)outElem801 : null;
        outElem802 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_rechter_buis");
        outStyle802 = SvgUtils.isCssAttr(outElem802, "visibility") ? (SVGStylable)outElem802 : null;
        outElem803 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_rechter_buis");
        outStyle803 = SvgUtils.isCssAttr(outElem803, "visibility") ? (SVGStylable)outElem803 : null;
        outElem804 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_rechter_buis");
        outStyle804 = SvgUtils.isCssAttr(outElem804, "visibility") ? (SVGStylable)outElem804 : null;
        outElem805 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_rechter_buis");
        outStyle805 = SvgUtils.isCssAttr(outElem805, "visibility") ? (SVGStylable)outElem805 : null;
        outElem806 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_rechter_buis");
        outStyle806 = SvgUtils.isCssAttr(outElem806, "visibility") ? (SVGStylable)outElem806 : null;
        outElem807 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_rechter_buis");
        outStyle807 = SvgUtils.isCssAttr(outElem807, "visibility") ? (SVGStylable)outElem807 : null;
        outElem808 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_rechter_buis");
        outStyle808 = SvgUtils.isCssAttr(outElem808, "visibility") ? (SVGStylable)outElem808 : null;
        outElem809 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_rechter_buis");
        outStyle809 = SvgUtils.isCssAttr(outElem809, "visibility") ? (SVGStylable)outElem809 : null;
        outElem810 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_rechter_buis");
        outStyle810 = SvgUtils.isCssAttr(outElem810, "visibility") ? (SVGStylable)outElem810 : null;
        outElem811 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_rechter_buis");
        outStyle811 = SvgUtils.isCssAttr(outElem811, "visibility") ? (SVGStylable)outElem811 : null;
        outElem812 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_rechter_buis");
        outStyle812 = SvgUtils.isCssAttr(outElem812, "visibility") ? (SVGStylable)outElem812 : null;
        outElem813 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_rechter_buis");
        outStyle813 = SvgUtils.isCssAttr(outElem813, "visibility") ? (SVGStylable)outElem813 : null;
        outElem814 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_rechter_buis");
        outStyle814 = SvgUtils.isCssAttr(outElem814, "visibility") ? (SVGStylable)outElem814 : null;
        outElem815 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_rechter_buis");
        outStyle815 = SvgUtils.isCssAttr(outElem815, "visibility") ? (SVGStylable)outElem815 : null;
        outElem816 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_rechter_buis");
        outStyle816 = SvgUtils.isCssAttr(outElem816, "visibility") ? (SVGStylable)outElem816 : null;
        outElem817 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_rechter_buis");
        outStyle817 = SvgUtils.isCssAttr(outElem817, "visibility") ? (SVGStylable)outElem817 : null;
        outElem818 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_rechter_buis");
        outStyle818 = SvgUtils.isCssAttr(outElem818, "visibility") ? (SVGStylable)outElem818 : null;
        outElem819 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_rechter_buis");
        outStyle819 = SvgUtils.isCssAttr(outElem819, "visibility") ? (SVGStylable)outElem819 : null;
        outElem820 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_rechter_buis");
        outStyle820 = SvgUtils.isCssAttr(outElem820, "visibility") ? (SVGStylable)outElem820 : null;
        outElem821 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_rechter_buis");
        outStyle821 = SvgUtils.isCssAttr(outElem821, "visibility") ? (SVGStylable)outElem821 : null;
        outElem822 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_rechter_buis");
        outStyle822 = SvgUtils.isCssAttr(outElem822, "visibility") ? (SVGStylable)outElem822 : null;
        outElem823 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_rechter_buis");
        outStyle823 = SvgUtils.isCssAttr(outElem823, "visibility") ? (SVGStylable)outElem823 : null;
        outElem824 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_rechter_buis");
        outStyle824 = SvgUtils.isCssAttr(outElem824, "visibility") ? (SVGStylable)outElem824 : null;
        outElem825 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_rechter_buis");
        outStyle825 = SvgUtils.isCssAttr(outElem825, "visibility") ? (SVGStylable)outElem825 : null;
        outElem826 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_rechter_buis");
        outStyle826 = SvgUtils.isCssAttr(outElem826, "visibility") ? (SVGStylable)outElem826 : null;
        outElem827 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_rechter_buis");
        outStyle827 = SvgUtils.isCssAttr(outElem827, "visibility") ? (SVGStylable)outElem827 : null;
        outElem828 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_rechter_buis");
        outStyle828 = SvgUtils.isCssAttr(outElem828, "visibility") ? (SVGStylable)outElem828 : null;
        outElem829 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_rechter_buis");
        outStyle829 = SvgUtils.isCssAttr(outElem829, "visibility") ? (SVGStylable)outElem829 : null;
        outElem830 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_rechter_buis");
        outStyle830 = SvgUtils.isCssAttr(outElem830, "visibility") ? (SVGStylable)outElem830 : null;
        outElem831 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_rechter_buis");
        outStyle831 = SvgUtils.isCssAttr(outElem831, "visibility") ? (SVGStylable)outElem831 : null;
        outElem832 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_rechter_buis");
        outStyle832 = SvgUtils.isCssAttr(outElem832, "visibility") ? (SVGStylable)outElem832 : null;
        outElem833 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_rechter_buis");
        outStyle833 = SvgUtils.isCssAttr(outElem833, "visibility") ? (SVGStylable)outElem833 : null;
        outElem834 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_rechter_buis");
        outStyle834 = SvgUtils.isCssAttr(outElem834, "visibility") ? (SVGStylable)outElem834 : null;
        outElem835 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_rechter_buis");
        outStyle835 = SvgUtils.isCssAttr(outElem835, "visibility") ? (SVGStylable)outElem835 : null;
        outElem836 = document.getElementById("deelsysteemalarm_langsventilatie_rechter_buis");
        outStyle836 = SvgUtils.isCssAttr(outElem836, "visibility") ? (SVGStylable)outElem836 : null;
        outElem837 = document.getElementById("deelsysteemalarm_verlichting_rechter_buis");
        outStyle837 = SvgUtils.isCssAttr(outElem837, "visibility") ? (SVGStylable)outElem837 : null;
        outElem838 = document.getElementById("deelsysteemalarm_verlichting_gesloten_deel_rechter_buis");
        outStyle838 = SvgUtils.isCssAttr(outElem838, "visibility") ? (SVGStylable)outElem838 : null;
        outElem839 = document.getElementById("deelsysteemalarm_vluchtdeurindicatie_rechter_buis");
        outStyle839 = SvgUtils.isCssAttr(outElem839, "visibility") ? (SVGStylable)outElem839 : null;
        outElem840 = document.getElementById("deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis");
        outStyle840 = SvgUtils.isCssAttr(outElem840, "visibility") ? (SVGStylable)outElem840 : null;
        outElem841 = document.getElementById("deelsysteemalarm_vluchtdeurindicatie_contourverlichting_rechter_buis");
        outStyle841 = SvgUtils.isCssAttr(outElem841, "visibility") ? (SVGStylable)outElem841 : null;
        outElem842 = document.getElementById("deelsysteemalarm_vluchtdeuren_rechter_buis");
        outStyle842 = SvgUtils.isCssAttr(outElem842, "visibility") ? (SVGStylable)outElem842 : null;
        outElem843 = document.getElementById("deelsysteemalarm_vluchtdeur_open_sensor_rechter_buis");
        outStyle843 = SvgUtils.isCssAttr(outElem843, "visibility") ? (SVGStylable)outElem843 : null;
        outElem844 = document.getElementById("deelsysteemalarm_dynamische_vluchtroute_rechter_buis");
        outStyle844 = SvgUtils.isCssAttr(outElem844, "visibility") ? (SVGStylable)outElem844 : null;
        outElem845 = document.getElementById("deelsysteemalarm_overdruk_veilige_ruimte_rechter_buis");
        outStyle845 = SvgUtils.isCssAttr(outElem845, "visibility") ? (SVGStylable)outElem845 : null;
        outElem846 = document.getElementById("deelsysteemalarm_verlichting_veilige_ruimte_rechter_buis");
        outStyle846 = SvgUtils.isCssAttr(outElem846, "visibility") ? (SVGStylable)outElem846 : null;
        outElem847 = document.getElementById("deelsysteemalarm_bluswatervoorziening_rechter_buis");
        outStyle847 = SvgUtils.isCssAttr(outElem847, "visibility") ? (SVGStylable)outElem847 : null;
        outElem848 = document.getElementById("deelsysteemalarm_sensor_brand_blus_installatie_rechter_buis");
        outStyle848 = SvgUtils.isCssAttr(outElem848, "visibility") ? (SVGStylable)outElem848 : null;
        outElem849 = document.getElementById("deelsysteemalarm_blus_pomp_rechter_buis");
        outStyle849 = SvgUtils.isCssAttr(outElem849, "visibility") ? (SVGStylable)outElem849 : null;
        outElem850 = document.getElementById("deelsysteemalarm_vloeistofafvoer_rechter_buis");
        outStyle850 = SvgUtils.isCssAttr(outElem850, "visibility") ? (SVGStylable)outElem850 : null;
        outElem851 = document.getElementById("deelsysteemalarm_midden_pomp_kelder_rechter_buis");
        outStyle851 = SvgUtils.isCssAttr(outElem851, "visibility") ? (SVGStylable)outElem851 : null;
        outElem852 = document.getElementById("deelsysteemalarm_hoofd_pomp_kelder_1_rechter_buis");
        outStyle852 = SvgUtils.isCssAttr(outElem852, "visibility") ? (SVGStylable)outElem852 : null;
        outElem853 = document.getElementById("deelsysteemalarm_hoofd_pomp_kelder_2_rechter_buis");
        outStyle853 = SvgUtils.isCssAttr(outElem853, "visibility") ? (SVGStylable)outElem853 : null;
        outElem854 = document.getElementById("VRI_en_afsluitboom_deelsysteemalarm_rechter_buis");
        outStyle854 = SvgUtils.isCssAttr(outElem854, "visibility") ? (SVGStylable)outElem854 : null;
        outElem855 = document.getElementById("VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_rechter_buis");
        outStyle855 = SvgUtils.isCssAttr(outElem855, "visibility") ? (SVGStylable)outElem855 : null;
        outElem856 = document.getElementById("VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_rechter_buis");
        outStyle856 = SvgUtils.isCssAttr(outElem856, "visibility") ? (SVGStylable)outElem856 : null;
        outElem857 = document.getElementById("deelsysteemalarm_sos_rechter_buis");
        outStyle857 = SvgUtils.isCssAttr(outElem857, "visibility") ? (SVGStylable)outElem857 : null;
        outElem858 = document.getElementById("deelsysteemalarm_sos_sectie1_rechter_buis");
        outStyle858 = SvgUtils.isCssAttr(outElem858, "visibility") ? (SVGStylable)outElem858 : null;
        outElem859 = document.getElementById("deelsysteemalarm_hulpposten_rechter_buis");
        outStyle859 = SvgUtils.isCssAttr(outElem859, "visibility") ? (SVGStylable)outElem859 : null;
        outElem860 = document.getElementById("deelsysteemalarm_hulppostA_rechter_buis");
        outStyle860 = SvgUtils.isCssAttr(outElem860, "visibility") ? (SVGStylable)outElem860 : null;
        outElem861 = document.getElementById("deelsysteemalarm_hulppostC_rechter_buis");
        outStyle861 = SvgUtils.isCssAttr(outElem861, "visibility") ? (SVGStylable)outElem861 : null;
        outElem862 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_linker_buis");
        outStyle862 = SvgUtils.isCssAttr(outElem862, "visibility") ? (SVGStylable)outElem862 : null;
        outElem863 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_linker_buis");
        outStyle863 = SvgUtils.isCssAttr(outElem863, "fill") ? (SVGStylable)outElem863 : null;
        outElem864 = document.getElementById("Langsventilatie_auto_knop_linker_buis");
        outStyle864 = SvgUtils.isCssAttr(outElem864, "visibility") ? (SVGStylable)outElem864 : null;
        outElem865 = document.getElementById("Langsventilatie_handmatig_knop_linker_buis");
        outStyle865 = SvgUtils.isCssAttr(outElem865, "visibility") ? (SVGStylable)outElem865 : null;
        outElem866 = document.getElementById("langsventilatie_handmatig_linker_buis");
        outStyle866 = SvgUtils.isCssAttr(outElem866, "visibility") ? (SVGStylable)outElem866 : null;
        outElem867 = document.getElementById("Langsventilatie_auto_linker_buis");
        outStyle867 = SvgUtils.isCssAttr(outElem867, "visibility") ? (SVGStylable)outElem867 : null;
        outElem868 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_linker_buis");
        outStyle868 = SvgUtils.isCssAttr(outElem868, "visibility") ? (SVGStylable)outElem868 : null;
        outElem869 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis");
        outStyle869 = SvgUtils.isCssAttr(outElem869, "visibility") ? (SVGStylable)outElem869 : null;
        outElem870 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_linker_buis");
        outStyle870 = SvgUtils.isCssAttr(outElem870, "visibility") ? (SVGStylable)outElem870 : null;
        outElem871 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_linker_buis");
        outStyle871 = SvgUtils.isCssAttr(outElem871, "visibility") ? (SVGStylable)outElem871 : null;
        outElem872 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_linker_buis");
        outStyle872 = SvgUtils.isCssAttr(outElem872, "visibility") ? (SVGStylable)outElem872 : null;
        outElem873 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_linker_buis");
        outStyle873 = SvgUtils.isCssAttr(outElem873, "visibility") ? (SVGStylable)outElem873 : null;
        outElem874 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_linker_buis");
        outStyle874 = SvgUtils.isCssAttr(outElem874, "visibility") ? (SVGStylable)outElem874 : null;
        outElem875 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_linker_buis");
        outStyle875 = SvgUtils.isCssAttr(outElem875, "visibility") ? (SVGStylable)outElem875 : null;
        outElem876 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_linker_buis");
        outStyle876 = SvgUtils.isCssAttr(outElem876, "visibility") ? (SVGStylable)outElem876 : null;
        outElem877 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_linker_buis");
        outStyle877 = SvgUtils.isCssAttr(outElem877, "visibility") ? (SVGStylable)outElem877 : null;
        outElem878 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_linker_buis");
        outStyle878 = SvgUtils.isCssAttr(outElem878, "visibility") ? (SVGStylable)outElem878 : null;
        outElem879 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis");
        outStyle879 = SvgUtils.isCssAttr(outElem879, "visibility") ? (SVGStylable)outElem879 : null;
        outElem880 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_linker_buis");
        outStyle880 = SvgUtils.isCssAttr(outElem880, "visibility") ? (SVGStylable)outElem880 : null;
        outElem881 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_linker_buis");
        outStyle881 = SvgUtils.isCssAttr(outElem881, "visibility") ? (SVGStylable)outElem881 : null;
        outElem882 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_linker_buis");
        outStyle882 = SvgUtils.isCssAttr(outElem882, "visibility") ? (SVGStylable)outElem882 : null;
        outElem883 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_percentage_stand_linker_buis");
        outText883 = SvgUtils.getTextNode(outElem883);
        outElem884 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_linker_buis");
        outStyle884 = SvgUtils.isCssAttr(outElem884, "visibility") ? (SVGStylable)outElem884 : null;
        outElem885 = document.getElementById("overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_linker_buis");
        outStyle885 = SvgUtils.isCssAttr(outElem885, "visibility") ? (SVGStylable)outElem885 : null;
        outElem886 = document.getElementById("overzicht_systemen_en_detecties_ventilatie_stand_richting_linker_buis");
        outText886 = SvgUtils.getTextNode(outElem886);
        outElem887 = document.getElementById("overzicht_systemen_en_detecties_verlichting_linker_buis");
        outStyle887 = SvgUtils.isCssAttr(outElem887, "visibility") ? (SVGStylable)outElem887 : null;
        outElem888 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_linker_buis");
        outStyle888 = SvgUtils.isCssAttr(outElem888, "fill") ? (SVGStylable)outElem888 : null;
        outElem889 = document.getElementById("verlichting_auto_knop_linker_buis");
        outStyle889 = SvgUtils.isCssAttr(outElem889, "visibility") ? (SVGStylable)outElem889 : null;
        outElem890 = document.getElementById("verlichting_handmatig_knop_linker_buis");
        outStyle890 = SvgUtils.isCssAttr(outElem890, "visibility") ? (SVGStylable)outElem890 : null;
        outElem891 = document.getElementById("verlichting_handmatig_linker_buis");
        outStyle891 = SvgUtils.isCssAttr(outElem891, "visibility") ? (SVGStylable)outElem891 : null;
        outElem892 = document.getElementById("verlichting_auto_linker_buis");
        outStyle892 = SvgUtils.isCssAttr(outElem892, "visibility") ? (SVGStylable)outElem892 : null;
        outElem893 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_linker_buis");
        outStyle893 = SvgUtils.isCssAttr(outElem893, "visibility") ? (SVGStylable)outElem893 : null;
        outElem894 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis");
        outStyle894 = SvgUtils.isCssAttr(outElem894, "visibility") ? (SVGStylable)outElem894 : null;
        outElem895 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_linker_buis");
        outStyle895 = SvgUtils.isCssAttr(outElem895, "visibility") ? (SVGStylable)outElem895 : null;
        outElem896 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_linker_buis");
        outStyle896 = SvgUtils.isCssAttr(outElem896, "visibility") ? (SVGStylable)outElem896 : null;
        outElem897 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_linker_buis");
        outStyle897 = SvgUtils.isCssAttr(outElem897, "visibility") ? (SVGStylable)outElem897 : null;
        outElem898 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_linker_buis");
        outStyle898 = SvgUtils.isCssAttr(outElem898, "visibility") ? (SVGStylable)outElem898 : null;
        outElem899 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_linker_buis");
        outStyle899 = SvgUtils.isCssAttr(outElem899, "visibility") ? (SVGStylable)outElem899 : null;
        outElem900 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_linker_buis");
        outStyle900 = SvgUtils.isCssAttr(outElem900, "visibility") ? (SVGStylable)outElem900 : null;
        outElem901 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_linker_buis");
        outStyle901 = SvgUtils.isCssAttr(outElem901, "visibility") ? (SVGStylable)outElem901 : null;
        outElem902 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_linker_buis");
        outStyle902 = SvgUtils.isCssAttr(outElem902, "visibility") ? (SVGStylable)outElem902 : null;
        outElem903 = document.getElementById("overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_linker_buis");
        outStyle903 = SvgUtils.isCssAttr(outElem903, "visibility") ? (SVGStylable)outElem903 : null;
        outElem904 = document.getElementById("overzicht_systemen_en_detecties_verlichting_percentage_stand_linker_buis");
        outText904 = SvgUtils.getTextNode(outElem904);
        outElem905 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_linker_buis");
        outStyle905 = SvgUtils.isCssAttr(outElem905, "fill") ? (SVGStylable)outElem905 : null;
        outElem906 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_linker_buis");
        outStyle906 = SvgUtils.isCssAttr(outElem906, "fill") ? (SVGStylable)outElem906 : null;
        outElem907 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_linker_buis");
        outStyle907 = SvgUtils.isCssAttr(outElem907, "visibility") ? (SVGStylable)outElem907 : null;
        outElem908 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_linker_buis");
        outStyle908 = SvgUtils.isCssAttr(outElem908, "fill") ? (SVGStylable)outElem908 : null;
        outElem909 = document.getElementById("geluidsbakens_auto_knop_linker_buis");
        outStyle909 = SvgUtils.isCssAttr(outElem909, "visibility") ? (SVGStylable)outElem909 : null;
        outElem910 = document.getElementById("geluidsbakens_handmatig_knop_linker_buis");
        outStyle910 = SvgUtils.isCssAttr(outElem910, "visibility") ? (SVGStylable)outElem910 : null;
        outElem911 = document.getElementById("geluidsbakens_handmatig_linker_buis");
        outStyle911 = SvgUtils.isCssAttr(outElem911, "visibility") ? (SVGStylable)outElem911 : null;
        outElem912 = document.getElementById("geluidsbakens_auto_linker_buis");
        outStyle912 = SvgUtils.isCssAttr(outElem912, "visibility") ? (SVGStylable)outElem912 : null;
        outElem913 = document.getElementById("contourverlichting_auto_knop_linker_buis");
        outStyle913 = SvgUtils.isCssAttr(outElem913, "visibility") ? (SVGStylable)outElem913 : null;
        outElem914 = document.getElementById("contourverlichting_handmatig_knop_linker_buis");
        outStyle914 = SvgUtils.isCssAttr(outElem914, "visibility") ? (SVGStylable)outElem914 : null;
        outElem915 = document.getElementById("contourverlichting_handmatig_linker_buis");
        outStyle915 = SvgUtils.isCssAttr(outElem915, "visibility") ? (SVGStylable)outElem915 : null;
        outElem916 = document.getElementById("contourverlichting_auto_linker_buis");
        outStyle916 = SvgUtils.isCssAttr(outElem916, "visibility") ? (SVGStylable)outElem916 : null;
        outElem917 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis");
        outStyle917 = SvgUtils.isCssAttr(outElem917, "visibility") ? (SVGStylable)outElem917 : null;
        outElem918 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_linker_buis");
        outStyle918 = SvgUtils.isCssAttr(outElem918, "visibility") ? (SVGStylable)outElem918 : null;
        outElem919 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_linker_buis");
        outStyle919 = SvgUtils.isCssAttr(outElem919, "visibility") ? (SVGStylable)outElem919 : null;
        outElem920 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_geluidsbakens_stand_linker_buis");
        outText920 = SvgUtils.getTextNode(outElem920);
        outElem921 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_linker_buis");
        outStyle921 = SvgUtils.isCssAttr(outElem921, "visibility") ? (SVGStylable)outElem921 : null;
        outElem922 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_linker_buis");
        outStyle922 = SvgUtils.isCssAttr(outElem922, "visibility") ? (SVGStylable)outElem922 : null;
        outElem923 = document.getElementById("overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_linker_buis");
        outStyle923 = SvgUtils.isCssAttr(outElem923, "visibility") ? (SVGStylable)outElem923 : null;
        outElem924 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis");
        outStyle924 = SvgUtils.isCssAttr(outElem924, "visibility") ? (SVGStylable)outElem924 : null;
        outElem925 = document.getElementById("overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_linker_buis");
        outStyle925 = SvgUtils.isCssAttr(outElem925, "visibility") ? (SVGStylable)outElem925 : null;
        outElem926 = document.getElementById("overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_linker_buis");
        outStyle926 = SvgUtils.isCssAttr(outElem926, "visibility") ? (SVGStylable)outElem926 : null;
        outElem927 = document.getElementById("overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_linker_buis");
        outStyle927 = SvgUtils.isCssAttr(outElem927, "visibility") ? (SVGStylable)outElem927 : null;
        outElem928 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeurindicatie_contourverlichting_stand_linker_buis");
        outText928 = SvgUtils.getTextNode(outElem928);
        outElem929 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_linker_buis");
        outStyle929 = SvgUtils.isCssAttr(outElem929, "fill") ? (SVGStylable)outElem929 : null;
        outElem930 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeuren_linker_buis");
        outStyle930 = SvgUtils.isCssAttr(outElem930, "visibility") ? (SVGStylable)outElem930 : null;
        outElem931 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_linker_buis");
        outStyle931 = SvgUtils.isCssAttr(outElem931, "fill") ? (SVGStylable)outElem931 : null;
        outElem932 = document.getElementById("overzicht_systemen_en_detecties_vluchtdeuren_open_sensor_stand_linker_buis");
        outText932 = SvgUtils.getTextNode(outElem932);
        outElem933 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_linker_buis");
        outStyle933 = SvgUtils.isCssAttr(outElem933, "fill") ? (SVGStylable)outElem933 : null;
        outElem934 = document.getElementById("overzicht_systemen_en_detecties_dynamische_vluchtroute_linker_buis");
        outStyle934 = SvgUtils.isCssAttr(outElem934, "visibility") ? (SVGStylable)outElem934 : null;
        outElem935 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_linker_buis");
        outStyle935 = SvgUtils.isCssAttr(outElem935, "fill") ? (SVGStylable)outElem935 : null;
        outElem936 = document.getElementById("dynamische_vluchtroute_auto_knop_linker_buis");
        outStyle936 = SvgUtils.isCssAttr(outElem936, "visibility") ? (SVGStylable)outElem936 : null;
        outElem937 = document.getElementById("dynamische_vluchtroute_handmatig_knop_linker_buis");
        outStyle937 = SvgUtils.isCssAttr(outElem937, "visibility") ? (SVGStylable)outElem937 : null;
        outElem938 = document.getElementById("dynamische_vluchtroute_handmatig_linker_buis");
        outStyle938 = SvgUtils.isCssAttr(outElem938, "visibility") ? (SVGStylable)outElem938 : null;
        outElem939 = document.getElementById("dynamische_vluchtroute_auto_linker_buis");
        outStyle939 = SvgUtils.isCssAttr(outElem939, "visibility") ? (SVGStylable)outElem939 : null;
        outElem940 = document.getElementById("overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis");
        outStyle940 = SvgUtils.isCssAttr(outElem940, "visibility") ? (SVGStylable)outElem940 : null;
        outElem941 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_linker_buis");
        outStyle941 = SvgUtils.isCssAttr(outElem941, "visibility") ? (SVGStylable)outElem941 : null;
        outElem942 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_linker_buis");
        outStyle942 = SvgUtils.isCssAttr(outElem942, "visibility") ? (SVGStylable)outElem942 : null;
        outElem943 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_linker_buis");
        outStyle943 = SvgUtils.isCssAttr(outElem943, "visibility") ? (SVGStylable)outElem943 : null;
        outElem944 = document.getElementById("overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_linker_buis");
        outStyle944 = SvgUtils.isCssAttr(outElem944, "visibility") ? (SVGStylable)outElem944 : null;
        outElem945 = document.getElementById("overzicht_systemen_en_detecties_dynamische_vluchtroute_stand_linker_buis");
        outText945 = SvgUtils.getTextNode(outElem945);
        outElem946 = document.getElementById("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_linker_buis");
        outStyle946 = SvgUtils.isCssAttr(outElem946, "visibility") ? (SVGStylable)outElem946 : null;
        outElem947 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_linker_buis");
        outStyle947 = SvgUtils.isCssAttr(outElem947, "fill") ? (SVGStylable)outElem947 : null;
        outElem948 = document.getElementById("overdruk_veilige_ruimte_auto_knop_linker_buis");
        outStyle948 = SvgUtils.isCssAttr(outElem948, "visibility") ? (SVGStylable)outElem948 : null;
        outElem949 = document.getElementById("overdruk_veilige_ruimte_handmatig_knop_linker_buis");
        outStyle949 = SvgUtils.isCssAttr(outElem949, "visibility") ? (SVGStylable)outElem949 : null;
        outElem950 = document.getElementById("overdruk_veilige_ruimte_handmatig_linker_buis");
        outStyle950 = SvgUtils.isCssAttr(outElem950, "visibility") ? (SVGStylable)outElem950 : null;
        outElem951 = document.getElementById("overdruk_veilige_ruimte_auto_linker_buis");
        outStyle951 = SvgUtils.isCssAttr(outElem951, "visibility") ? (SVGStylable)outElem951 : null;
        outElem952 = document.getElementById("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis");
        outStyle952 = SvgUtils.isCssAttr(outElem952, "visibility") ? (SVGStylable)outElem952 : null;
        outElem953 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_linker_buis");
        outStyle953 = SvgUtils.isCssAttr(outElem953, "visibility") ? (SVGStylable)outElem953 : null;
        outElem954 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_linker_buis");
        outStyle954 = SvgUtils.isCssAttr(outElem954, "visibility") ? (SVGStylable)outElem954 : null;
        outElem955 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_linker_buis");
        outStyle955 = SvgUtils.isCssAttr(outElem955, "visibility") ? (SVGStylable)outElem955 : null;
        outElem956 = document.getElementById("overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_linker_buis");
        outStyle956 = SvgUtils.isCssAttr(outElem956, "visibility") ? (SVGStylable)outElem956 : null;
        outElem957 = document.getElementById("overzicht_systemen_en_detecties_overdruk_veilige_ruimte_stand_linker_buis");
        outText957 = SvgUtils.getTextNode(outElem957);
        outElem958 = document.getElementById("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_linker_buis");
        outStyle958 = SvgUtils.isCssAttr(outElem958, "visibility") ? (SVGStylable)outElem958 : null;
        outElem959 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Licht_linker_buis");
        outStyle959 = SvgUtils.isCssAttr(outElem959, "fill") ? (SVGStylable)outElem959 : null;
        outElem960 = document.getElementById("verlichting_veilige_ruimte_auto_knop_linker_buis");
        outStyle960 = SvgUtils.isCssAttr(outElem960, "visibility") ? (SVGStylable)outElem960 : null;
        outElem961 = document.getElementById("verlichting_veilige_ruimte_handmatig_knop_linker_buis");
        outStyle961 = SvgUtils.isCssAttr(outElem961, "visibility") ? (SVGStylable)outElem961 : null;
        outElem962 = document.getElementById("verlichting_veilige_ruimte_handmatig_linker_buis");
        outStyle962 = SvgUtils.isCssAttr(outElem962, "visibility") ? (SVGStylable)outElem962 : null;
        outElem963 = document.getElementById("verlichting_veilige_ruimte_auto_linker_buis");
        outStyle963 = SvgUtils.isCssAttr(outElem963, "visibility") ? (SVGStylable)outElem963 : null;
        outElem964 = document.getElementById("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis");
        outStyle964 = SvgUtils.isCssAttr(outElem964, "visibility") ? (SVGStylable)outElem964 : null;
        outElem965 = document.getElementById("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_linker_buis");
        outStyle965 = SvgUtils.isCssAttr(outElem965, "visibility") ? (SVGStylable)outElem965 : null;
        outElem966 = document.getElementById("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_linker_buis");
        outStyle966 = SvgUtils.isCssAttr(outElem966, "visibility") ? (SVGStylable)outElem966 : null;
        outElem967 = document.getElementById("overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_linker_buis");
        outStyle967 = SvgUtils.isCssAttr(outElem967, "visibility") ? (SVGStylable)outElem967 : null;
        outElem968 = document.getElementById("overzicht_systemen_en_detecties_verlichting_veilige_ruimte_stand_linker_buis");
        outText968 = SvgUtils.getTextNode(outElem968);
        outElem969 = document.getElementById("overzicht_systemen_en_detecties_bluswatervoorziening_linker_buis");
        outStyle969 = SvgUtils.isCssAttr(outElem969, "visibility") ? (SVGStylable)outElem969 : null;
        outElem970 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_linker_buis");
        outStyle970 = SvgUtils.isCssAttr(outElem970, "fill") ? (SVGStylable)outElem970 : null;
        outElem971 = document.getElementById("bluswatervoorziening_auto_knop_linker_buis");
        outStyle971 = SvgUtils.isCssAttr(outElem971, "visibility") ? (SVGStylable)outElem971 : null;
        outElem972 = document.getElementById("bluswatervoorziening_handmatig_knop_linker_buis");
        outStyle972 = SvgUtils.isCssAttr(outElem972, "visibility") ? (SVGStylable)outElem972 : null;
        outElem973 = document.getElementById("bluswatervoorziening_handmatig_linker_buis");
        outStyle973 = SvgUtils.isCssAttr(outElem973, "visibility") ? (SVGStylable)outElem973 : null;
        outElem974 = document.getElementById("bluswatervoorziening_auto_linker_buis");
        outStyle974 = SvgUtils.isCssAttr(outElem974, "visibility") ? (SVGStylable)outElem974 : null;
        outElem975 = document.getElementById("overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis");
        outStyle975 = SvgUtils.isCssAttr(outElem975, "visibility") ? (SVGStylable)outElem975 : null;
        outElem976 = document.getElementById("overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_linker_buis");
        outStyle976 = SvgUtils.isCssAttr(outElem976, "visibility") ? (SVGStylable)outElem976 : null;
        outElem977 = document.getElementById("overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_linker_buis");
        outStyle977 = SvgUtils.isCssAttr(outElem977, "visibility") ? (SVGStylable)outElem977 : null;
        outElem978 = document.getElementById("overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_linker_buis");
        outStyle978 = SvgUtils.isCssAttr(outElem978, "visibility") ? (SVGStylable)outElem978 : null;
        outElem979 = document.getElementById("overzicht_systemen_en_detecties_blussen_ingestelde_stand_linker_buis");
        outText979 = SvgUtils.getTextNode(outElem979);
        outElem980 = document.getElementById("brand_blus_installatie_sensor_laag_text_linker_buis");
        outText980 = SvgUtils.getTextNode(outElem980);
        outElem981 = document.getElementById("brand_blus_installatie_sensor_hoog_text_linker_buis");
        outText981 = SvgUtils.getTextNode(outElem981);
        outElem982 = document.getElementById("brand_blus_installatie_blus_pomp_stand_text_linker_buis");
        outText982 = SvgUtils.getTextNode(outElem982);
        outElem983 = document.getElementById("overzicht_systemen_en_detecties_vloeistofafvoer_linker_buis");
        outStyle983 = SvgUtils.isCssAttr(outElem983, "visibility") ? (SVGStylable)outElem983 : null;
        outElem984 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_linker_buis");
        outStyle984 = SvgUtils.isCssAttr(outElem984, "fill") ? (SVGStylable)outElem984 : null;
        outElem985 = document.getElementById("midden_pomp_kelder_auto_knop_linker_buis");
        outStyle985 = SvgUtils.isCssAttr(outElem985, "visibility") ? (SVGStylable)outElem985 : null;
        outElem986 = document.getElementById("midden_pomp_kelder_handmatig_knop_linker_buis");
        outStyle986 = SvgUtils.isCssAttr(outElem986, "visibility") ? (SVGStylable)outElem986 : null;
        outElem987 = document.getElementById("midden_pomp_kelder_handmatig_linker_buis");
        outStyle987 = SvgUtils.isCssAttr(outElem987, "visibility") ? (SVGStylable)outElem987 : null;
        outElem988 = document.getElementById("midden_pomp_kelder_auto_linker_buis");
        outStyle988 = SvgUtils.isCssAttr(outElem988, "visibility") ? (SVGStylable)outElem988 : null;
        outElem989 = document.getElementById("overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis");
        outStyle989 = SvgUtils.isCssAttr(outElem989, "visibility") ? (SVGStylable)outElem989 : null;
        outElem990 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_linker_buis");
        outStyle990 = SvgUtils.isCssAttr(outElem990, "visibility") ? (SVGStylable)outElem990 : null;
        outElem991 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_linker_buis");
        outStyle991 = SvgUtils.isCssAttr(outElem991, "visibility") ? (SVGStylable)outElem991 : null;
        outElem992 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_linker_buis");
        outStyle992 = SvgUtils.isCssAttr(outElem992, "visibility") ? (SVGStylable)outElem992 : null;
        outElem993 = document.getElementById("overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_linker_buis");
        outStyle993 = SvgUtils.isCssAttr(outElem993, "visibility") ? (SVGStylable)outElem993 : null;
        outElem994 = document.getElementById("overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_linker_buis");
        outText994 = SvgUtils.getTextNode(outElem994);
        outElem995 = document.getElementById("overzicht_systemen_en_detecties_midden_pomp_kelder_niveau_stand_linker_buis");
        outText995 = SvgUtils.getTextNode(outElem995);
        outElem996 = document.getElementById("hoofd_pomp_kelder_1_auto_knop_linker_buis");
        outStyle996 = SvgUtils.isCssAttr(outElem996, "visibility") ? (SVGStylable)outElem996 : null;
        outElem997 = document.getElementById("hoofd_pomp_kelder_1_handmatig_knop_linker_buis");
        outStyle997 = SvgUtils.isCssAttr(outElem997, "visibility") ? (SVGStylable)outElem997 : null;
        outElem998 = document.getElementById("hoofd_pomp_kelder_1_handmatig_linker_buis");
        outStyle998 = SvgUtils.isCssAttr(outElem998, "visibility") ? (SVGStylable)outElem998 : null;
        outElem999 = document.getElementById("hoofd_pomp_kelder_1_auto_linker_buis");
        outStyle999 = SvgUtils.isCssAttr(outElem999, "visibility") ? (SVGStylable)outElem999 : null;
        outElem1000 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis");
        outStyle1000 = SvgUtils.isCssAttr(outElem1000, "visibility") ? (SVGStylable)outElem1000 : null;
        outElem1001 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_linker_buis");
        outStyle1001 = SvgUtils.isCssAttr(outElem1001, "visibility") ? (SVGStylable)outElem1001 : null;
        outElem1002 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_linker_buis");
        outStyle1002 = SvgUtils.isCssAttr(outElem1002, "visibility") ? (SVGStylable)outElem1002 : null;
        outElem1003 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_linker_buis");
        outStyle1003 = SvgUtils.isCssAttr(outElem1003, "visibility") ? (SVGStylable)outElem1003 : null;
        outElem1004 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_linker_buis");
        outStyle1004 = SvgUtils.isCssAttr(outElem1004, "visibility") ? (SVGStylable)outElem1004 : null;
        outElem1005 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_linker_buis");
        outText1005 = SvgUtils.getTextNode(outElem1005);
        outElem1006 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_niveau_stand_linker_buis");
        outText1006 = SvgUtils.getTextNode(outElem1006);
        outElem1007 = document.getElementById("hoofd_pomp_kelder_2_auto_knop_linker_buis");
        outStyle1007 = SvgUtils.isCssAttr(outElem1007, "visibility") ? (SVGStylable)outElem1007 : null;
        outElem1008 = document.getElementById("hoofd_pomp_kelder_2_handmatig_knop_linker_buis");
        outStyle1008 = SvgUtils.isCssAttr(outElem1008, "visibility") ? (SVGStylable)outElem1008 : null;
        outElem1009 = document.getElementById("hoofd_pomp_kelder_2_handmatig_linker_buis");
        outStyle1009 = SvgUtils.isCssAttr(outElem1009, "visibility") ? (SVGStylable)outElem1009 : null;
        outElem1010 = document.getElementById("hoofd_pomp_kelder_2_auto_linker_buis");
        outStyle1010 = SvgUtils.isCssAttr(outElem1010, "visibility") ? (SVGStylable)outElem1010 : null;
        outElem1011 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis");
        outStyle1011 = SvgUtils.isCssAttr(outElem1011, "visibility") ? (SVGStylable)outElem1011 : null;
        outElem1012 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_linker_buis");
        outStyle1012 = SvgUtils.isCssAttr(outElem1012, "visibility") ? (SVGStylable)outElem1012 : null;
        outElem1013 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_linker_buis");
        outStyle1013 = SvgUtils.isCssAttr(outElem1013, "visibility") ? (SVGStylable)outElem1013 : null;
        outElem1014 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_linker_buis");
        outStyle1014 = SvgUtils.isCssAttr(outElem1014, "visibility") ? (SVGStylable)outElem1014 : null;
        outElem1015 = document.getElementById("overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_linker_buis");
        outStyle1015 = SvgUtils.isCssAttr(outElem1015, "visibility") ? (SVGStylable)outElem1015 : null;
        outElem1016 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_linker_buis");
        outText1016 = SvgUtils.getTextNode(outElem1016);
        outElem1017 = document.getElementById("overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_niveau_stand_linker_buis");
        outText1017 = SvgUtils.getTextNode(outElem1017);
        outElem1018 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_linker_buis");
        outStyle1018 = SvgUtils.isCssAttr(outElem1018, "fill") ? (SVGStylable)outElem1018 : null;
        outElem1019 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_linker_buis");
        outStyle1019 = SvgUtils.isCssAttr(outElem1019, "fill") ? (SVGStylable)outElem1019 : null;
        outElem1020 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_linker_buis");
        outStyle1020 = SvgUtils.isCssAttr(outElem1020, "fill") ? (SVGStylable)outElem1020 : null;
        outElem1021 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_linker_buis");
        outStyle1021 = SvgUtils.isCssAttr(outElem1021, "fill") ? (SVGStylable)outElem1021 : null;
        outElem1022 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_linker_buis");
        outStyle1022 = SvgUtils.isCssAttr(outElem1022, "fill") ? (SVGStylable)outElem1022 : null;
        outElem1023 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_linker_buis");
        outStyle1023 = SvgUtils.isCssAttr(outElem1023, "fill") ? (SVGStylable)outElem1023 : null;
        outElem1024 = document.getElementById("overzicht_systemen_en_detecties_VRI_en_afsluitboom_linker_buis");
        outStyle1024 = SvgUtils.isCssAttr(outElem1024, "visibility") ? (SVGStylable)outElem1024 : null;
        outElem1025 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_linker_buis");
        outStyle1025 = SvgUtils.isCssAttr(outElem1025, "fill") ? (SVGStylable)outElem1025 : null;
        outElem1026 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_auto_knop_linker_buis");
        outStyle1026 = SvgUtils.isCssAttr(outElem1026, "visibility") ? (SVGStylable)outElem1026 : null;
        outElem1027 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_handmatig_knop_linker_buis");
        outStyle1027 = SvgUtils.isCssAttr(outElem1027, "visibility") ? (SVGStylable)outElem1027 : null;
        outElem1028 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_handmatig_linker_buis");
        outStyle1028 = SvgUtils.isCssAttr(outElem1028, "visibility") ? (SVGStylable)outElem1028 : null;
        outElem1029 = document.getElementById("VRI_en_afsluitboom_verkeerslichten_auto_linker_buis");
        outStyle1029 = SvgUtils.isCssAttr(outElem1029, "visibility") ? (SVGStylable)outElem1029 : null;
        outElem1030 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_auto_knop_linker_buis");
        outStyle1030 = SvgUtils.isCssAttr(outElem1030, "visibility") ? (SVGStylable)outElem1030 : null;
        outElem1031 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_handmatig_knop_linker_buis");
        outStyle1031 = SvgUtils.isCssAttr(outElem1031, "visibility") ? (SVGStylable)outElem1031 : null;
        outElem1032 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_handmatig_linker_buis");
        outStyle1032 = SvgUtils.isCssAttr(outElem1032, "visibility") ? (SVGStylable)outElem1032 : null;
        outElem1033 = document.getElementById("VRI_en_afsluitboom_afsluitbomen_auto_linker_buis");
        outStyle1033 = SvgUtils.isCssAttr(outElem1033, "visibility") ? (SVGStylable)outElem1033 : null;
        outElem1034 = document.getElementById("VRI_en_afsluitboom_buis_status_linker_buis");
        outText1034 = SvgUtils.getTextNode(outElem1034);
        outElem1035 = document.getElementById("VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_linker_buis");
        outStyle1035 = SvgUtils.isCssAttr(outElem1035, "fill") ? (SVGStylable)outElem1035 : null;
        outElem1036 = document.getElementById("VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_linker_buis");
        outStyle1036 = SvgUtils.isCssAttr(outElem1036, "fill") ? (SVGStylable)outElem1036 : null;
        outElem1037 = document.getElementById("VRI_en_afsluitboom_rood_alle_verkeerslichten_linker_buis");
        outStyle1037 = SvgUtils.isCssAttr(outElem1037, "fill") ? (SVGStylable)outElem1037 : null;
        outElem1038 = document.getElementById("VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_linker_buis");
        outStyle1038 = SvgUtils.isCssAttr(outElem1038, "fill") ? (SVGStylable)outElem1038 : null;
        outElem1039 = document.getElementById("VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_linker_buis");
        outStyle1039 = SvgUtils.isCssAttr(outElem1039, "fill") ? (SVGStylable)outElem1039 : null;
        outElem1040 = document.getElementById("VRI_en_afsluitboom_rood_alle_verkeerslichten_text_linker_buis");
        outStyle1040 = SvgUtils.isCssAttr(outElem1040, "fill") ? (SVGStylable)outElem1040 : null;
        outElem1041 = document.getElementById("VRI_en_afsluitboom_openen_alle_afsluitbomen_linker_buis");
        outStyle1041 = SvgUtils.isCssAttr(outElem1041, "fill") ? (SVGStylable)outElem1041 : null;
        outElem1042 = document.getElementById("VRI_en_afsluitboom_stop_alle_afsluitbomen_linker_buis");
        outStyle1042 = SvgUtils.isCssAttr(outElem1042, "fill") ? (SVGStylable)outElem1042 : null;
        outElem1043 = document.getElementById("VRI_en_afsluitboom_sluiten_alle_afsluitbomen_linker_buis");
        outStyle1043 = SvgUtils.isCssAttr(outElem1043, "fill") ? (SVGStylable)outElem1043 : null;
        outElem1044 = document.getElementById("VRI_en_afsluitboom_openen_alle_afsluitbomen_text_linker_buis");
        outStyle1044 = SvgUtils.isCssAttr(outElem1044, "fill") ? (SVGStylable)outElem1044 : null;
        outElem1045 = document.getElementById("VRI_en_afsluitboom_stop_alle_afsluitbomen_text_linker_buis");
        outStyle1045 = SvgUtils.isCssAttr(outElem1045, "fill") ? (SVGStylable)outElem1045 : null;
        outElem1046 = document.getElementById("VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_linker_buis");
        outStyle1046 = SvgUtils.isCssAttr(outElem1046, "fill") ? (SVGStylable)outElem1046 : null;
        outElem1047 = document.getElementById("VRI_en_afsluitboom_stand_afsluitboom1_linker_buis");
        outText1047 = SvgUtils.getTextNode(outElem1047);
        outElem1048 = document.getElementById("VRI_en_afsluitboom_stand_afsluitboom2_linker_buis");
        outText1048 = SvgUtils.getTextNode(outElem1048);
        outElem1049 = document.getElementById("VRI_en_afsluitboom_geblokeerd_stand_afsluitboom1_linker_buis");
        outText1049 = SvgUtils.getTextNode(outElem1049);
        outElem1050 = document.getElementById("VRI_en_afsluitboom_geblokeerd_stand_afsluitboom2_linker_buis");
        outText1050 = SvgUtils.getTextNode(outElem1050);
        outElem1051 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_linker_buis");
        outStyle1051 = SvgUtils.isCssAttr(outElem1051, "fill") ? (SVGStylable)outElem1051 : null;
        outElem1052 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_linker_buis");
        outStyle1052 = SvgUtils.isCssAttr(outElem1052, "fill") ? (SVGStylable)outElem1052 : null;
        outElem1053 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_linker_buis");
        outStyle1053 = SvgUtils.isCssAttr(outElem1053, "fill") ? (SVGStylable)outElem1053 : null;
        outElem1054 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_linker_buis");
        outStyle1054 = SvgUtils.isCssAttr(outElem1054, "fill") ? (SVGStylable)outElem1054 : null;
        outElem1055 = document.getElementById("overzicht_systemen_en_detecties_SOS_linker_buis");
        outStyle1055 = SvgUtils.isCssAttr(outElem1055, "visibility") ? (SVGStylable)outElem1055 : null;
        outElem1056 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_SOS_linker_buis");
        outStyle1056 = SvgUtils.isCssAttr(outElem1056, "fill") ? (SVGStylable)outElem1056 : null;
        outElem1057 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_linker_buis");
        outStyle1057 = SvgUtils.isCssAttr(outElem1057, "fill") ? (SVGStylable)outElem1057 : null;
        outElem1058 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_linker_buis");
        outStyle1058 = SvgUtils.isCssAttr(outElem1058, "fill") ? (SVGStylable)outElem1058 : null;
        outElem1059 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_linker_buis");
        outStyle1059 = SvgUtils.isCssAttr(outElem1059, "fill") ? (SVGStylable)outElem1059 : null;
        outElem1060 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_linker_buis");
        outStyle1060 = SvgUtils.isCssAttr(outElem1060, "fill") ? (SVGStylable)outElem1060 : null;
        outElem1061 = document.getElementById("overzicht_systemen_en_detecties_hulppost_linker_buis");
        outStyle1061 = SvgUtils.isCssAttr(outElem1061, "visibility") ? (SVGStylable)outElem1061 : null;
        outElem1062 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_linker_buis");
        outStyle1062 = SvgUtils.isCssAttr(outElem1062, "fill") ? (SVGStylable)outElem1062 : null;
        outElem1063 = document.getElementById("systemen_en_detecties_hulppostA_deur_open_stand_linker_buis");
        outText1063 = SvgUtils.getTextNode(outElem1063);
        outElem1064 = document.getElementById("systemen_en_detecties_hulppostA_handblusser_in_houder_stand_linker_buis");
        outText1064 = SvgUtils.getTextNode(outElem1064);
        outElem1065 = document.getElementById("systemen_en_detecties_hulppostA_brandslang_in_houder_stand_linker_buis");
        outText1065 = SvgUtils.getTextNode(outElem1065);
        outElem1066 = document.getElementById("systemen_en_detecties_hulppostA_noodtelefoon_gebruikt_stand_linker_buis");
        outText1066 = SvgUtils.getTextNode(outElem1066);
        outElem1067 = document.getElementById("systemen_en_detecties_hulppostC_deur_open_stand_linker_buis");
        outText1067 = SvgUtils.getTextNode(outElem1067);
        outElem1068 = document.getElementById("systemen_en_detecties_hulppostC_handblusser_in_houder_stand_linker_buis");
        outText1068 = SvgUtils.getTextNode(outElem1068);
        outElem1069 = document.getElementById("systemen_en_detecties_hulppostC_noodtelefoon_gebruikt_stand_linker_buis");
        outText1069 = SvgUtils.getTextNode(outElem1069);
        outElem1070 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Deur_linker_buis");
        outStyle1070 = SvgUtils.isCssAttr(outElem1070, "fill") ? (SVGStylable)outElem1070 : null;
        outElem1071 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_linker_buis");
        outStyle1071 = SvgUtils.isCssAttr(outElem1071, "fill") ? (SVGStylable)outElem1071 : null;
        outElem1072 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_linker_buis");
        outStyle1072 = SvgUtils.isCssAttr(outElem1072, "fill") ? (SVGStylable)outElem1072 : null;
        outElem1073 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_linker_buis");
        outStyle1073 = SvgUtils.isCssAttr(outElem1073, "fill") ? (SVGStylable)outElem1073 : null;
        outElem1074 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_C2000_linker_buis");
        outStyle1074 = SvgUtils.isCssAttr(outElem1074, "fill") ? (SVGStylable)outElem1074 : null;
        outElem1075 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_linker_buis");
        outStyle1075 = SvgUtils.isCssAttr(outElem1075, "fill") ? (SVGStylable)outElem1075 : null;
        outElem1076 = document.getElementById("sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_linker_buis");
        outStyle1076 = SvgUtils.isCssAttr(outElem1076, "fill") ? (SVGStylable)outElem1076 : null;
        outElem1077 = document.getElementById("active_tab_systemen_en_detecties_handbediening_linker_buis");
        outStyle1077 = SvgUtils.isCssAttr(outElem1077, "visibility") ? (SVGStylable)outElem1077 : null;
        outElem1078 = document.getElementById("inactive_tab_systemen_en_detecties_handbediening_linker_buis");
        outStyle1078 = SvgUtils.isCssAttr(outElem1078, "visibility") ? (SVGStylable)outElem1078 : null;
        outElem1079 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_buis_linker_buis");
        outStyle1079 = SvgUtils.isCssAttr(outElem1079, "visibility") ? (SVGStylable)outElem1079 : null;
        outElem1080 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_linker_buis");
        outStyle1080 = SvgUtils.isCssAttr(outElem1080, "visibility") ? (SVGStylable)outElem1080 : null;
        outElem1081 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_linker_buis");
        outStyle1081 = SvgUtils.isCssAttr(outElem1081, "visibility") ? (SVGStylable)outElem1081 : null;
        outElem1082 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_linker_buis");
        outStyle1082 = SvgUtils.isCssAttr(outElem1082, "visibility") ? (SVGStylable)outElem1082 : null;
        outElem1083 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_linker_buis");
        outStyle1083 = SvgUtils.isCssAttr(outElem1083, "visibility") ? (SVGStylable)outElem1083 : null;
        outElem1084 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_handbediening_overig_linker_buis");
        outStyle1084 = SvgUtils.isCssAttr(outElem1084, "visibility") ? (SVGStylable)outElem1084 : null;
        outElem1085 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_ventilatie_linker_buis");
        outStyle1085 = SvgUtils.isCssAttr(outElem1085, "visibility") ? (SVGStylable)outElem1085 : null;
        outElem1086 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_verlichting_linker_buis");
        outStyle1086 = SvgUtils.isCssAttr(outElem1086, "visibility") ? (SVGStylable)outElem1086 : null;
        outElem1087 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_CCTV_linker_buis");
        outStyle1087 = SvgUtils.isCssAttr(outElem1087, "visibility") ? (SVGStylable)outElem1087 : null;
        outElem1088 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_linker_buis");
        outStyle1088 = SvgUtils.isCssAttr(outElem1088, "visibility") ? (SVGStylable)outElem1088 : null;
        outElem1089 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_linker_buis");
        outStyle1089 = SvgUtils.isCssAttr(outElem1089, "visibility") ? (SVGStylable)outElem1089 : null;
        outElem1090 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_linker_buis");
        outStyle1090 = SvgUtils.isCssAttr(outElem1090, "visibility") ? (SVGStylable)outElem1090 : null;
        outElem1091 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_linker_buis");
        outStyle1091 = SvgUtils.isCssAttr(outElem1091, "visibility") ? (SVGStylable)outElem1091 : null;
        outElem1092 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_linker_buis");
        outStyle1092 = SvgUtils.isCssAttr(outElem1092, "visibility") ? (SVGStylable)outElem1092 : null;
        outElem1093 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_linker_buis");
        outStyle1093 = SvgUtils.isCssAttr(outElem1093, "visibility") ? (SVGStylable)outElem1093 : null;
        outElem1094 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Overdruk_linker_buis");
        outStyle1094 = SvgUtils.isCssAttr(outElem1094, "visibility") ? (SVGStylable)outElem1094 : null;
        outElem1095 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Licht_linker_buis");
        outStyle1095 = SvgUtils.isCssAttr(outElem1095, "visibility") ? (SVGStylable)outElem1095 : null;
        outElem1096 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_linker_buis");
        outStyle1096 = SvgUtils.isCssAttr(outElem1096, "visibility") ? (SVGStylable)outElem1096 : null;
        outElem1097 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_linker_buis");
        outStyle1097 = SvgUtils.isCssAttr(outElem1097, "visibility") ? (SVGStylable)outElem1097 : null;
        outElem1098 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_linker_buis");
        outStyle1098 = SvgUtils.isCssAttr(outElem1098, "visibility") ? (SVGStylable)outElem1098 : null;
        outElem1099 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_linker_buis");
        outStyle1099 = SvgUtils.isCssAttr(outElem1099, "visibility") ? (SVGStylable)outElem1099 : null;
        outElem1100 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Intercom_linker_buis");
        outStyle1100 = SvgUtils.isCssAttr(outElem1100, "visibility") ? (SVGStylable)outElem1100 : null;
        outElem1101 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Bediening_linker_buis");
        outStyle1101 = SvgUtils.isCssAttr(outElem1101, "visibility") ? (SVGStylable)outElem1101 : null;
        outElem1102 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_linker_buis");
        outStyle1102 = SvgUtils.isCssAttr(outElem1102, "visibility") ? (SVGStylable)outElem1102 : null;
        outElem1103 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_linker_buis");
        outStyle1103 = SvgUtils.isCssAttr(outElem1103, "visibility") ? (SVGStylable)outElem1103 : null;
        outElem1104 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_linker_buis");
        outStyle1104 = SvgUtils.isCssAttr(outElem1104, "visibility") ? (SVGStylable)outElem1104 : null;
        outElem1105 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_linker_buis");
        outStyle1105 = SvgUtils.isCssAttr(outElem1105, "visibility") ? (SVGStylable)outElem1105 : null;
        outElem1106 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_linker_buis");
        outStyle1106 = SvgUtils.isCssAttr(outElem1106, "visibility") ? (SVGStylable)outElem1106 : null;
        outElem1107 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_linker_buis");
        outStyle1107 = SvgUtils.isCssAttr(outElem1107, "visibility") ? (SVGStylable)outElem1107 : null;
        outElem1108 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Hoogte_linker_buis");
        outStyle1108 = SvgUtils.isCssAttr(outElem1108, "visibility") ? (SVGStylable)outElem1108 : null;
        outElem1109 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_SOS_linker_buis");
        outStyle1109 = SvgUtils.isCssAttr(outElem1109, "visibility") ? (SVGStylable)outElem1109 : null;
        outElem1110 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_linker_buis");
        outStyle1110 = SvgUtils.isCssAttr(outElem1110, "visibility") ? (SVGStylable)outElem1110 : null;
        outElem1111 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Stilstand_linker_buis");
        outStyle1111 = SvgUtils.isCssAttr(outElem1111, "visibility") ? (SVGStylable)outElem1111 : null;
        outElem1112 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_linker_buis");
        outStyle1112 = SvgUtils.isCssAttr(outElem1112, "visibility") ? (SVGStylable)outElem1112 : null;
        outElem1113 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Zicht_linker_buis");
        outStyle1113 = SvgUtils.isCssAttr(outElem1113, "visibility") ? (SVGStylable)outElem1113 : null;
        outElem1114 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Hulppost_linker_buis");
        outStyle1114 = SvgUtils.isCssAttr(outElem1114, "visibility") ? (SVGStylable)outElem1114 : null;
        outElem1115 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Deur_linker_buis");
        outStyle1115 = SvgUtils.isCssAttr(outElem1115, "visibility") ? (SVGStylable)outElem1115 : null;
        outElem1116 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Blusser_linker_buis");
        outStyle1116 = SvgUtils.isCssAttr(outElem1116, "visibility") ? (SVGStylable)outElem1116 : null;
        outElem1117 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Haspel_linker_buis");
        outStyle1117 = SvgUtils.isCssAttr(outElem1117, "visibility") ? (SVGStylable)outElem1117 : null;
        outElem1118 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_linker_buis");
        outStyle1118 = SvgUtils.isCssAttr(outElem1118, "visibility") ? (SVGStylable)outElem1118 : null;
        outElem1119 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_C2000_linker_buis");
        outStyle1119 = SvgUtils.isCssAttr(outElem1119, "visibility") ? (SVGStylable)outElem1119 : null;
        outElem1120 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_Telefoon_linker_buis");
        outStyle1120 = SvgUtils.isCssAttr(outElem1120, "visibility") ? (SVGStylable)outElem1120 : null;
        outElem1121 = document.getElementById("blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_linker_buis");
        outStyle1121 = SvgUtils.isCssAttr(outElem1121, "visibility") ? (SVGStylable)outElem1121 : null;
        outElem1122 = document.getElementById("handbedieningalarm_langsventilatie_linker_buis");
        outStyle1122 = SvgUtils.isCssAttr(outElem1122, "visibility") ? (SVGStylable)outElem1122 : null;
        outElem1123 = document.getElementById("handbedieningalarm_verlichting_linker_buis");
        outStyle1123 = SvgUtils.isCssAttr(outElem1123, "visibility") ? (SVGStylable)outElem1123 : null;
        outElem1124 = document.getElementById("handbedieningalarm_verlichting_gesloten_deel_linker_buis");
        outStyle1124 = SvgUtils.isCssAttr(outElem1124, "visibility") ? (SVGStylable)outElem1124 : null;
        outElem1125 = document.getElementById("handbedieningalarm_vluchtdeurindicatie_linker_buis");
        outStyle1125 = SvgUtils.isCssAttr(outElem1125, "visibility") ? (SVGStylable)outElem1125 : null;
        outElem1126 = document.getElementById("handbedieningalarm_vluchtdeurindicatie_geluidsbakens_linker_buis");
        outStyle1126 = SvgUtils.isCssAttr(outElem1126, "visibility") ? (SVGStylable)outElem1126 : null;
        outElem1127 = document.getElementById("handbedieningalarm_vluchtdeurindicatie_contourverlichting_linker_buis");
        outStyle1127 = SvgUtils.isCssAttr(outElem1127, "visibility") ? (SVGStylable)outElem1127 : null;
        outElem1128 = document.getElementById("handbedieningalarm_vluchtdeuren_linker_buis");
        outStyle1128 = SvgUtils.isCssAttr(outElem1128, "visibility") ? (SVGStylable)outElem1128 : null;
        outElem1129 = document.getElementById("handbedieningalarm_vluchtdeur_open_sensor_linker_buis");
        outStyle1129 = SvgUtils.isCssAttr(outElem1129, "visibility") ? (SVGStylable)outElem1129 : null;
        outElem1130 = document.getElementById("handbedieningalarm_dynamische_vluchtroute_linker_buis");
        outStyle1130 = SvgUtils.isCssAttr(outElem1130, "visibility") ? (SVGStylable)outElem1130 : null;
        outElem1131 = document.getElementById("handbedieningalarm_overdruk_veilige_ruimte_linker_buis");
        outStyle1131 = SvgUtils.isCssAttr(outElem1131, "visibility") ? (SVGStylable)outElem1131 : null;
        outElem1132 = document.getElementById("handbedieningalarm_verlichting_veilige_ruimte_linker_buis");
        outStyle1132 = SvgUtils.isCssAttr(outElem1132, "visibility") ? (SVGStylable)outElem1132 : null;
        outElem1133 = document.getElementById("handbedieningalarm_bluswatervoorziening_linker_buis");
        outStyle1133 = SvgUtils.isCssAttr(outElem1133, "visibility") ? (SVGStylable)outElem1133 : null;
        outElem1134 = document.getElementById("handbedieningalarm_sensor_brand_blus_installatie_linker_buis");
        outStyle1134 = SvgUtils.isCssAttr(outElem1134, "visibility") ? (SVGStylable)outElem1134 : null;
        outElem1135 = document.getElementById("handbedieningalarm_blus_pomp_linker_buis");
        outStyle1135 = SvgUtils.isCssAttr(outElem1135, "visibility") ? (SVGStylable)outElem1135 : null;
        outElem1136 = document.getElementById("handbedieningalarm_vloeistofafvoer_linker_buis");
        outStyle1136 = SvgUtils.isCssAttr(outElem1136, "visibility") ? (SVGStylable)outElem1136 : null;
        outElem1137 = document.getElementById("handbedieningalarm_midden_pomp_kelder_linker_buis");
        outStyle1137 = SvgUtils.isCssAttr(outElem1137, "visibility") ? (SVGStylable)outElem1137 : null;
        outElem1138 = document.getElementById("handbedieningalarm_hoofd_pomp_kelder_1_linker_buis");
        outStyle1138 = SvgUtils.isCssAttr(outElem1138, "visibility") ? (SVGStylable)outElem1138 : null;
        outElem1139 = document.getElementById("handbedieningalarm_hoofd_pomp_kelder_2_linker_buis");
        outStyle1139 = SvgUtils.isCssAttr(outElem1139, "visibility") ? (SVGStylable)outElem1139 : null;
        outElem1140 = document.getElementById("VRI_en_afsluitboom_handbedieningalarm_linker_buis");
        outStyle1140 = SvgUtils.isCssAttr(outElem1140, "visibility") ? (SVGStylable)outElem1140 : null;
        outElem1141 = document.getElementById("VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_linker_buis");
        outStyle1141 = SvgUtils.isCssAttr(outElem1141, "visibility") ? (SVGStylable)outElem1141 : null;
        outElem1142 = document.getElementById("VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_linker_buis");
        outStyle1142 = SvgUtils.isCssAttr(outElem1142, "visibility") ? (SVGStylable)outElem1142 : null;
        outElem1143 = document.getElementById("handbedieningalarm_sos_linker_buis");
        outStyle1143 = SvgUtils.isCssAttr(outElem1143, "visibility") ? (SVGStylable)outElem1143 : null;
        outElem1144 = document.getElementById("handbedieningalarm_sos_sectie1_linker_buis");
        outStyle1144 = SvgUtils.isCssAttr(outElem1144, "visibility") ? (SVGStylable)outElem1144 : null;
        outElem1145 = document.getElementById("handmatigalarm_hulpposten_linker_buis");
        outStyle1145 = SvgUtils.isCssAttr(outElem1145, "visibility") ? (SVGStylable)outElem1145 : null;
        outElem1146 = document.getElementById("handmatigalarm_hulppostA_linker_buis");
        outStyle1146 = SvgUtils.isCssAttr(outElem1146, "visibility") ? (SVGStylable)outElem1146 : null;
        outElem1147 = document.getElementById("handmatigalarm_hulppostC_linker_buis");
        outStyle1147 = SvgUtils.isCssAttr(outElem1147, "visibility") ? (SVGStylable)outElem1147 : null;
        outElem1148 = document.getElementById("active_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis");
        outStyle1148 = SvgUtils.isCssAttr(outElem1148, "visibility") ? (SVGStylable)outElem1148 : null;
        outElem1149 = document.getElementById("inactive_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis");
        outStyle1149 = SvgUtils.isCssAttr(outElem1149, "visibility") ? (SVGStylable)outElem1149 : null;
        outElem1150 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_linker_buis");
        outStyle1150 = SvgUtils.isCssAttr(outElem1150, "visibility") ? (SVGStylable)outElem1150 : null;
        outElem1151 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_linker_buis");
        outStyle1151 = SvgUtils.isCssAttr(outElem1151, "visibility") ? (SVGStylable)outElem1151 : null;
        outElem1152 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_linker_buis");
        outStyle1152 = SvgUtils.isCssAttr(outElem1152, "visibility") ? (SVGStylable)outElem1152 : null;
        outElem1153 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_linker_buis");
        outStyle1153 = SvgUtils.isCssAttr(outElem1153, "visibility") ? (SVGStylable)outElem1153 : null;
        outElem1154 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_linker_buis");
        outStyle1154 = SvgUtils.isCssAttr(outElem1154, "visibility") ? (SVGStylable)outElem1154 : null;
        outElem1155 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_linker_buis");
        outStyle1155 = SvgUtils.isCssAttr(outElem1155, "visibility") ? (SVGStylable)outElem1155 : null;
        outElem1156 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_linker_buis");
        outStyle1156 = SvgUtils.isCssAttr(outElem1156, "visibility") ? (SVGStylable)outElem1156 : null;
        outElem1157 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_linker_buis");
        outStyle1157 = SvgUtils.isCssAttr(outElem1157, "visibility") ? (SVGStylable)outElem1157 : null;
        outElem1158 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_linker_buis");
        outStyle1158 = SvgUtils.isCssAttr(outElem1158, "visibility") ? (SVGStylable)outElem1158 : null;
        outElem1159 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_linker_buis");
        outStyle1159 = SvgUtils.isCssAttr(outElem1159, "visibility") ? (SVGStylable)outElem1159 : null;
        outElem1160 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_linker_buis");
        outStyle1160 = SvgUtils.isCssAttr(outElem1160, "visibility") ? (SVGStylable)outElem1160 : null;
        outElem1161 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_linker_buis");
        outStyle1161 = SvgUtils.isCssAttr(outElem1161, "visibility") ? (SVGStylable)outElem1161 : null;
        outElem1162 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_linker_buis");
        outStyle1162 = SvgUtils.isCssAttr(outElem1162, "visibility") ? (SVGStylable)outElem1162 : null;
        outElem1163 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_linker_buis");
        outStyle1163 = SvgUtils.isCssAttr(outElem1163, "visibility") ? (SVGStylable)outElem1163 : null;
        outElem1164 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_linker_buis");
        outStyle1164 = SvgUtils.isCssAttr(outElem1164, "visibility") ? (SVGStylable)outElem1164 : null;
        outElem1165 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_linker_buis");
        outStyle1165 = SvgUtils.isCssAttr(outElem1165, "visibility") ? (SVGStylable)outElem1165 : null;
        outElem1166 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_linker_buis");
        outStyle1166 = SvgUtils.isCssAttr(outElem1166, "visibility") ? (SVGStylable)outElem1166 : null;
        outElem1167 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_linker_buis");
        outStyle1167 = SvgUtils.isCssAttr(outElem1167, "visibility") ? (SVGStylable)outElem1167 : null;
        outElem1168 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_linker_buis");
        outStyle1168 = SvgUtils.isCssAttr(outElem1168, "visibility") ? (SVGStylable)outElem1168 : null;
        outElem1169 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_linker_buis");
        outStyle1169 = SvgUtils.isCssAttr(outElem1169, "visibility") ? (SVGStylable)outElem1169 : null;
        outElem1170 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_linker_buis");
        outStyle1170 = SvgUtils.isCssAttr(outElem1170, "visibility") ? (SVGStylable)outElem1170 : null;
        outElem1171 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_linker_buis");
        outStyle1171 = SvgUtils.isCssAttr(outElem1171, "visibility") ? (SVGStylable)outElem1171 : null;
        outElem1172 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_linker_buis");
        outStyle1172 = SvgUtils.isCssAttr(outElem1172, "visibility") ? (SVGStylable)outElem1172 : null;
        outElem1173 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_linker_buis");
        outStyle1173 = SvgUtils.isCssAttr(outElem1173, "visibility") ? (SVGStylable)outElem1173 : null;
        outElem1174 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_linker_buis");
        outStyle1174 = SvgUtils.isCssAttr(outElem1174, "visibility") ? (SVGStylable)outElem1174 : null;
        outElem1175 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_linker_buis");
        outStyle1175 = SvgUtils.isCssAttr(outElem1175, "visibility") ? (SVGStylable)outElem1175 : null;
        outElem1176 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_linker_buis");
        outStyle1176 = SvgUtils.isCssAttr(outElem1176, "visibility") ? (SVGStylable)outElem1176 : null;
        outElem1177 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_linker_buis");
        outStyle1177 = SvgUtils.isCssAttr(outElem1177, "visibility") ? (SVGStylable)outElem1177 : null;
        outElem1178 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_linker_buis");
        outStyle1178 = SvgUtils.isCssAttr(outElem1178, "visibility") ? (SVGStylable)outElem1178 : null;
        outElem1179 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_linker_buis");
        outStyle1179 = SvgUtils.isCssAttr(outElem1179, "visibility") ? (SVGStylable)outElem1179 : null;
        outElem1180 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_linker_buis");
        outStyle1180 = SvgUtils.isCssAttr(outElem1180, "visibility") ? (SVGStylable)outElem1180 : null;
        outElem1181 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_linker_buis");
        outStyle1181 = SvgUtils.isCssAttr(outElem1181, "visibility") ? (SVGStylable)outElem1181 : null;
        outElem1182 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_linker_buis");
        outStyle1182 = SvgUtils.isCssAttr(outElem1182, "visibility") ? (SVGStylable)outElem1182 : null;
        outElem1183 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_linker_buis");
        outStyle1183 = SvgUtils.isCssAttr(outElem1183, "visibility") ? (SVGStylable)outElem1183 : null;
        outElem1184 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_linker_buis");
        outStyle1184 = SvgUtils.isCssAttr(outElem1184, "visibility") ? (SVGStylable)outElem1184 : null;
        outElem1185 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_linker_buis");
        outStyle1185 = SvgUtils.isCssAttr(outElem1185, "visibility") ? (SVGStylable)outElem1185 : null;
        outElem1186 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_linker_buis");
        outStyle1186 = SvgUtils.isCssAttr(outElem1186, "visibility") ? (SVGStylable)outElem1186 : null;
        outElem1187 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_linker_buis");
        outStyle1187 = SvgUtils.isCssAttr(outElem1187, "visibility") ? (SVGStylable)outElem1187 : null;
        outElem1188 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_linker_buis");
        outStyle1188 = SvgUtils.isCssAttr(outElem1188, "visibility") ? (SVGStylable)outElem1188 : null;
        outElem1189 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_linker_buis");
        outStyle1189 = SvgUtils.isCssAttr(outElem1189, "visibility") ? (SVGStylable)outElem1189 : null;
        outElem1190 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_linker_buis");
        outStyle1190 = SvgUtils.isCssAttr(outElem1190, "visibility") ? (SVGStylable)outElem1190 : null;
        outElem1191 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_linker_buis");
        outStyle1191 = SvgUtils.isCssAttr(outElem1191, "visibility") ? (SVGStylable)outElem1191 : null;
        outElem1192 = document.getElementById("blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_linker_buis");
        outStyle1192 = SvgUtils.isCssAttr(outElem1192, "visibility") ? (SVGStylable)outElem1192 : null;
        outElem1193 = document.getElementById("verkeerskundigalarm_langsventilatie_linker_buis");
        outStyle1193 = SvgUtils.isCssAttr(outElem1193, "visibility") ? (SVGStylable)outElem1193 : null;
        outElem1194 = document.getElementById("verkeerskundigalarm_verlichting_linker_buis");
        outStyle1194 = SvgUtils.isCssAttr(outElem1194, "visibility") ? (SVGStylable)outElem1194 : null;
        outElem1195 = document.getElementById("verkeerskundigalarm_verlichting_gesloten_deel_linker_buis");
        outStyle1195 = SvgUtils.isCssAttr(outElem1195, "visibility") ? (SVGStylable)outElem1195 : null;
        outElem1196 = document.getElementById("verkeerskundigalarm_vluchtdeurindicatie_linker_buis");
        outStyle1196 = SvgUtils.isCssAttr(outElem1196, "visibility") ? (SVGStylable)outElem1196 : null;
        outElem1197 = document.getElementById("verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_linker_buis");
        outStyle1197 = SvgUtils.isCssAttr(outElem1197, "visibility") ? (SVGStylable)outElem1197 : null;
        outElem1198 = document.getElementById("verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_linker_buis");
        outStyle1198 = SvgUtils.isCssAttr(outElem1198, "visibility") ? (SVGStylable)outElem1198 : null;
        outElem1199 = document.getElementById("verkeerskundigalarm_vluchtdeuren_linker_buis");
        outStyle1199 = SvgUtils.isCssAttr(outElem1199, "visibility") ? (SVGStylable)outElem1199 : null;
        outElem1200 = document.getElementById("verkeerskundigalarm_vluchtdeur_open_sensor_linker_buis");
        outStyle1200 = SvgUtils.isCssAttr(outElem1200, "visibility") ? (SVGStylable)outElem1200 : null;
        outElem1201 = document.getElementById("verkeerskundigalarm_dynamische_vluchtroute_linker_buis");
        outStyle1201 = SvgUtils.isCssAttr(outElem1201, "visibility") ? (SVGStylable)outElem1201 : null;
        outElem1202 = document.getElementById("verkeerskundigalarm_overdruk_veilige_ruimte_linker_buis");
        outStyle1202 = SvgUtils.isCssAttr(outElem1202, "visibility") ? (SVGStylable)outElem1202 : null;
        outElem1203 = document.getElementById("verkeerskundigalarm_verlichting_veilige_ruimte_linker_buis");
        outStyle1203 = SvgUtils.isCssAttr(outElem1203, "visibility") ? (SVGStylable)outElem1203 : null;
        outElem1204 = document.getElementById("verkeerskundigalarm_bluswatervoorziening_linker_buis");
        outStyle1204 = SvgUtils.isCssAttr(outElem1204, "visibility") ? (SVGStylable)outElem1204 : null;
        outElem1205 = document.getElementById("verkeerskundigalarm_sensor_brand_blus_installatie_linker_buis");
        outStyle1205 = SvgUtils.isCssAttr(outElem1205, "visibility") ? (SVGStylable)outElem1205 : null;
        outElem1206 = document.getElementById("verkeerskundigalarm_vloeistofafvoer_linker_buis");
        outStyle1206 = SvgUtils.isCssAttr(outElem1206, "visibility") ? (SVGStylable)outElem1206 : null;
        outElem1207 = document.getElementById("verkeerskundigalarm_blus_pomp_linker_buis");
        outStyle1207 = SvgUtils.isCssAttr(outElem1207, "visibility") ? (SVGStylable)outElem1207 : null;
        outElem1208 = document.getElementById("verkeerskundigalarm_midden_pomp_kelder_linker_buis");
        outStyle1208 = SvgUtils.isCssAttr(outElem1208, "visibility") ? (SVGStylable)outElem1208 : null;
        outElem1209 = document.getElementById("verkeerskundigalarm_hoofd_pomp_kelder_1_linker_buis");
        outStyle1209 = SvgUtils.isCssAttr(outElem1209, "visibility") ? (SVGStylable)outElem1209 : null;
        outElem1210 = document.getElementById("verkeerskundigalarm_hoofd_pomp_kelder_2_linker_buis");
        outStyle1210 = SvgUtils.isCssAttr(outElem1210, "visibility") ? (SVGStylable)outElem1210 : null;
        outElem1211 = document.getElementById("VRI_en_afsluitboom_verkeerskundigalarm_linker_buis");
        outStyle1211 = SvgUtils.isCssAttr(outElem1211, "visibility") ? (SVGStylable)outElem1211 : null;
        outElem1212 = document.getElementById("VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_linker_buis");
        outStyle1212 = SvgUtils.isCssAttr(outElem1212, "visibility") ? (SVGStylable)outElem1212 : null;
        outElem1213 = document.getElementById("VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_linker_buis");
        outStyle1213 = SvgUtils.isCssAttr(outElem1213, "visibility") ? (SVGStylable)outElem1213 : null;
        outElem1214 = document.getElementById("verkeerskundigalarm_sos_linker_buis");
        outStyle1214 = SvgUtils.isCssAttr(outElem1214, "visibility") ? (SVGStylable)outElem1214 : null;
        outElem1215 = document.getElementById("verkeerskundigalarm_sos_sectie1_linker_buis");
        outStyle1215 = SvgUtils.isCssAttr(outElem1215, "visibility") ? (SVGStylable)outElem1215 : null;
        outElem1216 = document.getElementById("verkeerskundigalarm_hulpposten_linker_buis");
        outStyle1216 = SvgUtils.isCssAttr(outElem1216, "visibility") ? (SVGStylable)outElem1216 : null;
        outElem1217 = document.getElementById("verkeerskundigalarm_hulppostA_linker_buis");
        outStyle1217 = SvgUtils.isCssAttr(outElem1217, "visibility") ? (SVGStylable)outElem1217 : null;
        outElem1218 = document.getElementById("verkeerskundigalarm_hulppostC_linker_buis");
        outStyle1218 = SvgUtils.isCssAttr(outElem1218, "visibility") ? (SVGStylable)outElem1218 : null;
        outElem1219 = document.getElementById("active_tab_systemen_en_detecties_deelsysteemalarm_linker_buis");
        outStyle1219 = SvgUtils.isCssAttr(outElem1219, "visibility") ? (SVGStylable)outElem1219 : null;
        outElem1220 = document.getElementById("inactive_tab_systemen_en_detecties_deelsysteemalarm_linker_buis");
        outStyle1220 = SvgUtils.isCssAttr(outElem1220, "visibility") ? (SVGStylable)outElem1220 : null;
        outElem1221 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_linker_buis");
        outStyle1221 = SvgUtils.isCssAttr(outElem1221, "visibility") ? (SVGStylable)outElem1221 : null;
        outElem1222 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_linker_buis");
        outStyle1222 = SvgUtils.isCssAttr(outElem1222, "visibility") ? (SVGStylable)outElem1222 : null;
        outElem1223 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_linker_buis");
        outStyle1223 = SvgUtils.isCssAttr(outElem1223, "visibility") ? (SVGStylable)outElem1223 : null;
        outElem1224 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_linker_buis");
        outStyle1224 = SvgUtils.isCssAttr(outElem1224, "visibility") ? (SVGStylable)outElem1224 : null;
        outElem1225 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_linker_buis");
        outStyle1225 = SvgUtils.isCssAttr(outElem1225, "visibility") ? (SVGStylable)outElem1225 : null;
        outElem1226 = document.getElementById("titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_linker_buis");
        outStyle1226 = SvgUtils.isCssAttr(outElem1226, "visibility") ? (SVGStylable)outElem1226 : null;
        outElem1227 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_linker_buis");
        outStyle1227 = SvgUtils.isCssAttr(outElem1227, "visibility") ? (SVGStylable)outElem1227 : null;
        outElem1228 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_linker_buis");
        outStyle1228 = SvgUtils.isCssAttr(outElem1228, "visibility") ? (SVGStylable)outElem1228 : null;
        outElem1229 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_linker_buis");
        outStyle1229 = SvgUtils.isCssAttr(outElem1229, "visibility") ? (SVGStylable)outElem1229 : null;
        outElem1230 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_linker_buis");
        outStyle1230 = SvgUtils.isCssAttr(outElem1230, "visibility") ? (SVGStylable)outElem1230 : null;
        outElem1231 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_linker_buis");
        outStyle1231 = SvgUtils.isCssAttr(outElem1231, "visibility") ? (SVGStylable)outElem1231 : null;
        outElem1232 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_linker_buis");
        outStyle1232 = SvgUtils.isCssAttr(outElem1232, "visibility") ? (SVGStylable)outElem1232 : null;
        outElem1233 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_linker_buis");
        outStyle1233 = SvgUtils.isCssAttr(outElem1233, "visibility") ? (SVGStylable)outElem1233 : null;
        outElem1234 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_linker_buis");
        outStyle1234 = SvgUtils.isCssAttr(outElem1234, "visibility") ? (SVGStylable)outElem1234 : null;
        outElem1235 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_linker_buis");
        outStyle1235 = SvgUtils.isCssAttr(outElem1235, "visibility") ? (SVGStylable)outElem1235 : null;
        outElem1236 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_linker_buis");
        outStyle1236 = SvgUtils.isCssAttr(outElem1236, "visibility") ? (SVGStylable)outElem1236 : null;
        outElem1237 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_linker_buis");
        outStyle1237 = SvgUtils.isCssAttr(outElem1237, "visibility") ? (SVGStylable)outElem1237 : null;
        outElem1238 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_linker_buis");
        outStyle1238 = SvgUtils.isCssAttr(outElem1238, "visibility") ? (SVGStylable)outElem1238 : null;
        outElem1239 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_linker_buis");
        outStyle1239 = SvgUtils.isCssAttr(outElem1239, "visibility") ? (SVGStylable)outElem1239 : null;
        outElem1240 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_linker_buis");
        outStyle1240 = SvgUtils.isCssAttr(outElem1240, "visibility") ? (SVGStylable)outElem1240 : null;
        outElem1241 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_linker_buis");
        outStyle1241 = SvgUtils.isCssAttr(outElem1241, "visibility") ? (SVGStylable)outElem1241 : null;
        outElem1242 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_linker_buis");
        outStyle1242 = SvgUtils.isCssAttr(outElem1242, "visibility") ? (SVGStylable)outElem1242 : null;
        outElem1243 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_linker_buis");
        outStyle1243 = SvgUtils.isCssAttr(outElem1243, "visibility") ? (SVGStylable)outElem1243 : null;
        outElem1244 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_linker_buis");
        outStyle1244 = SvgUtils.isCssAttr(outElem1244, "visibility") ? (SVGStylable)outElem1244 : null;
        outElem1245 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_linker_buis");
        outStyle1245 = SvgUtils.isCssAttr(outElem1245, "visibility") ? (SVGStylable)outElem1245 : null;
        outElem1246 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_linker_buis");
        outStyle1246 = SvgUtils.isCssAttr(outElem1246, "visibility") ? (SVGStylable)outElem1246 : null;
        outElem1247 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_linker_buis");
        outStyle1247 = SvgUtils.isCssAttr(outElem1247, "visibility") ? (SVGStylable)outElem1247 : null;
        outElem1248 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_linker_buis");
        outStyle1248 = SvgUtils.isCssAttr(outElem1248, "visibility") ? (SVGStylable)outElem1248 : null;
        outElem1249 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_linker_buis");
        outStyle1249 = SvgUtils.isCssAttr(outElem1249, "visibility") ? (SVGStylable)outElem1249 : null;
        outElem1250 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_linker_buis");
        outStyle1250 = SvgUtils.isCssAttr(outElem1250, "visibility") ? (SVGStylable)outElem1250 : null;
        outElem1251 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_linker_buis");
        outStyle1251 = SvgUtils.isCssAttr(outElem1251, "visibility") ? (SVGStylable)outElem1251 : null;
        outElem1252 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_linker_buis");
        outStyle1252 = SvgUtils.isCssAttr(outElem1252, "visibility") ? (SVGStylable)outElem1252 : null;
        outElem1253 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_linker_buis");
        outStyle1253 = SvgUtils.isCssAttr(outElem1253, "visibility") ? (SVGStylable)outElem1253 : null;
        outElem1254 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_linker_buis");
        outStyle1254 = SvgUtils.isCssAttr(outElem1254, "visibility") ? (SVGStylable)outElem1254 : null;
        outElem1255 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_linker_buis");
        outStyle1255 = SvgUtils.isCssAttr(outElem1255, "visibility") ? (SVGStylable)outElem1255 : null;
        outElem1256 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_linker_buis");
        outStyle1256 = SvgUtils.isCssAttr(outElem1256, "visibility") ? (SVGStylable)outElem1256 : null;
        outElem1257 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_linker_buis");
        outStyle1257 = SvgUtils.isCssAttr(outElem1257, "visibility") ? (SVGStylable)outElem1257 : null;
        outElem1258 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_linker_buis");
        outStyle1258 = SvgUtils.isCssAttr(outElem1258, "visibility") ? (SVGStylable)outElem1258 : null;
        outElem1259 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_linker_buis");
        outStyle1259 = SvgUtils.isCssAttr(outElem1259, "visibility") ? (SVGStylable)outElem1259 : null;
        outElem1260 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_linker_buis");
        outStyle1260 = SvgUtils.isCssAttr(outElem1260, "visibility") ? (SVGStylable)outElem1260 : null;
        outElem1261 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_linker_buis");
        outStyle1261 = SvgUtils.isCssAttr(outElem1261, "visibility") ? (SVGStylable)outElem1261 : null;
        outElem1262 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_linker_buis");
        outStyle1262 = SvgUtils.isCssAttr(outElem1262, "visibility") ? (SVGStylable)outElem1262 : null;
        outElem1263 = document.getElementById("blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_linker_buis");
        outStyle1263 = SvgUtils.isCssAttr(outElem1263, "visibility") ? (SVGStylable)outElem1263 : null;
        outElem1264 = document.getElementById("deelsysteemalarm_langsventilatie_linker_buis");
        outStyle1264 = SvgUtils.isCssAttr(outElem1264, "visibility") ? (SVGStylable)outElem1264 : null;
        outElem1265 = document.getElementById("deelsysteemalarm_verlichting_linker_buis");
        outStyle1265 = SvgUtils.isCssAttr(outElem1265, "visibility") ? (SVGStylable)outElem1265 : null;
        outElem1266 = document.getElementById("deelsysteemalarm_verlichting_gesloten_deel_linker_buis");
        outStyle1266 = SvgUtils.isCssAttr(outElem1266, "visibility") ? (SVGStylable)outElem1266 : null;
        outElem1267 = document.getElementById("deelsysteemalarm_vluchtdeurindicatie_linker_buis");
        outStyle1267 = SvgUtils.isCssAttr(outElem1267, "visibility") ? (SVGStylable)outElem1267 : null;
        outElem1268 = document.getElementById("deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_linker_buis");
        outStyle1268 = SvgUtils.isCssAttr(outElem1268, "visibility") ? (SVGStylable)outElem1268 : null;
        outElem1269 = document.getElementById("deelsysteemalarm_vluchtdeurindicatie_contourverlichting_linker_buis");
        outStyle1269 = SvgUtils.isCssAttr(outElem1269, "visibility") ? (SVGStylable)outElem1269 : null;
        outElem1270 = document.getElementById("deelsysteemalarm_vluchtdeuren_linker_buis");
        outStyle1270 = SvgUtils.isCssAttr(outElem1270, "visibility") ? (SVGStylable)outElem1270 : null;
        outElem1271 = document.getElementById("deelsysteemalarm_vluchtdeur_open_sensor_linker_buis");
        outStyle1271 = SvgUtils.isCssAttr(outElem1271, "visibility") ? (SVGStylable)outElem1271 : null;
        outElem1272 = document.getElementById("deelsysteemalarm_dynamische_vluchtroute_linker_buis");
        outStyle1272 = SvgUtils.isCssAttr(outElem1272, "visibility") ? (SVGStylable)outElem1272 : null;
        outElem1273 = document.getElementById("deelsysteemalarm_overdruk_veilige_ruimte_linker_buis");
        outStyle1273 = SvgUtils.isCssAttr(outElem1273, "visibility") ? (SVGStylable)outElem1273 : null;
        outElem1274 = document.getElementById("deelsysteemalarm_verlichting_veilige_ruimte_linker_buis");
        outStyle1274 = SvgUtils.isCssAttr(outElem1274, "visibility") ? (SVGStylable)outElem1274 : null;
        outElem1275 = document.getElementById("deelsysteemalarm_bluswatervoorziening_linker_buis");
        outStyle1275 = SvgUtils.isCssAttr(outElem1275, "visibility") ? (SVGStylable)outElem1275 : null;
        outElem1276 = document.getElementById("deelsysteemalarm_sensor_brand_blus_installatie_linker_buis");
        outStyle1276 = SvgUtils.isCssAttr(outElem1276, "visibility") ? (SVGStylable)outElem1276 : null;
        outElem1277 = document.getElementById("deelsysteemalarm_blus_pomp_linker_buis");
        outStyle1277 = SvgUtils.isCssAttr(outElem1277, "visibility") ? (SVGStylable)outElem1277 : null;
        outElem1278 = document.getElementById("deelsysteemalarm_vloeistofafvoer_linker_buis");
        outStyle1278 = SvgUtils.isCssAttr(outElem1278, "visibility") ? (SVGStylable)outElem1278 : null;
        outElem1279 = document.getElementById("deelsysteemalarm_midden_pomp_kelder_linker_buis");
        outStyle1279 = SvgUtils.isCssAttr(outElem1279, "visibility") ? (SVGStylable)outElem1279 : null;
        outElem1280 = document.getElementById("deelsysteemalarm_hoofd_pomp_kelder_1_linker_buis");
        outStyle1280 = SvgUtils.isCssAttr(outElem1280, "visibility") ? (SVGStylable)outElem1280 : null;
        outElem1281 = document.getElementById("deelsysteemalarm_hoofd_pomp_kelder_2_linker_buis");
        outStyle1281 = SvgUtils.isCssAttr(outElem1281, "visibility") ? (SVGStylable)outElem1281 : null;
        outElem1282 = document.getElementById("VRI_en_afsluitboom_deelsysteemalarm_linker_buis");
        outStyle1282 = SvgUtils.isCssAttr(outElem1282, "visibility") ? (SVGStylable)outElem1282 : null;
        outElem1283 = document.getElementById("VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_linker_buis");
        outStyle1283 = SvgUtils.isCssAttr(outElem1283, "visibility") ? (SVGStylable)outElem1283 : null;
        outElem1284 = document.getElementById("VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_linker_buis");
        outStyle1284 = SvgUtils.isCssAttr(outElem1284, "visibility") ? (SVGStylable)outElem1284 : null;
        outElem1285 = document.getElementById("deelsysteemalarm_sos_linker_buis");
        outStyle1285 = SvgUtils.isCssAttr(outElem1285, "visibility") ? (SVGStylable)outElem1285 : null;
        outElem1286 = document.getElementById("deelsysteemalarm_sos_sectie1_linker_buis");
        outStyle1286 = SvgUtils.isCssAttr(outElem1286, "visibility") ? (SVGStylable)outElem1286 : null;
        outElem1287 = document.getElementById("deelsysteemalarm_hulpposten_linker_buis");
        outStyle1287 = SvgUtils.isCssAttr(outElem1287, "visibility") ? (SVGStylable)outElem1287 : null;
        outElem1288 = document.getElementById("deelsysteemalarm_hulppostA_linker_buis");
        outStyle1288 = SvgUtils.isCssAttr(outElem1288, "visibility") ? (SVGStylable)outElem1288 : null;
        outElem1289 = document.getElementById("deelsysteemalarm_hulppostC_linker_buis");
        outStyle1289 = SvgUtils.isCssAttr(outElem1289, "visibility") ? (SVGStylable)outElem1289 : null;
        outElem1290 = document.getElementById("text_tab_detailplattegrond_actief");
        outStyle1290 = SvgUtils.isCssAttr(outElem1290, "fill") ? (SVGStylable)outElem1290 : null;
        outElem1291 = document.getElementById("text_tab_detailplattegrond_inactief");
        outStyle1291 = SvgUtils.isCssAttr(outElem1291, "fill") ? (SVGStylable)outElem1291 : null;
        outElem1292 = document.getElementById("text_tab_meldigen_actief");
        outStyle1292 = SvgUtils.isCssAttr(outElem1292, "fill") ? (SVGStylable)outElem1292 : null;
        outElem1293 = document.getElementById("text_tab_meldigen_inactief");
        outStyle1293 = SvgUtils.isCssAttr(outElem1293, "fill") ? (SVGStylable)outElem1293 : null;
        outElem1294 = document.getElementById("tab_detailplattegrond_inactief");
        outStyle1294 = SvgUtils.isCssAttr(outElem1294, "visibility") ? (SVGStylable)outElem1294 : null;
        outElem1295 = document.getElementById("tab_detailplattegrond_actief");
        outStyle1295 = SvgUtils.isCssAttr(outElem1295, "visibility") ? (SVGStylable)outElem1295 : null;
        outElem1296 = document.getElementById("tab_meldingen_actief");
        outStyle1296 = SvgUtils.isCssAttr(outElem1296, "visibility") ? (SVGStylable)outElem1296 : null;
        outElem1297 = document.getElementById("tab_meldingen_inactief");
        outStyle1297 = SvgUtils.isCssAttr(outElem1297, "visibility") ? (SVGStylable)outElem1297 : null;
        outElem1298 = document.getElementById("knoppen_meldingen_ingedrukt");
        outStyle1298 = SvgUtils.isCssAttr(outElem1298, "visibility") ? (SVGStylable)outElem1298 : null;
        outElem1299 = document.getElementById("knoppen_meldingen_ingedrukt_niet_bedienbaar");
        outStyle1299 = SvgUtils.isCssAttr(outElem1299, "visibility") ? (SVGStylable)outElem1299 : null;
        outElem1300 = document.getElementById("knoppen_meldingen_normaal_melding_scherm_open_klappen");
        outStyle1300 = SvgUtils.isCssAttr(outElem1300, "visibility") ? (SVGStylable)outElem1300 : null;
        outElem1301 = document.getElementById("knoppen_meldingen_niet_beschikbaar_melding_scherm_open_klappen");
        outStyle1301 = SvgUtils.isCssAttr(outElem1301, "visibility") ? (SVGStylable)outElem1301 : null;
        outElem1302 = document.getElementById("knoppen_meldingen_ingedrukt_melding_scherm_open_klappen");
        outStyle1302 = SvgUtils.isCssAttr(outElem1302, "visibility") ? (SVGStylable)outElem1302 : null;
        outElem1303 = document.getElementById("text_bevestigde_meldingen");
        outStyle1303 = SvgUtils.isCssAttr(outElem1303, "visibility") ? (SVGStylable)outElem1303 : null;
        outElem1304 = document.getElementById("text_bevestigde_meldingen");
        outStyle1304 = SvgUtils.isCssAttr(outElem1304, "fill") ? (SVGStylable)outElem1304 : null;
        outElem1305 = document.getElementById("titel_blok_meldingen_onbevestigde_meldingen");
        outStyle1305 = SvgUtils.isCssAttr(outElem1305, "visibility") ? (SVGStylable)outElem1305 : null;
        outElem1306 = document.getElementById("blok_meldingen_leeg_onbevestigde_meldingen6");
        outStyle1306 = SvgUtils.isCssAttr(outElem1306, "visibility") ? (SVGStylable)outElem1306 : null;
        outElem1307 = document.getElementById("blok_meldingen_leeg_onbevestigde_meldingen7");
        outStyle1307 = SvgUtils.isCssAttr(outElem1307, "visibility") ? (SVGStylable)outElem1307 : null;
        outElem1308 = document.getElementById("blok_meldingen_leeg_onbevestigde_meldingen8");
        outStyle1308 = SvgUtils.isCssAttr(outElem1308, "visibility") ? (SVGStylable)outElem1308 : null;
        outElem1309 = document.getElementById("blok_meldingen_leeg_onbevestigde_meldingen9");
        outStyle1309 = SvgUtils.isCssAttr(outElem1309, "visibility") ? (SVGStylable)outElem1309 : null;
        outElem1310 = document.getElementById("blok_meldingen_leeg_onbevestigde_meldingen10");
        outStyle1310 = SvgUtils.isCssAttr(outElem1310, "visibility") ? (SVGStylable)outElem1310 : null;
        outElem1311 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen1");
        outStyle1311 = SvgUtils.isCssAttr(outElem1311, "visibility") ? (SVGStylable)outElem1311 : null;
        outElem1312 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen2");
        outStyle1312 = SvgUtils.isCssAttr(outElem1312, "visibility") ? (SVGStylable)outElem1312 : null;
        outElem1313 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen3");
        outStyle1313 = SvgUtils.isCssAttr(outElem1313, "visibility") ? (SVGStylable)outElem1313 : null;
        outElem1314 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen4");
        outStyle1314 = SvgUtils.isCssAttr(outElem1314, "visibility") ? (SVGStylable)outElem1314 : null;
        outElem1315 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen5");
        outStyle1315 = SvgUtils.isCssAttr(outElem1315, "visibility") ? (SVGStylable)outElem1315 : null;
        outElem1316 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen6");
        outStyle1316 = SvgUtils.isCssAttr(outElem1316, "visibility") ? (SVGStylable)outElem1316 : null;
        outElem1317 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen7");
        outStyle1317 = SvgUtils.isCssAttr(outElem1317, "visibility") ? (SVGStylable)outElem1317 : null;
        outElem1318 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen8");
        outStyle1318 = SvgUtils.isCssAttr(outElem1318, "visibility") ? (SVGStylable)outElem1318 : null;
        outElem1319 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen9");
        outStyle1319 = SvgUtils.isCssAttr(outElem1319, "visibility") ? (SVGStylable)outElem1319 : null;
        outElem1320 = document.getElementById("blok_meldingen_leeg_bevestigde_meldingen10");
        outStyle1320 = SvgUtils.isCssAttr(outElem1320, "visibility") ? (SVGStylable)outElem1320 : null;
        outElem1321 = document.getElementById("blok_melding_bijbehorende_camera_sos_rechter_buis_onbevestigd");
        outText1321 = SvgUtils.getTextNode(outElem1321);
        outElem1322 = document.getElementById("blok_meldingen_bijbehorende_locatie_sos_rechter_buis_onbevestigd");
        outText1322 = SvgUtils.getTextNode(outElem1322);
        outElem1323 = document.getElementById("blok_meldingen_naam_melding_sos_rechter_buis_onbevestigd");
        outText1323 = SvgUtils.getTextNode(outElem1323);
        outElem1324 = document.getElementById("blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_onbevestigd");
        outStyle1324 = SvgUtils.isCssAttr(outElem1324, "visibility") ? (SVGStylable)outElem1324 : null;
        outElem1325 = document.getElementById("blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_onbevestigd");
        outStyle1325 = SvgUtils.isCssAttr(outElem1325, "visibility") ? (SVGStylable)outElem1325 : null;
        outElem1326 = document.getElementById("blok_meldingen_sos_rechter_buis_onbevestigd");
        outStyle1326 = SvgUtils.isCssAttr(outElem1326, "visibility") ? (SVGStylable)outElem1326 : null;
        outElem1327 = document.getElementById("blok_meldingen_achtergrond_sos_rechter_buis_onbevestigd");
        outStyle1327 = SvgUtils.isCssAttr(outElem1327, "fill") ? (SVGStylable)outElem1327 : null;
        outElem1328 = document.getElementById("knoppen_meldingen_niet_bedienbaar");
        outStyle1328 = SvgUtils.isCssAttr(outElem1328, "visibility") ? (SVGStylable)outElem1328 : null;
        outElem1329 = document.getElementById("knoppen_meldingen_normaal");
        outStyle1329 = SvgUtils.isCssAttr(outElem1329, "visibility") ? (SVGStylable)outElem1329 : null;
        outElem1330 = document.getElementById("image14051");
        outStyle1330 = SvgUtils.isCssAttr(outElem1330, "visibility") ? (SVGStylable)outElem1330 : null;
        outElem1331 = document.getElementById("blok_melding_bijbehorende_camera_sos_rechter_buis_bevestigd");
        outText1331 = SvgUtils.getTextNode(outElem1331);
        outElem1332 = document.getElementById("blok_meldingen_bijbehorende_locatie_sos_rechter_buis_bevestigd");
        outText1332 = SvgUtils.getTextNode(outElem1332);
        outElem1333 = document.getElementById("blok_meldingen_naam_melding_sos_rechter_buis_bevestigd");
        outText1333 = SvgUtils.getTextNode(outElem1333);
        outElem1334 = document.getElementById("blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_bevestigd");
        outStyle1334 = SvgUtils.isCssAttr(outElem1334, "visibility") ? (SVGStylable)outElem1334 : null;
        outElem1335 = document.getElementById("blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_bevestigd");
        outStyle1335 = SvgUtils.isCssAttr(outElem1335, "visibility") ? (SVGStylable)outElem1335 : null;
        outElem1336 = document.getElementById("blok_meldingen_sos_rechter_buis_bevestigd");
        outStyle1336 = SvgUtils.isCssAttr(outElem1336, "visibility") ? (SVGStylable)outElem1336 : null;
        outElem1337 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1");
        outStyle1337 = SvgUtils.isCssAttr(outElem1337, "width") ? (SVGStylable)outElem1337 : null;
        outElem1338 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2");
        outStyle1338 = SvgUtils.isCssAttr(outElem1338, "width") ? (SVGStylable)outElem1338 : null;
        outElem1339 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3");
        outStyle1339 = SvgUtils.isCssAttr(outElem1339, "width") ? (SVGStylable)outElem1339 : null;
        outElem1340 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1");
        outStyle1340 = SvgUtils.isCssAttr(outElem1340, "width") ? (SVGStylable)outElem1340 : null;
        outElem1341 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2");
        outStyle1341 = SvgUtils.isCssAttr(outElem1341, "width") ? (SVGStylable)outElem1341 : null;
        outElem1342 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3");
        outStyle1342 = SvgUtils.isCssAttr(outElem1342, "width") ? (SVGStylable)outElem1342 : null;
        outElem1343 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1");
        outStyle1343 = SvgUtils.isCssAttr(outElem1343, "transform") ? (SVGStylable)outElem1343 : null;
        outElem1344 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2");
        outStyle1344 = SvgUtils.isCssAttr(outElem1344, "transform") ? (SVGStylable)outElem1344 : null;
        outElem1345 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3");
        outStyle1345 = SvgUtils.isCssAttr(outElem1345, "transform") ? (SVGStylable)outElem1345 : null;
        outElem1346 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1");
        outStyle1346 = SvgUtils.isCssAttr(outElem1346, "transform") ? (SVGStylable)outElem1346 : null;
        outElem1347 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2");
        outStyle1347 = SvgUtils.isCssAttr(outElem1347, "transform") ? (SVGStylable)outElem1347 : null;
        outElem1348 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3");
        outStyle1348 = SvgUtils.isCssAttr(outElem1348, "transform") ? (SVGStylable)outElem1348 : null;
        outElem1349 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_1_rb_12");
        outStyle1349 = SvgUtils.isCssAttr(outElem1349, "transform") ? (SVGStylable)outElem1349 : null;
        outElem1350 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_1_rb_23");
        outStyle1350 = SvgUtils.isCssAttr(outElem1350, "transform") ? (SVGStylable)outElem1350 : null;
        outElem1351 = document.getElementById("detail_midden_tunnel_kanaal_sectie_1");
        outStyle1351 = SvgUtils.isCssAttr(outElem1351, "width") ? (SVGStylable)outElem1351 : null;
        outElem1352 = document.getElementById("detail_midden_tunnel_kanaal_sectie_1");
        outStyle1352 = SvgUtils.isCssAttr(outElem1352, "transform") ? (SVGStylable)outElem1352 : null;
        outElem1353 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1");
        outStyle1353 = SvgUtils.isCssAttr(outElem1353, "width") ? (SVGStylable)outElem1353 : null;
        outElem1354 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2");
        outStyle1354 = SvgUtils.isCssAttr(outElem1354, "width") ? (SVGStylable)outElem1354 : null;
        outElem1355 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3");
        outStyle1355 = SvgUtils.isCssAttr(outElem1355, "width") ? (SVGStylable)outElem1355 : null;
        outElem1356 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1");
        outStyle1356 = SvgUtils.isCssAttr(outElem1356, "width") ? (SVGStylable)outElem1356 : null;
        outElem1357 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2");
        outStyle1357 = SvgUtils.isCssAttr(outElem1357, "width") ? (SVGStylable)outElem1357 : null;
        outElem1358 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3");
        outStyle1358 = SvgUtils.isCssAttr(outElem1358, "width") ? (SVGStylable)outElem1358 : null;
        outElem1359 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1");
        outStyle1359 = SvgUtils.isCssAttr(outElem1359, "transform") ? (SVGStylable)outElem1359 : null;
        outElem1360 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2");
        outStyle1360 = SvgUtils.isCssAttr(outElem1360, "transform") ? (SVGStylable)outElem1360 : null;
        outElem1361 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3");
        outStyle1361 = SvgUtils.isCssAttr(outElem1361, "transform") ? (SVGStylable)outElem1361 : null;
        outElem1362 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1");
        outStyle1362 = SvgUtils.isCssAttr(outElem1362, "transform") ? (SVGStylable)outElem1362 : null;
        outElem1363 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2");
        outStyle1363 = SvgUtils.isCssAttr(outElem1363, "transform") ? (SVGStylable)outElem1363 : null;
        outElem1364 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3");
        outStyle1364 = SvgUtils.isCssAttr(outElem1364, "transform") ? (SVGStylable)outElem1364 : null;
        outElem1365 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_1_lb_12");
        outStyle1365 = SvgUtils.isCssAttr(outElem1365, "transform") ? (SVGStylable)outElem1365 : null;
        outElem1366 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_1_lb_23");
        outStyle1366 = SvgUtils.isCssAttr(outElem1366, "transform") ? (SVGStylable)outElem1366 : null;
        outElem1367 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1");
        outStyle1367 = SvgUtils.isCssAttr(outElem1367, "width") ? (SVGStylable)outElem1367 : null;
        outElem1368 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2");
        outStyle1368 = SvgUtils.isCssAttr(outElem1368, "width") ? (SVGStylable)outElem1368 : null;
        outElem1369 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3");
        outStyle1369 = SvgUtils.isCssAttr(outElem1369, "width") ? (SVGStylable)outElem1369 : null;
        outElem1370 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1");
        outStyle1370 = SvgUtils.isCssAttr(outElem1370, "width") ? (SVGStylable)outElem1370 : null;
        outElem1371 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2");
        outStyle1371 = SvgUtils.isCssAttr(outElem1371, "width") ? (SVGStylable)outElem1371 : null;
        outElem1372 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3");
        outStyle1372 = SvgUtils.isCssAttr(outElem1372, "width") ? (SVGStylable)outElem1372 : null;
        outElem1373 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1");
        outStyle1373 = SvgUtils.isCssAttr(outElem1373, "transform") ? (SVGStylable)outElem1373 : null;
        outElem1374 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2");
        outStyle1374 = SvgUtils.isCssAttr(outElem1374, "transform") ? (SVGStylable)outElem1374 : null;
        outElem1375 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3");
        outStyle1375 = SvgUtils.isCssAttr(outElem1375, "transform") ? (SVGStylable)outElem1375 : null;
        outElem1376 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1");
        outStyle1376 = SvgUtils.isCssAttr(outElem1376, "transform") ? (SVGStylable)outElem1376 : null;
        outElem1377 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2");
        outStyle1377 = SvgUtils.isCssAttr(outElem1377, "transform") ? (SVGStylable)outElem1377 : null;
        outElem1378 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3");
        outStyle1378 = SvgUtils.isCssAttr(outElem1378, "transform") ? (SVGStylable)outElem1378 : null;
        outElem1379 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1");
        outStyle1379 = SvgUtils.isCssAttr(outElem1379, "width") ? (SVGStylable)outElem1379 : null;
        outElem1380 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2");
        outStyle1380 = SvgUtils.isCssAttr(outElem1380, "width") ? (SVGStylable)outElem1380 : null;
        outElem1381 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3");
        outStyle1381 = SvgUtils.isCssAttr(outElem1381, "width") ? (SVGStylable)outElem1381 : null;
        outElem1382 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1");
        outStyle1382 = SvgUtils.isCssAttr(outElem1382, "width") ? (SVGStylable)outElem1382 : null;
        outElem1383 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2");
        outStyle1383 = SvgUtils.isCssAttr(outElem1383, "width") ? (SVGStylable)outElem1383 : null;
        outElem1384 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3");
        outStyle1384 = SvgUtils.isCssAttr(outElem1384, "width") ? (SVGStylable)outElem1384 : null;
        outElem1385 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1");
        outStyle1385 = SvgUtils.isCssAttr(outElem1385, "transform") ? (SVGStylable)outElem1385 : null;
        outElem1386 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2");
        outStyle1386 = SvgUtils.isCssAttr(outElem1386, "transform") ? (SVGStylable)outElem1386 : null;
        outElem1387 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3");
        outStyle1387 = SvgUtils.isCssAttr(outElem1387, "transform") ? (SVGStylable)outElem1387 : null;
        outElem1388 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1");
        outStyle1388 = SvgUtils.isCssAttr(outElem1388, "transform") ? (SVGStylable)outElem1388 : null;
        outElem1389 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2");
        outStyle1389 = SvgUtils.isCssAttr(outElem1389, "transform") ? (SVGStylable)outElem1389 : null;
        outElem1390 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3");
        outStyle1390 = SvgUtils.isCssAttr(outElem1390, "transform") ? (SVGStylable)outElem1390 : null;
        outElem1391 = document.getElementById("detail_plattegrond_verkeerslicht_uit_lb_1");
        outStyle1391 = SvgUtils.isCssAttr(outElem1391, "visibility") ? (SVGStylable)outElem1391 : null;
        outElem1392 = document.getElementById("detail_plattegrond_verkeerslicht_rood_lb_1");
        outStyle1392 = SvgUtils.isCssAttr(outElem1392, "visibility") ? (SVGStylable)outElem1392 : null;
        outElem1393 = document.getElementById("detail_plattegrond_verkeerslicht_oranje_lb_1");
        outStyle1393 = SvgUtils.isCssAttr(outElem1393, "visibility") ? (SVGStylable)outElem1393 : null;
        outElem1394 = document.getElementById("detail_plattegrond_verkeerslicht_uit_lb_2");
        outStyle1394 = SvgUtils.isCssAttr(outElem1394, "visibility") ? (SVGStylable)outElem1394 : null;
        outElem1395 = document.getElementById("detail_plattegrond_verkeerslicht_rood_lb_2");
        outStyle1395 = SvgUtils.isCssAttr(outElem1395, "visibility") ? (SVGStylable)outElem1395 : null;
        outElem1396 = document.getElementById("detail_plattegrond_verkeerslicht_oranje_lb_2");
        outStyle1396 = SvgUtils.isCssAttr(outElem1396, "visibility") ? (SVGStylable)outElem1396 : null;
        outElem1397 = document.getElementById("detail_plattegrond_verkeerslicht_uit_lb_3");
        outStyle1397 = SvgUtils.isCssAttr(outElem1397, "visibility") ? (SVGStylable)outElem1397 : null;
        outElem1398 = document.getElementById("detail_plattegrond_verkeerslicht_rood_lb_3");
        outStyle1398 = SvgUtils.isCssAttr(outElem1398, "visibility") ? (SVGStylable)outElem1398 : null;
        outElem1399 = document.getElementById("detail_plattegrond_verkeerslicht_oranje_lb_3");
        outStyle1399 = SvgUtils.isCssAttr(outElem1399, "visibility") ? (SVGStylable)outElem1399 : null;
        outElem1400 = document.getElementById("detail_plattegrond_afsluitboom_open_lb");
        outStyle1400 = SvgUtils.isCssAttr(outElem1400, "visibility") ? (SVGStylable)outElem1400 : null;
        outElem1401 = document.getElementById("detail_plattegrond_afsluitboom_in_beweging_lb");
        outStyle1401 = SvgUtils.isCssAttr(outElem1401, "visibility") ? (SVGStylable)outElem1401 : null;
        outElem1402 = document.getElementById("detail_plattegrond_afsluitboom_gesloten_lb");
        outStyle1402 = SvgUtils.isCssAttr(outElem1402, "visibility") ? (SVGStylable)outElem1402 : null;
        outElem1403 = document.getElementById("detail_plattegrond_actieve_camera_links1_sectie_1lb");
        outStyle1403 = SvgUtils.isCssAttr(outElem1403, "visibility") ? (SVGStylable)outElem1403 : null;
        outElem1404 = document.getElementById("detail_plattegrond_inactieve_camera_links1_sectie_1lb");
        outStyle1404 = SvgUtils.isCssAttr(outElem1404, "visibility") ? (SVGStylable)outElem1404 : null;
        outElem1405 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_1lb");
        outStyle1405 = SvgUtils.isCssAttr(outElem1405, "fill") ? (SVGStylable)outElem1405 : null;
        outElem1406 = document.getElementById("detail_plattegrond_actieve_camera_rechts6_sectie_1rb");
        outStyle1406 = SvgUtils.isCssAttr(outElem1406, "visibility") ? (SVGStylable)outElem1406 : null;
        outElem1407 = document.getElementById("detail_plattegrond_inactieve_camera_rechts6_sectie_1rb");
        outStyle1407 = SvgUtils.isCssAttr(outElem1407, "visibility") ? (SVGStylable)outElem1407 : null;
        outElem1408 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb");
        outStyle1408 = SvgUtils.isCssAttr(outElem1408, "fill") ? (SVGStylable)outElem1408 : null;
        outElem1409 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb");
        outText1409 = SvgUtils.getTextNode(outElem1409);
        outElem1410 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1");
        outStyle1410 = SvgUtils.isCssAttr(outElem1410, "width") ? (SVGStylable)outElem1410 : null;
        outElem1411 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2");
        outStyle1411 = SvgUtils.isCssAttr(outElem1411, "width") ? (SVGStylable)outElem1411 : null;
        outElem1412 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3");
        outStyle1412 = SvgUtils.isCssAttr(outElem1412, "width") ? (SVGStylable)outElem1412 : null;
        outElem1413 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1");
        outStyle1413 = SvgUtils.isCssAttr(outElem1413, "width") ? (SVGStylable)outElem1413 : null;
        outElem1414 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2");
        outStyle1414 = SvgUtils.isCssAttr(outElem1414, "width") ? (SVGStylable)outElem1414 : null;
        outElem1415 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3");
        outStyle1415 = SvgUtils.isCssAttr(outElem1415, "width") ? (SVGStylable)outElem1415 : null;
        outElem1416 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1");
        outStyle1416 = SvgUtils.isCssAttr(outElem1416, "transform") ? (SVGStylable)outElem1416 : null;
        outElem1417 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2");
        outStyle1417 = SvgUtils.isCssAttr(outElem1417, "transform") ? (SVGStylable)outElem1417 : null;
        outElem1418 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3");
        outStyle1418 = SvgUtils.isCssAttr(outElem1418, "transform") ? (SVGStylable)outElem1418 : null;
        outElem1419 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1");
        outStyle1419 = SvgUtils.isCssAttr(outElem1419, "transform") ? (SVGStylable)outElem1419 : null;
        outElem1420 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2");
        outStyle1420 = SvgUtils.isCssAttr(outElem1420, "transform") ? (SVGStylable)outElem1420 : null;
        outElem1421 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3");
        outStyle1421 = SvgUtils.isCssAttr(outElem1421, "transform") ? (SVGStylable)outElem1421 : null;
        outElem1422 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_2_rb_12");
        outStyle1422 = SvgUtils.isCssAttr(outElem1422, "transform") ? (SVGStylable)outElem1422 : null;
        outElem1423 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_2_rb_23");
        outStyle1423 = SvgUtils.isCssAttr(outElem1423, "transform") ? (SVGStylable)outElem1423 : null;
        outElem1424 = document.getElementById("detail_midden_tunnel_kanaal_sectie_2");
        outStyle1424 = SvgUtils.isCssAttr(outElem1424, "width") ? (SVGStylable)outElem1424 : null;
        outElem1425 = document.getElementById("detail_midden_tunnel_kanaal_sectie_2");
        outStyle1425 = SvgUtils.isCssAttr(outElem1425, "transform") ? (SVGStylable)outElem1425 : null;
        outElem1426 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1");
        outStyle1426 = SvgUtils.isCssAttr(outElem1426, "width") ? (SVGStylable)outElem1426 : null;
        outElem1427 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2");
        outStyle1427 = SvgUtils.isCssAttr(outElem1427, "width") ? (SVGStylable)outElem1427 : null;
        outElem1428 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3");
        outStyle1428 = SvgUtils.isCssAttr(outElem1428, "width") ? (SVGStylable)outElem1428 : null;
        outElem1429 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1");
        outStyle1429 = SvgUtils.isCssAttr(outElem1429, "width") ? (SVGStylable)outElem1429 : null;
        outElem1430 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2");
        outStyle1430 = SvgUtils.isCssAttr(outElem1430, "width") ? (SVGStylable)outElem1430 : null;
        outElem1431 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3");
        outStyle1431 = SvgUtils.isCssAttr(outElem1431, "width") ? (SVGStylable)outElem1431 : null;
        outElem1432 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1");
        outStyle1432 = SvgUtils.isCssAttr(outElem1432, "transform") ? (SVGStylable)outElem1432 : null;
        outElem1433 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2");
        outStyle1433 = SvgUtils.isCssAttr(outElem1433, "transform") ? (SVGStylable)outElem1433 : null;
        outElem1434 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3");
        outStyle1434 = SvgUtils.isCssAttr(outElem1434, "transform") ? (SVGStylable)outElem1434 : null;
        outElem1435 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1");
        outStyle1435 = SvgUtils.isCssAttr(outElem1435, "transform") ? (SVGStylable)outElem1435 : null;
        outElem1436 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2");
        outStyle1436 = SvgUtils.isCssAttr(outElem1436, "transform") ? (SVGStylable)outElem1436 : null;
        outElem1437 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3");
        outStyle1437 = SvgUtils.isCssAttr(outElem1437, "transform") ? (SVGStylable)outElem1437 : null;
        outElem1438 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_2_lb_12");
        outStyle1438 = SvgUtils.isCssAttr(outElem1438, "transform") ? (SVGStylable)outElem1438 : null;
        outElem1439 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_2_lb_23");
        outStyle1439 = SvgUtils.isCssAttr(outElem1439, "transform") ? (SVGStylable)outElem1439 : null;
        outElem1440 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1");
        outStyle1440 = SvgUtils.isCssAttr(outElem1440, "width") ? (SVGStylable)outElem1440 : null;
        outElem1441 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2");
        outStyle1441 = SvgUtils.isCssAttr(outElem1441, "width") ? (SVGStylable)outElem1441 : null;
        outElem1442 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3");
        outStyle1442 = SvgUtils.isCssAttr(outElem1442, "width") ? (SVGStylable)outElem1442 : null;
        outElem1443 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1");
        outStyle1443 = SvgUtils.isCssAttr(outElem1443, "width") ? (SVGStylable)outElem1443 : null;
        outElem1444 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2");
        outStyle1444 = SvgUtils.isCssAttr(outElem1444, "width") ? (SVGStylable)outElem1444 : null;
        outElem1445 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3");
        outStyle1445 = SvgUtils.isCssAttr(outElem1445, "width") ? (SVGStylable)outElem1445 : null;
        outElem1446 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1");
        outStyle1446 = SvgUtils.isCssAttr(outElem1446, "transform") ? (SVGStylable)outElem1446 : null;
        outElem1447 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2");
        outStyle1447 = SvgUtils.isCssAttr(outElem1447, "transform") ? (SVGStylable)outElem1447 : null;
        outElem1448 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3");
        outStyle1448 = SvgUtils.isCssAttr(outElem1448, "transform") ? (SVGStylable)outElem1448 : null;
        outElem1449 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1");
        outStyle1449 = SvgUtils.isCssAttr(outElem1449, "transform") ? (SVGStylable)outElem1449 : null;
        outElem1450 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2");
        outStyle1450 = SvgUtils.isCssAttr(outElem1450, "transform") ? (SVGStylable)outElem1450 : null;
        outElem1451 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3");
        outStyle1451 = SvgUtils.isCssAttr(outElem1451, "transform") ? (SVGStylable)outElem1451 : null;
        outElem1452 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1");
        outStyle1452 = SvgUtils.isCssAttr(outElem1452, "width") ? (SVGStylable)outElem1452 : null;
        outElem1453 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2");
        outStyle1453 = SvgUtils.isCssAttr(outElem1453, "width") ? (SVGStylable)outElem1453 : null;
        outElem1454 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3");
        outStyle1454 = SvgUtils.isCssAttr(outElem1454, "width") ? (SVGStylable)outElem1454 : null;
        outElem1455 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1");
        outStyle1455 = SvgUtils.isCssAttr(outElem1455, "width") ? (SVGStylable)outElem1455 : null;
        outElem1456 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2");
        outStyle1456 = SvgUtils.isCssAttr(outElem1456, "width") ? (SVGStylable)outElem1456 : null;
        outElem1457 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3");
        outStyle1457 = SvgUtils.isCssAttr(outElem1457, "width") ? (SVGStylable)outElem1457 : null;
        outElem1458 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1");
        outStyle1458 = SvgUtils.isCssAttr(outElem1458, "transform") ? (SVGStylable)outElem1458 : null;
        outElem1459 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2");
        outStyle1459 = SvgUtils.isCssAttr(outElem1459, "transform") ? (SVGStylable)outElem1459 : null;
        outElem1460 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3");
        outStyle1460 = SvgUtils.isCssAttr(outElem1460, "transform") ? (SVGStylable)outElem1460 : null;
        outElem1461 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1");
        outStyle1461 = SvgUtils.isCssAttr(outElem1461, "transform") ? (SVGStylable)outElem1461 : null;
        outElem1462 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2");
        outStyle1462 = SvgUtils.isCssAttr(outElem1462, "transform") ? (SVGStylable)outElem1462 : null;
        outElem1463 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3");
        outStyle1463 = SvgUtils.isCssAttr(outElem1463, "transform") ? (SVGStylable)outElem1463 : null;
        outElem1464 = document.getElementById("detail_plattegrond_actieve_camera_links1_sectie_2lb");
        outStyle1464 = SvgUtils.isCssAttr(outElem1464, "visibility") ? (SVGStylable)outElem1464 : null;
        outElem1465 = document.getElementById("detail_plattegrond_inactieve_camera_links1_sectie_2lb");
        outStyle1465 = SvgUtils.isCssAttr(outElem1465, "visibility") ? (SVGStylable)outElem1465 : null;
        outElem1466 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_2lb");
        outStyle1466 = SvgUtils.isCssAttr(outElem1466, "fill") ? (SVGStylable)outElem1466 : null;
        outElem1467 = document.getElementById("detail_plattegrond_actieve_camera_rechts6_sectie_2rb");
        outStyle1467 = SvgUtils.isCssAttr(outElem1467, "visibility") ? (SVGStylable)outElem1467 : null;
        outElem1468 = document.getElementById("detail_plattegrond_inactieve_camera_rechts6_sectie_2rb");
        outStyle1468 = SvgUtils.isCssAttr(outElem1468, "visibility") ? (SVGStylable)outElem1468 : null;
        outElem1469 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb");
        outStyle1469 = SvgUtils.isCssAttr(outElem1469, "fill") ? (SVGStylable)outElem1469 : null;
        outElem1470 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb");
        outText1470 = SvgUtils.getTextNode(outElem1470);
        outElem1471 = document.getElementById("detail_plattegrond_actieve_camera_links2_sectie_2lb");
        outStyle1471 = SvgUtils.isCssAttr(outElem1471, "visibility") ? (SVGStylable)outElem1471 : null;
        outElem1472 = document.getElementById("detail_plattegrond_inactieve_camera_links2_sectie_2lb");
        outStyle1472 = SvgUtils.isCssAttr(outElem1472, "visibility") ? (SVGStylable)outElem1472 : null;
        outElem1473 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb");
        outStyle1473 = SvgUtils.isCssAttr(outElem1473, "fill") ? (SVGStylable)outElem1473 : null;
        outElem1474 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb");
        outText1474 = SvgUtils.getTextNode(outElem1474);
        outElem1475 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer2_sectie_2lb");
        outText1475 = SvgUtils.getTextNode(outElem1475);
        outElem1476 = document.getElementById("detail_plattegrond_actieve_camera_links5_sectie_2rb");
        outStyle1476 = SvgUtils.isCssAttr(outElem1476, "visibility") ? (SVGStylable)outElem1476 : null;
        outElem1477 = document.getElementById("detail_plattegrond_inactieve_camera_links5_sectie_2rb");
        outStyle1477 = SvgUtils.isCssAttr(outElem1477, "visibility") ? (SVGStylable)outElem1477 : null;
        outElem1478 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb");
        outStyle1478 = SvgUtils.isCssAttr(outElem1478, "fill") ? (SVGStylable)outElem1478 : null;
        outElem1479 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb");
        outText1479 = SvgUtils.getTextNode(outElem1479);
        outElem1480 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer5_sectie_2rb");
        outText1480 = SvgUtils.getTextNode(outElem1480);
        outElem1481 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_3_rb_1");
        outStyle1481 = SvgUtils.isCssAttr(outElem1481, "transform") ? (SVGStylable)outElem1481 : null;
        outElem1482 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_3_rb_2");
        outStyle1482 = SvgUtils.isCssAttr(outElem1482, "transform") ? (SVGStylable)outElem1482 : null;
        outElem1483 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_3_rb_3");
        outStyle1483 = SvgUtils.isCssAttr(outElem1483, "transform") ? (SVGStylable)outElem1483 : null;
        outElem1484 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_3_rb_12");
        outStyle1484 = SvgUtils.isCssAttr(outElem1484, "transform") ? (SVGStylable)outElem1484 : null;
        outElem1485 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_3_rb_23");
        outStyle1485 = SvgUtils.isCssAttr(outElem1485, "transform") ? (SVGStylable)outElem1485 : null;
        outElem1486 = document.getElementById("detail_midden_tunnel_kanaal_sectie_3");
        outStyle1486 = SvgUtils.isCssAttr(outElem1486, "transform") ? (SVGStylable)outElem1486 : null;
        outElem1487 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_3_lb_1");
        outStyle1487 = SvgUtils.isCssAttr(outElem1487, "transform") ? (SVGStylable)outElem1487 : null;
        outElem1488 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_3_lb_2");
        outStyle1488 = SvgUtils.isCssAttr(outElem1488, "transform") ? (SVGStylable)outElem1488 : null;
        outElem1489 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_3_lb_3");
        outStyle1489 = SvgUtils.isCssAttr(outElem1489, "transform") ? (SVGStylable)outElem1489 : null;
        outElem1490 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_3_lb_12");
        outStyle1490 = SvgUtils.isCssAttr(outElem1490, "transform") ? (SVGStylable)outElem1490 : null;
        outElem1491 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_3_lb_23");
        outStyle1491 = SvgUtils.isCssAttr(outElem1491, "transform") ? (SVGStylable)outElem1491 : null;
        outElem1492 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_1");
        outStyle1492 = SvgUtils.isCssAttr(outElem1492, "transform") ? (SVGStylable)outElem1492 : null;
        outElem1493 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_2");
        outStyle1493 = SvgUtils.isCssAttr(outElem1493, "transform") ? (SVGStylable)outElem1493 : null;
        outElem1494 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_3");
        outStyle1494 = SvgUtils.isCssAttr(outElem1494, "transform") ? (SVGStylable)outElem1494 : null;
        outElem1495 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_1");
        outStyle1495 = SvgUtils.isCssAttr(outElem1495, "transform") ? (SVGStylable)outElem1495 : null;
        outElem1496 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_2");
        outStyle1496 = SvgUtils.isCssAttr(outElem1496, "transform") ? (SVGStylable)outElem1496 : null;
        outElem1497 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_3");
        outStyle1497 = SvgUtils.isCssAttr(outElem1497, "transform") ? (SVGStylable)outElem1497 : null;
        outElem1498 = document.getElementById("detail_plattegrond_actieve_camera_links2_sectie_3lb");
        outStyle1498 = SvgUtils.isCssAttr(outElem1498, "visibility") ? (SVGStylable)outElem1498 : null;
        outElem1499 = document.getElementById("detail_plattegrond_inactieve_camera_links2_sectie_3lb");
        outStyle1499 = SvgUtils.isCssAttr(outElem1499, "visibility") ? (SVGStylable)outElem1499 : null;
        outElem1500 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb");
        outStyle1500 = SvgUtils.isCssAttr(outElem1500, "fill") ? (SVGStylable)outElem1500 : null;
        outElem1501 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb");
        outText1501 = SvgUtils.getTextNode(outElem1501);
        outElem1502 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer2_sectie_3lb");
        outText1502 = SvgUtils.getTextNode(outElem1502);
        outElem1503 = document.getElementById("detail_plattegrond_actieve_camera_links5_sectie_3rb");
        outStyle1503 = SvgUtils.isCssAttr(outElem1503, "visibility") ? (SVGStylable)outElem1503 : null;
        outElem1504 = document.getElementById("detail_plattegrond_inactieve_camera_links5_sectie_3rb");
        outStyle1504 = SvgUtils.isCssAttr(outElem1504, "visibility") ? (SVGStylable)outElem1504 : null;
        outElem1505 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb");
        outStyle1505 = SvgUtils.isCssAttr(outElem1505, "fill") ? (SVGStylable)outElem1505 : null;
        outElem1506 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb");
        outText1506 = SvgUtils.getTextNode(outElem1506);
        outElem1507 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer5_sectie_3rb");
        outText1507 = SvgUtils.getTextNode(outElem1507);
        outElem1508 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_4_rb_1");
        outStyle1508 = SvgUtils.isCssAttr(outElem1508, "transform") ? (SVGStylable)outElem1508 : null;
        outElem1509 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_4_rb_2");
        outStyle1509 = SvgUtils.isCssAttr(outElem1509, "transform") ? (SVGStylable)outElem1509 : null;
        outElem1510 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_4_rb_3");
        outStyle1510 = SvgUtils.isCssAttr(outElem1510, "transform") ? (SVGStylable)outElem1510 : null;
        outElem1511 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_4_rb_12");
        outStyle1511 = SvgUtils.isCssAttr(outElem1511, "transform") ? (SVGStylable)outElem1511 : null;
        outElem1512 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_4_rb_23");
        outStyle1512 = SvgUtils.isCssAttr(outElem1512, "transform") ? (SVGStylable)outElem1512 : null;
        outElem1513 = document.getElementById("detail_midden_tunnel_kanaal_sectie_4");
        outStyle1513 = SvgUtils.isCssAttr(outElem1513, "transform") ? (SVGStylable)outElem1513 : null;
        outElem1514 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_4_lb_1");
        outStyle1514 = SvgUtils.isCssAttr(outElem1514, "transform") ? (SVGStylable)outElem1514 : null;
        outElem1515 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_4_lb_2");
        outStyle1515 = SvgUtils.isCssAttr(outElem1515, "transform") ? (SVGStylable)outElem1515 : null;
        outElem1516 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_4_lb_3");
        outStyle1516 = SvgUtils.isCssAttr(outElem1516, "transform") ? (SVGStylable)outElem1516 : null;
        outElem1517 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_4_lb_12");
        outStyle1517 = SvgUtils.isCssAttr(outElem1517, "transform") ? (SVGStylable)outElem1517 : null;
        outElem1518 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_4_lb_23");
        outStyle1518 = SvgUtils.isCssAttr(outElem1518, "transform") ? (SVGStylable)outElem1518 : null;
        outElem1519 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_1");
        outStyle1519 = SvgUtils.isCssAttr(outElem1519, "transform") ? (SVGStylable)outElem1519 : null;
        outElem1520 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_2");
        outStyle1520 = SvgUtils.isCssAttr(outElem1520, "transform") ? (SVGStylable)outElem1520 : null;
        outElem1521 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_3");
        outStyle1521 = SvgUtils.isCssAttr(outElem1521, "transform") ? (SVGStylable)outElem1521 : null;
        outElem1522 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_1");
        outStyle1522 = SvgUtils.isCssAttr(outElem1522, "transform") ? (SVGStylable)outElem1522 : null;
        outElem1523 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_2");
        outStyle1523 = SvgUtils.isCssAttr(outElem1523, "transform") ? (SVGStylable)outElem1523 : null;
        outElem1524 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_3");
        outStyle1524 = SvgUtils.isCssAttr(outElem1524, "transform") ? (SVGStylable)outElem1524 : null;
        outElem1525 = document.getElementById("detail_plattegrond_actieve_camera_rechts3_sectie_4lb");
        outStyle1525 = SvgUtils.isCssAttr(outElem1525, "visibility") ? (SVGStylable)outElem1525 : null;
        outElem1526 = document.getElementById("detail_plattegrond_inactieve_camera_rechts3_sectie_4lb");
        outStyle1526 = SvgUtils.isCssAttr(outElem1526, "visibility") ? (SVGStylable)outElem1526 : null;
        outElem1527 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb");
        outStyle1527 = SvgUtils.isCssAttr(outElem1527, "fill") ? (SVGStylable)outElem1527 : null;
        outElem1528 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb");
        outText1528 = SvgUtils.getTextNode(outElem1528);
        outElem1529 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer3_sectie_4lb");
        outText1529 = SvgUtils.getTextNode(outElem1529);
        outElem1530 = document.getElementById("detail_plattegrond_actieve_camera_rechts4_sectie_4rb");
        outStyle1530 = SvgUtils.isCssAttr(outElem1530, "visibility") ? (SVGStylable)outElem1530 : null;
        outElem1531 = document.getElementById("detail_plattegrond_inactieve_camera_rechts4_sectie_4rb");
        outStyle1531 = SvgUtils.isCssAttr(outElem1531, "visibility") ? (SVGStylable)outElem1531 : null;
        outElem1532 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb");
        outStyle1532 = SvgUtils.isCssAttr(outElem1532, "fill") ? (SVGStylable)outElem1532 : null;
        outElem1533 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb");
        outText1533 = SvgUtils.getTextNode(outElem1533);
        outElem1534 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer4_sectie_4rb");
        outText1534 = SvgUtils.getTextNode(outElem1534);
        outElem1535 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_4_rb");
        outStyle1535 = SvgUtils.isCssAttr(outElem1535, "visibility") ? (SVGStylable)outElem1535 : null;
        outElem1536 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_4_rb");
        outStyle1536 = SvgUtils.isCssAttr(outElem1536, "visibility") ? (SVGStylable)outElem1536 : null;
        outElem1537 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_4_lb");
        outStyle1537 = SvgUtils.isCssAttr(outElem1537, "visibility") ? (SVGStylable)outElem1537 : null;
        outElem1538 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_4_lb");
        outStyle1538 = SvgUtils.isCssAttr(outElem1538, "visibility") ? (SVGStylable)outElem1538 : null;
        outElem1539 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_4_rb");
        outStyle1539 = SvgUtils.isCssAttr(outElem1539, "visibility") ? (SVGStylable)outElem1539 : null;
        outElem1540 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_4_rb");
        outStyle1540 = SvgUtils.isCssAttr(outElem1540, "visibility") ? (SVGStylable)outElem1540 : null;
        outElem1541 = document.getElementById("detail_plattegrond_hulppostkast_brandslangA_sectie_4_rb");
        outStyle1541 = SvgUtils.isCssAttr(outElem1541, "visibility") ? (SVGStylable)outElem1541 : null;
        outElem1542 = document.getElementById("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_4_rb");
        outStyle1542 = SvgUtils.isCssAttr(outElem1542, "visibility") ? (SVGStylable)outElem1542 : null;
        outElem1543 = document.getElementById("detail_plattegrond_hulppostkast_handblusserA_sectie_4_rb");
        outStyle1543 = SvgUtils.isCssAttr(outElem1543, "visibility") ? (SVGStylable)outElem1543 : null;
        outElem1544 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_4_rb");
        outStyle1544 = SvgUtils.isCssAttr(outElem1544, "visibility") ? (SVGStylable)outElem1544 : null;
        outElem1545 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_4_rb");
        outStyle1545 = SvgUtils.isCssAttr(outElem1545, "visibility") ? (SVGStylable)outElem1545 : null;
        outElem1546 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_4_rb");
        outStyle1546 = SvgUtils.isCssAttr(outElem1546, "visibility") ? (SVGStylable)outElem1546 : null;
        outElem1547 = document.getElementById("detail_plattegrond_hulppostkast_handblusserC_sectie_4_rb");
        outStyle1547 = SvgUtils.isCssAttr(outElem1547, "visibility") ? (SVGStylable)outElem1547 : null;
        outElem1548 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_4_rb");
        outStyle1548 = SvgUtils.isCssAttr(outElem1548, "visibility") ? (SVGStylable)outElem1548 : null;
        outElem1549 = document.getElementById("detail_plattegrond_sos_detectie_sectie_4rb");
        outStyle1549 = SvgUtils.isCssAttr(outElem1549, "visibility") ? (SVGStylable)outElem1549 : null;
        outElem1550 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_5_rb_1");
        outStyle1550 = SvgUtils.isCssAttr(outElem1550, "transform") ? (SVGStylable)outElem1550 : null;
        outElem1551 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_5_rb_2");
        outStyle1551 = SvgUtils.isCssAttr(outElem1551, "transform") ? (SVGStylable)outElem1551 : null;
        outElem1552 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_5_rb_3");
        outStyle1552 = SvgUtils.isCssAttr(outElem1552, "transform") ? (SVGStylable)outElem1552 : null;
        outElem1553 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_5_rb_12");
        outStyle1553 = SvgUtils.isCssAttr(outElem1553, "transform") ? (SVGStylable)outElem1553 : null;
        outElem1554 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_5_rb_23");
        outStyle1554 = SvgUtils.isCssAttr(outElem1554, "transform") ? (SVGStylable)outElem1554 : null;
        outElem1555 = document.getElementById("detail_midden_tunnel_kanaal_sectie_5");
        outStyle1555 = SvgUtils.isCssAttr(outElem1555, "transform") ? (SVGStylable)outElem1555 : null;
        outElem1556 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_5_lb_1");
        outStyle1556 = SvgUtils.isCssAttr(outElem1556, "transform") ? (SVGStylable)outElem1556 : null;
        outElem1557 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_5_lb_2");
        outStyle1557 = SvgUtils.isCssAttr(outElem1557, "transform") ? (SVGStylable)outElem1557 : null;
        outElem1558 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_5_lb_3");
        outStyle1558 = SvgUtils.isCssAttr(outElem1558, "transform") ? (SVGStylable)outElem1558 : null;
        outElem1559 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_5_lb_12");
        outStyle1559 = SvgUtils.isCssAttr(outElem1559, "transform") ? (SVGStylable)outElem1559 : null;
        outElem1560 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_5_lb_23");
        outStyle1560 = SvgUtils.isCssAttr(outElem1560, "transform") ? (SVGStylable)outElem1560 : null;
        outElem1561 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_1");
        outStyle1561 = SvgUtils.isCssAttr(outElem1561, "transform") ? (SVGStylable)outElem1561 : null;
        outElem1562 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_2");
        outStyle1562 = SvgUtils.isCssAttr(outElem1562, "transform") ? (SVGStylable)outElem1562 : null;
        outElem1563 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_3");
        outStyle1563 = SvgUtils.isCssAttr(outElem1563, "transform") ? (SVGStylable)outElem1563 : null;
        outElem1564 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_1");
        outStyle1564 = SvgUtils.isCssAttr(outElem1564, "transform") ? (SVGStylable)outElem1564 : null;
        outElem1565 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_2");
        outStyle1565 = SvgUtils.isCssAttr(outElem1565, "transform") ? (SVGStylable)outElem1565 : null;
        outElem1566 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_3");
        outStyle1566 = SvgUtils.isCssAttr(outElem1566, "transform") ? (SVGStylable)outElem1566 : null;
        outElem1567 = document.getElementById("detail_plattegrond_actieve_camera_rechts3_sectie_5lb");
        outStyle1567 = SvgUtils.isCssAttr(outElem1567, "visibility") ? (SVGStylable)outElem1567 : null;
        outElem1568 = document.getElementById("detail_plattegrond_inactieve_camera_rechts3_sectie_5lb");
        outStyle1568 = SvgUtils.isCssAttr(outElem1568, "visibility") ? (SVGStylable)outElem1568 : null;
        outElem1569 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb");
        outStyle1569 = SvgUtils.isCssAttr(outElem1569, "fill") ? (SVGStylable)outElem1569 : null;
        outElem1570 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb");
        outText1570 = SvgUtils.getTextNode(outElem1570);
        outElem1571 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer3_sectie_5lb");
        outText1571 = SvgUtils.getTextNode(outElem1571);
        outElem1572 = document.getElementById("detail_plattegrond_actieve_camera_rechts4_sectie_5rb");
        outStyle1572 = SvgUtils.isCssAttr(outElem1572, "visibility") ? (SVGStylable)outElem1572 : null;
        outElem1573 = document.getElementById("detail_plattegrond_inactieve_camera_rechts4_sectie_5rb");
        outStyle1573 = SvgUtils.isCssAttr(outElem1573, "visibility") ? (SVGStylable)outElem1573 : null;
        outElem1574 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb");
        outStyle1574 = SvgUtils.isCssAttr(outElem1574, "fill") ? (SVGStylable)outElem1574 : null;
        outElem1575 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb");
        outText1575 = SvgUtils.getTextNode(outElem1575);
        outElem1576 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer4_sectie_5rb");
        outText1576 = SvgUtils.getTextNode(outElem1576);
        outElem1577 = document.getElementById("detail_plattegrond_actieve_camera_links4_sectie_5lb");
        outStyle1577 = SvgUtils.isCssAttr(outElem1577, "visibility") ? (SVGStylable)outElem1577 : null;
        outElem1578 = document.getElementById("detail_plattegrond_inactieve_camera_links4_sectie_5lb");
        outStyle1578 = SvgUtils.isCssAttr(outElem1578, "visibility") ? (SVGStylable)outElem1578 : null;
        outElem1579 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb");
        outStyle1579 = SvgUtils.isCssAttr(outElem1579, "fill") ? (SVGStylable)outElem1579 : null;
        outElem1580 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb");
        outText1580 = SvgUtils.getTextNode(outElem1580);
        outElem1581 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer4_sectie_5lb");
        outText1581 = SvgUtils.getTextNode(outElem1581);
        outElem1582 = document.getElementById("detail_plattegrond_actieve_camera_links3_sectie_5rb");
        outStyle1582 = SvgUtils.isCssAttr(outElem1582, "visibility") ? (SVGStylable)outElem1582 : null;
        outElem1583 = document.getElementById("detail_plattegrond_inactieve_camera_links3_sectie_5rb");
        outStyle1583 = SvgUtils.isCssAttr(outElem1583, "visibility") ? (SVGStylable)outElem1583 : null;
        outElem1584 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb");
        outStyle1584 = SvgUtils.isCssAttr(outElem1584, "fill") ? (SVGStylable)outElem1584 : null;
        outElem1585 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb");
        outText1585 = SvgUtils.getTextNode(outElem1585);
        outElem1586 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer3_sectie_5rb");
        outText1586 = SvgUtils.getTextNode(outElem1586);
        outElem1587 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_5_rb");
        outStyle1587 = SvgUtils.isCssAttr(outElem1587, "visibility") ? (SVGStylable)outElem1587 : null;
        outElem1588 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_5_rb");
        outStyle1588 = SvgUtils.isCssAttr(outElem1588, "visibility") ? (SVGStylable)outElem1588 : null;
        outElem1589 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_5_lb");
        outStyle1589 = SvgUtils.isCssAttr(outElem1589, "visibility") ? (SVGStylable)outElem1589 : null;
        outElem1590 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_5_lb");
        outStyle1590 = SvgUtils.isCssAttr(outElem1590, "visibility") ? (SVGStylable)outElem1590 : null;
        outElem1591 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_rb");
        outStyle1591 = SvgUtils.isCssAttr(outElem1591, "visibility") ? (SVGStylable)outElem1591 : null;
        outElem1592 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_rb");
        outStyle1592 = SvgUtils.isCssAttr(outElem1592, "visibility") ? (SVGStylable)outElem1592 : null;
        outElem1593 = document.getElementById("detail_plattegrond_hulppostkast_brandslangA_sectie_5_rb");
        outStyle1593 = SvgUtils.isCssAttr(outElem1593, "visibility") ? (SVGStylable)outElem1593 : null;
        outElem1594 = document.getElementById("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_rb");
        outStyle1594 = SvgUtils.isCssAttr(outElem1594, "visibility") ? (SVGStylable)outElem1594 : null;
        outElem1595 = document.getElementById("detail_plattegrond_hulppostkast_handblusserA_sectie_5_rb");
        outStyle1595 = SvgUtils.isCssAttr(outElem1595, "visibility") ? (SVGStylable)outElem1595 : null;
        outElem1596 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_rb");
        outStyle1596 = SvgUtils.isCssAttr(outElem1596, "visibility") ? (SVGStylable)outElem1596 : null;
        outElem1597 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_lb");
        outStyle1597 = SvgUtils.isCssAttr(outElem1597, "visibility") ? (SVGStylable)outElem1597 : null;
        outElem1598 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_lb");
        outStyle1598 = SvgUtils.isCssAttr(outElem1598, "visibility") ? (SVGStylable)outElem1598 : null;
        outElem1599 = document.getElementById("detail_plattegrond_hulppostkast_brandslangA_sectie_5_lb");
        outStyle1599 = SvgUtils.isCssAttr(outElem1599, "visibility") ? (SVGStylable)outElem1599 : null;
        outElem1600 = document.getElementById("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_lb");
        outStyle1600 = SvgUtils.isCssAttr(outElem1600, "visibility") ? (SVGStylable)outElem1600 : null;
        outElem1601 = document.getElementById("detail_plattegrond_hulppostkast_handblusserA_sectie_5_lb");
        outStyle1601 = SvgUtils.isCssAttr(outElem1601, "visibility") ? (SVGStylable)outElem1601 : null;
        outElem1602 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_lb");
        outStyle1602 = SvgUtils.isCssAttr(outElem1602, "visibility") ? (SVGStylable)outElem1602 : null;
        outElem1603 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_rb");
        outStyle1603 = SvgUtils.isCssAttr(outElem1603, "visibility") ? (SVGStylable)outElem1603 : null;
        outElem1604 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_rb");
        outStyle1604 = SvgUtils.isCssAttr(outElem1604, "visibility") ? (SVGStylable)outElem1604 : null;
        outElem1605 = document.getElementById("detail_plattegrond_hulppostkast_handblusserC_sectie_5_rb");
        outStyle1605 = SvgUtils.isCssAttr(outElem1605, "visibility") ? (SVGStylable)outElem1605 : null;
        outElem1606 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_rb");
        outStyle1606 = SvgUtils.isCssAttr(outElem1606, "visibility") ? (SVGStylable)outElem1606 : null;
        outElem1607 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_lb");
        outStyle1607 = SvgUtils.isCssAttr(outElem1607, "visibility") ? (SVGStylable)outElem1607 : null;
        outElem1608 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_lb");
        outStyle1608 = SvgUtils.isCssAttr(outElem1608, "visibility") ? (SVGStylable)outElem1608 : null;
        outElem1609 = document.getElementById("detail_plattegrond_hulppostkast_handblusserC_sectie_5_lb");
        outStyle1609 = SvgUtils.isCssAttr(outElem1609, "visibility") ? (SVGStylable)outElem1609 : null;
        outElem1610 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_lb");
        outStyle1610 = SvgUtils.isCssAttr(outElem1610, "visibility") ? (SVGStylable)outElem1610 : null;
        outElem1611 = document.getElementById("detail_plattegrond_sos_detectie_sectie_5rb");
        outStyle1611 = SvgUtils.isCssAttr(outElem1611, "visibility") ? (SVGStylable)outElem1611 : null;
        outElem1612 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_6_rb_1");
        outStyle1612 = SvgUtils.isCssAttr(outElem1612, "transform") ? (SVGStylable)outElem1612 : null;
        outElem1613 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_6_rb_2");
        outStyle1613 = SvgUtils.isCssAttr(outElem1613, "transform") ? (SVGStylable)outElem1613 : null;
        outElem1614 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_6_rb_3");
        outStyle1614 = SvgUtils.isCssAttr(outElem1614, "transform") ? (SVGStylable)outElem1614 : null;
        outElem1615 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_6_rb_12");
        outStyle1615 = SvgUtils.isCssAttr(outElem1615, "transform") ? (SVGStylable)outElem1615 : null;
        outElem1616 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_6_rb_23");
        outStyle1616 = SvgUtils.isCssAttr(outElem1616, "transform") ? (SVGStylable)outElem1616 : null;
        outElem1617 = document.getElementById("detail_midden_tunnel_kanaal_sectie_6");
        outStyle1617 = SvgUtils.isCssAttr(outElem1617, "transform") ? (SVGStylable)outElem1617 : null;
        outElem1618 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_6_lb_1");
        outStyle1618 = SvgUtils.isCssAttr(outElem1618, "transform") ? (SVGStylable)outElem1618 : null;
        outElem1619 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_6_lb_2");
        outStyle1619 = SvgUtils.isCssAttr(outElem1619, "transform") ? (SVGStylable)outElem1619 : null;
        outElem1620 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_6_lb_3");
        outStyle1620 = SvgUtils.isCssAttr(outElem1620, "transform") ? (SVGStylable)outElem1620 : null;
        outElem1621 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_6_lb_12");
        outStyle1621 = SvgUtils.isCssAttr(outElem1621, "transform") ? (SVGStylable)outElem1621 : null;
        outElem1622 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_6_lb_23");
        outStyle1622 = SvgUtils.isCssAttr(outElem1622, "transform") ? (SVGStylable)outElem1622 : null;
        outElem1623 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_1");
        outStyle1623 = SvgUtils.isCssAttr(outElem1623, "transform") ? (SVGStylable)outElem1623 : null;
        outElem1624 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_2");
        outStyle1624 = SvgUtils.isCssAttr(outElem1624, "transform") ? (SVGStylable)outElem1624 : null;
        outElem1625 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_3");
        outStyle1625 = SvgUtils.isCssAttr(outElem1625, "transform") ? (SVGStylable)outElem1625 : null;
        outElem1626 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_1");
        outStyle1626 = SvgUtils.isCssAttr(outElem1626, "transform") ? (SVGStylable)outElem1626 : null;
        outElem1627 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_2");
        outStyle1627 = SvgUtils.isCssAttr(outElem1627, "transform") ? (SVGStylable)outElem1627 : null;
        outElem1628 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_3");
        outStyle1628 = SvgUtils.isCssAttr(outElem1628, "transform") ? (SVGStylable)outElem1628 : null;
        outElem1629 = document.getElementById("detail_plattegrond_actieve_camera_links4_sectie_6lb");
        outStyle1629 = SvgUtils.isCssAttr(outElem1629, "visibility") ? (SVGStylable)outElem1629 : null;
        outElem1630 = document.getElementById("detail_plattegrond_inactieve_camera_links4_sectie_6lb");
        outStyle1630 = SvgUtils.isCssAttr(outElem1630, "visibility") ? (SVGStylable)outElem1630 : null;
        outElem1631 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb");
        outStyle1631 = SvgUtils.isCssAttr(outElem1631, "fill") ? (SVGStylable)outElem1631 : null;
        outElem1632 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb");
        outText1632 = SvgUtils.getTextNode(outElem1632);
        outElem1633 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer4_sectie_6lb");
        outText1633 = SvgUtils.getTextNode(outElem1633);
        outElem1634 = document.getElementById("detail_plattegrond_actieve_camera_links3_sectie_6rb");
        outStyle1634 = SvgUtils.isCssAttr(outElem1634, "visibility") ? (SVGStylable)outElem1634 : null;
        outElem1635 = document.getElementById("detail_plattegrond_inactieve_camera_links3_sectie_6rb");
        outStyle1635 = SvgUtils.isCssAttr(outElem1635, "visibility") ? (SVGStylable)outElem1635 : null;
        outElem1636 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb");
        outStyle1636 = SvgUtils.isCssAttr(outElem1636, "fill") ? (SVGStylable)outElem1636 : null;
        outElem1637 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb");
        outText1637 = SvgUtils.getTextNode(outElem1637);
        outElem1638 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer3_sectie_6rb");
        outText1638 = SvgUtils.getTextNode(outElem1638);
        outElem1639 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_6_rb");
        outStyle1639 = SvgUtils.isCssAttr(outElem1639, "visibility") ? (SVGStylable)outElem1639 : null;
        outElem1640 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_6_rb");
        outStyle1640 = SvgUtils.isCssAttr(outElem1640, "visibility") ? (SVGStylable)outElem1640 : null;
        outElem1641 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_6_lb");
        outStyle1641 = SvgUtils.isCssAttr(outElem1641, "visibility") ? (SVGStylable)outElem1641 : null;
        outElem1642 = document.getElementById("detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_6_lb");
        outStyle1642 = SvgUtils.isCssAttr(outElem1642, "visibility") ? (SVGStylable)outElem1642 : null;
        outElem1643 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonA_sectie_6_lb");
        outStyle1643 = SvgUtils.isCssAttr(outElem1643, "visibility") ? (SVGStylable)outElem1643 : null;
        outElem1644 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_6_lb");
        outStyle1644 = SvgUtils.isCssAttr(outElem1644, "visibility") ? (SVGStylable)outElem1644 : null;
        outElem1645 = document.getElementById("detail_plattegrond_hulppostkast_brandslangA_sectie_6_lb");
        outStyle1645 = SvgUtils.isCssAttr(outElem1645, "visibility") ? (SVGStylable)outElem1645 : null;
        outElem1646 = document.getElementById("detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_6_lb");
        outStyle1646 = SvgUtils.isCssAttr(outElem1646, "visibility") ? (SVGStylable)outElem1646 : null;
        outElem1647 = document.getElementById("detail_plattegrond_hulppostkast_handblusserA_sectie_6_lb");
        outStyle1647 = SvgUtils.isCssAttr(outElem1647, "visibility") ? (SVGStylable)outElem1647 : null;
        outElem1648 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_6_lb");
        outStyle1648 = SvgUtils.isCssAttr(outElem1648, "visibility") ? (SVGStylable)outElem1648 : null;
        outElem1649 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoonC_sectie_6_lb");
        outStyle1649 = SvgUtils.isCssAttr(outElem1649, "visibility") ? (SVGStylable)outElem1649 : null;
        outElem1650 = document.getElementById("detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_6_lb");
        outStyle1650 = SvgUtils.isCssAttr(outElem1650, "visibility") ? (SVGStylable)outElem1650 : null;
        outElem1651 = document.getElementById("detail_plattegrond_hulppostkast_handblusserC_sectie_6_lb");
        outStyle1651 = SvgUtils.isCssAttr(outElem1651, "visibility") ? (SVGStylable)outElem1651 : null;
        outElem1652 = document.getElementById("detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_6_lb");
        outStyle1652 = SvgUtils.isCssAttr(outElem1652, "visibility") ? (SVGStylable)outElem1652 : null;
        outElem1653 = document.getElementById("detail_plattegrond_sos_detectie_sectie_6rb");
        outStyle1653 = SvgUtils.isCssAttr(outElem1653, "visibility") ? (SVGStylable)outElem1653 : null;
        outElem1654 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_7_rb_1");
        outStyle1654 = SvgUtils.isCssAttr(outElem1654, "transform") ? (SVGStylable)outElem1654 : null;
        outElem1655 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_7_rb_2");
        outStyle1655 = SvgUtils.isCssAttr(outElem1655, "transform") ? (SVGStylable)outElem1655 : null;
        outElem1656 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_7_rb_3");
        outStyle1656 = SvgUtils.isCssAttr(outElem1656, "transform") ? (SVGStylable)outElem1656 : null;
        outElem1657 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_7_rb_12");
        outStyle1657 = SvgUtils.isCssAttr(outElem1657, "transform") ? (SVGStylable)outElem1657 : null;
        outElem1658 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_7_rb_23");
        outStyle1658 = SvgUtils.isCssAttr(outElem1658, "transform") ? (SVGStylable)outElem1658 : null;
        outElem1659 = document.getElementById("detail_midden_tunnel_kanaal_sectie_7");
        outStyle1659 = SvgUtils.isCssAttr(outElem1659, "transform") ? (SVGStylable)outElem1659 : null;
        outElem1660 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_7_lb_1");
        outStyle1660 = SvgUtils.isCssAttr(outElem1660, "transform") ? (SVGStylable)outElem1660 : null;
        outElem1661 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_7_lb_2");
        outStyle1661 = SvgUtils.isCssAttr(outElem1661, "transform") ? (SVGStylable)outElem1661 : null;
        outElem1662 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_7_lb_3");
        outStyle1662 = SvgUtils.isCssAttr(outElem1662, "transform") ? (SVGStylable)outElem1662 : null;
        outElem1663 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_7_lb_12");
        outStyle1663 = SvgUtils.isCssAttr(outElem1663, "transform") ? (SVGStylable)outElem1663 : null;
        outElem1664 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_7_lb_23");
        outStyle1664 = SvgUtils.isCssAttr(outElem1664, "transform") ? (SVGStylable)outElem1664 : null;
        outElem1665 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_1");
        outStyle1665 = SvgUtils.isCssAttr(outElem1665, "transform") ? (SVGStylable)outElem1665 : null;
        outElem1666 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_2");
        outStyle1666 = SvgUtils.isCssAttr(outElem1666, "transform") ? (SVGStylable)outElem1666 : null;
        outElem1667 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_3");
        outStyle1667 = SvgUtils.isCssAttr(outElem1667, "transform") ? (SVGStylable)outElem1667 : null;
        outElem1668 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_1");
        outStyle1668 = SvgUtils.isCssAttr(outElem1668, "transform") ? (SVGStylable)outElem1668 : null;
        outElem1669 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_2");
        outStyle1669 = SvgUtils.isCssAttr(outElem1669, "transform") ? (SVGStylable)outElem1669 : null;
        outElem1670 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_3");
        outStyle1670 = SvgUtils.isCssAttr(outElem1670, "transform") ? (SVGStylable)outElem1670 : null;
        outElem1671 = document.getElementById("detail_plattegrond_actieve_camera_rechts5_sectie_7lb");
        outStyle1671 = SvgUtils.isCssAttr(outElem1671, "visibility") ? (SVGStylable)outElem1671 : null;
        outElem1672 = document.getElementById("detail_plattegrond_inactieve_camera_rechts5_sectie_7lb");
        outStyle1672 = SvgUtils.isCssAttr(outElem1672, "visibility") ? (SVGStylable)outElem1672 : null;
        outElem1673 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb");
        outStyle1673 = SvgUtils.isCssAttr(outElem1673, "fill") ? (SVGStylable)outElem1673 : null;
        outElem1674 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb");
        outText1674 = SvgUtils.getTextNode(outElem1674);
        outElem1675 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer5_sectie_7lb");
        outText1675 = SvgUtils.getTextNode(outElem1675);
        outElem1676 = document.getElementById("detail_plattegrond_actieve_camera_rechts2_sectie_7rb");
        outStyle1676 = SvgUtils.isCssAttr(outElem1676, "visibility") ? (SVGStylable)outElem1676 : null;
        outElem1677 = document.getElementById("detail_plattegrond_inactieve_camera_rechts2_sectie_7rb");
        outStyle1677 = SvgUtils.isCssAttr(outElem1677, "visibility") ? (SVGStylable)outElem1677 : null;
        outElem1678 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb");
        outStyle1678 = SvgUtils.isCssAttr(outElem1678, "fill") ? (SVGStylable)outElem1678 : null;
        outElem1679 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb");
        outText1679 = SvgUtils.getTextNode(outElem1679);
        outElem1680 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer2_sectie_7rb");
        outText1680 = SvgUtils.getTextNode(outElem1680);
        outElem1681 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1");
        outStyle1681 = SvgUtils.isCssAttr(outElem1681, "width") ? (SVGStylable)outElem1681 : null;
        outElem1682 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2");
        outStyle1682 = SvgUtils.isCssAttr(outElem1682, "width") ? (SVGStylable)outElem1682 : null;
        outElem1683 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3");
        outStyle1683 = SvgUtils.isCssAttr(outElem1683, "width") ? (SVGStylable)outElem1683 : null;
        outElem1684 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1");
        outStyle1684 = SvgUtils.isCssAttr(outElem1684, "width") ? (SVGStylable)outElem1684 : null;
        outElem1685 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2");
        outStyle1685 = SvgUtils.isCssAttr(outElem1685, "width") ? (SVGStylable)outElem1685 : null;
        outElem1686 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3");
        outStyle1686 = SvgUtils.isCssAttr(outElem1686, "width") ? (SVGStylable)outElem1686 : null;
        outElem1687 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1");
        outStyle1687 = SvgUtils.isCssAttr(outElem1687, "transform") ? (SVGStylable)outElem1687 : null;
        outElem1688 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2");
        outStyle1688 = SvgUtils.isCssAttr(outElem1688, "transform") ? (SVGStylable)outElem1688 : null;
        outElem1689 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3");
        outStyle1689 = SvgUtils.isCssAttr(outElem1689, "transform") ? (SVGStylable)outElem1689 : null;
        outElem1690 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1");
        outStyle1690 = SvgUtils.isCssAttr(outElem1690, "transform") ? (SVGStylable)outElem1690 : null;
        outElem1691 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2");
        outStyle1691 = SvgUtils.isCssAttr(outElem1691, "transform") ? (SVGStylable)outElem1691 : null;
        outElem1692 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3");
        outStyle1692 = SvgUtils.isCssAttr(outElem1692, "transform") ? (SVGStylable)outElem1692 : null;
        outElem1693 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_8_rb_12");
        outStyle1693 = SvgUtils.isCssAttr(outElem1693, "transform") ? (SVGStylable)outElem1693 : null;
        outElem1694 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_8_rb_23");
        outStyle1694 = SvgUtils.isCssAttr(outElem1694, "transform") ? (SVGStylable)outElem1694 : null;
        outElem1695 = document.getElementById("detail_midden_tunnel_kanaal_sectie_8");
        outStyle1695 = SvgUtils.isCssAttr(outElem1695, "width") ? (SVGStylable)outElem1695 : null;
        outElem1696 = document.getElementById("detail_midden_tunnel_kanaal_sectie_8");
        outStyle1696 = SvgUtils.isCssAttr(outElem1696, "transform") ? (SVGStylable)outElem1696 : null;
        outElem1697 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1");
        outStyle1697 = SvgUtils.isCssAttr(outElem1697, "width") ? (SVGStylable)outElem1697 : null;
        outElem1698 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2");
        outStyle1698 = SvgUtils.isCssAttr(outElem1698, "width") ? (SVGStylable)outElem1698 : null;
        outElem1699 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3");
        outStyle1699 = SvgUtils.isCssAttr(outElem1699, "width") ? (SVGStylable)outElem1699 : null;
        outElem1700 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1");
        outStyle1700 = SvgUtils.isCssAttr(outElem1700, "width") ? (SVGStylable)outElem1700 : null;
        outElem1701 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2");
        outStyle1701 = SvgUtils.isCssAttr(outElem1701, "width") ? (SVGStylable)outElem1701 : null;
        outElem1702 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3");
        outStyle1702 = SvgUtils.isCssAttr(outElem1702, "width") ? (SVGStylable)outElem1702 : null;
        outElem1703 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1");
        outStyle1703 = SvgUtils.isCssAttr(outElem1703, "transform") ? (SVGStylable)outElem1703 : null;
        outElem1704 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2");
        outStyle1704 = SvgUtils.isCssAttr(outElem1704, "transform") ? (SVGStylable)outElem1704 : null;
        outElem1705 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3");
        outStyle1705 = SvgUtils.isCssAttr(outElem1705, "transform") ? (SVGStylable)outElem1705 : null;
        outElem1706 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1");
        outStyle1706 = SvgUtils.isCssAttr(outElem1706, "transform") ? (SVGStylable)outElem1706 : null;
        outElem1707 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2");
        outStyle1707 = SvgUtils.isCssAttr(outElem1707, "transform") ? (SVGStylable)outElem1707 : null;
        outElem1708 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3");
        outStyle1708 = SvgUtils.isCssAttr(outElem1708, "transform") ? (SVGStylable)outElem1708 : null;
        outElem1709 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_8_lb_12");
        outStyle1709 = SvgUtils.isCssAttr(outElem1709, "transform") ? (SVGStylable)outElem1709 : null;
        outElem1710 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_8_lb_23");
        outStyle1710 = SvgUtils.isCssAttr(outElem1710, "transform") ? (SVGStylable)outElem1710 : null;
        outElem1711 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1");
        outStyle1711 = SvgUtils.isCssAttr(outElem1711, "width") ? (SVGStylable)outElem1711 : null;
        outElem1712 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2");
        outStyle1712 = SvgUtils.isCssAttr(outElem1712, "width") ? (SVGStylable)outElem1712 : null;
        outElem1713 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3");
        outStyle1713 = SvgUtils.isCssAttr(outElem1713, "width") ? (SVGStylable)outElem1713 : null;
        outElem1714 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1");
        outStyle1714 = SvgUtils.isCssAttr(outElem1714, "width") ? (SVGStylable)outElem1714 : null;
        outElem1715 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2");
        outStyle1715 = SvgUtils.isCssAttr(outElem1715, "width") ? (SVGStylable)outElem1715 : null;
        outElem1716 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3");
        outStyle1716 = SvgUtils.isCssAttr(outElem1716, "width") ? (SVGStylable)outElem1716 : null;
        outElem1717 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1");
        outStyle1717 = SvgUtils.isCssAttr(outElem1717, "transform") ? (SVGStylable)outElem1717 : null;
        outElem1718 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2");
        outStyle1718 = SvgUtils.isCssAttr(outElem1718, "transform") ? (SVGStylable)outElem1718 : null;
        outElem1719 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3");
        outStyle1719 = SvgUtils.isCssAttr(outElem1719, "transform") ? (SVGStylable)outElem1719 : null;
        outElem1720 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1");
        outStyle1720 = SvgUtils.isCssAttr(outElem1720, "transform") ? (SVGStylable)outElem1720 : null;
        outElem1721 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2");
        outStyle1721 = SvgUtils.isCssAttr(outElem1721, "transform") ? (SVGStylable)outElem1721 : null;
        outElem1722 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3");
        outStyle1722 = SvgUtils.isCssAttr(outElem1722, "transform") ? (SVGStylable)outElem1722 : null;
        outElem1723 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1");
        outStyle1723 = SvgUtils.isCssAttr(outElem1723, "width") ? (SVGStylable)outElem1723 : null;
        outElem1724 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2");
        outStyle1724 = SvgUtils.isCssAttr(outElem1724, "width") ? (SVGStylable)outElem1724 : null;
        outElem1725 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3");
        outStyle1725 = SvgUtils.isCssAttr(outElem1725, "width") ? (SVGStylable)outElem1725 : null;
        outElem1726 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1");
        outStyle1726 = SvgUtils.isCssAttr(outElem1726, "width") ? (SVGStylable)outElem1726 : null;
        outElem1727 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2");
        outStyle1727 = SvgUtils.isCssAttr(outElem1727, "width") ? (SVGStylable)outElem1727 : null;
        outElem1728 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3");
        outStyle1728 = SvgUtils.isCssAttr(outElem1728, "width") ? (SVGStylable)outElem1728 : null;
        outElem1729 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1");
        outStyle1729 = SvgUtils.isCssAttr(outElem1729, "transform") ? (SVGStylable)outElem1729 : null;
        outElem1730 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2");
        outStyle1730 = SvgUtils.isCssAttr(outElem1730, "transform") ? (SVGStylable)outElem1730 : null;
        outElem1731 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3");
        outStyle1731 = SvgUtils.isCssAttr(outElem1731, "transform") ? (SVGStylable)outElem1731 : null;
        outElem1732 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1");
        outStyle1732 = SvgUtils.isCssAttr(outElem1732, "transform") ? (SVGStylable)outElem1732 : null;
        outElem1733 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2");
        outStyle1733 = SvgUtils.isCssAttr(outElem1733, "transform") ? (SVGStylable)outElem1733 : null;
        outElem1734 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3");
        outStyle1734 = SvgUtils.isCssAttr(outElem1734, "transform") ? (SVGStylable)outElem1734 : null;
        outElem1735 = document.getElementById("detail_plattegrond_actieve_camera_rechts5_sectie_8lb");
        outStyle1735 = SvgUtils.isCssAttr(outElem1735, "visibility") ? (SVGStylable)outElem1735 : null;
        outElem1736 = document.getElementById("detail_plattegrond_inactieve_camera_rechts5_sectie_8lb");
        outStyle1736 = SvgUtils.isCssAttr(outElem1736, "visibility") ? (SVGStylable)outElem1736 : null;
        outElem1737 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb");
        outStyle1737 = SvgUtils.isCssAttr(outElem1737, "fill") ? (SVGStylable)outElem1737 : null;
        outElem1738 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb");
        outText1738 = SvgUtils.getTextNode(outElem1738);
        outElem1739 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer5_sectie_8lb");
        outText1739 = SvgUtils.getTextNode(outElem1739);
        outElem1740 = document.getElementById("detail_plattegrond_actieve_camera_rechts2_sectie_8rb");
        outStyle1740 = SvgUtils.isCssAttr(outElem1740, "visibility") ? (SVGStylable)outElem1740 : null;
        outElem1741 = document.getElementById("detail_plattegrond_inactieve_camera_rechts2_sectie_8rb");
        outStyle1741 = SvgUtils.isCssAttr(outElem1741, "visibility") ? (SVGStylable)outElem1741 : null;
        outElem1742 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb");
        outStyle1742 = SvgUtils.isCssAttr(outElem1742, "fill") ? (SVGStylable)outElem1742 : null;
        outElem1743 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb");
        outText1743 = SvgUtils.getTextNode(outElem1743);
        outElem1744 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer2_sectie_8rb");
        outText1744 = SvgUtils.getTextNode(outElem1744);
        outElem1745 = document.getElementById("detail_plattegrond_actieve_camera_links6_sectie_8lb");
        outStyle1745 = SvgUtils.isCssAttr(outElem1745, "visibility") ? (SVGStylable)outElem1745 : null;
        outElem1746 = document.getElementById("detail_plattegrond_inactieve_camera_links6_sectie_8lb");
        outStyle1746 = SvgUtils.isCssAttr(outElem1746, "visibility") ? (SVGStylable)outElem1746 : null;
        outElem1747 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb");
        outStyle1747 = SvgUtils.isCssAttr(outElem1747, "fill") ? (SVGStylable)outElem1747 : null;
        outElem1748 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb");
        outText1748 = SvgUtils.getTextNode(outElem1748);
        outElem1749 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer6_sectie_8lb");
        outText1749 = SvgUtils.getTextNode(outElem1749);
        outElem1750 = document.getElementById("detail_plattegrond_actieve_camera_rechts1_sectie_8rb");
        outStyle1750 = SvgUtils.isCssAttr(outElem1750, "visibility") ? (SVGStylable)outElem1750 : null;
        outElem1751 = document.getElementById("detail_plattegrond_inactieve_camera_rechts1_sectie_8rb");
        outStyle1751 = SvgUtils.isCssAttr(outElem1751, "visibility") ? (SVGStylable)outElem1751 : null;
        outElem1752 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb");
        outStyle1752 = SvgUtils.isCssAttr(outElem1752, "fill") ? (SVGStylable)outElem1752 : null;
        outElem1753 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb");
        outText1753 = SvgUtils.getTextNode(outElem1753);
        outElem1754 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer1_sectie_8rb");
        outText1754 = SvgUtils.getTextNode(outElem1754);
        outElem1755 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1");
        outStyle1755 = SvgUtils.isCssAttr(outElem1755, "width") ? (SVGStylable)outElem1755 : null;
        outElem1756 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2");
        outStyle1756 = SvgUtils.isCssAttr(outElem1756, "width") ? (SVGStylable)outElem1756 : null;
        outElem1757 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3");
        outStyle1757 = SvgUtils.isCssAttr(outElem1757, "width") ? (SVGStylable)outElem1757 : null;
        outElem1758 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1");
        outStyle1758 = SvgUtils.isCssAttr(outElem1758, "width") ? (SVGStylable)outElem1758 : null;
        outElem1759 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2");
        outStyle1759 = SvgUtils.isCssAttr(outElem1759, "width") ? (SVGStylable)outElem1759 : null;
        outElem1760 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3");
        outStyle1760 = SvgUtils.isCssAttr(outElem1760, "width") ? (SVGStylable)outElem1760 : null;
        outElem1761 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1");
        outStyle1761 = SvgUtils.isCssAttr(outElem1761, "transform") ? (SVGStylable)outElem1761 : null;
        outElem1762 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2");
        outStyle1762 = SvgUtils.isCssAttr(outElem1762, "transform") ? (SVGStylable)outElem1762 : null;
        outElem1763 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3");
        outStyle1763 = SvgUtils.isCssAttr(outElem1763, "transform") ? (SVGStylable)outElem1763 : null;
        outElem1764 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1");
        outStyle1764 = SvgUtils.isCssAttr(outElem1764, "transform") ? (SVGStylable)outElem1764 : null;
        outElem1765 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2");
        outStyle1765 = SvgUtils.isCssAttr(outElem1765, "transform") ? (SVGStylable)outElem1765 : null;
        outElem1766 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3");
        outStyle1766 = SvgUtils.isCssAttr(outElem1766, "transform") ? (SVGStylable)outElem1766 : null;
        outElem1767 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_9_rb_12");
        outStyle1767 = SvgUtils.isCssAttr(outElem1767, "transform") ? (SVGStylable)outElem1767 : null;
        outElem1768 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_9_rb_23");
        outStyle1768 = SvgUtils.isCssAttr(outElem1768, "transform") ? (SVGStylable)outElem1768 : null;
        outElem1769 = document.getElementById("detail_midden_tunnel_kanaal_sectie_9");
        outStyle1769 = SvgUtils.isCssAttr(outElem1769, "width") ? (SVGStylable)outElem1769 : null;
        outElem1770 = document.getElementById("detail_midden_tunnel_kanaal_sectie_9");
        outStyle1770 = SvgUtils.isCssAttr(outElem1770, "transform") ? (SVGStylable)outElem1770 : null;
        outElem1771 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1");
        outStyle1771 = SvgUtils.isCssAttr(outElem1771, "width") ? (SVGStylable)outElem1771 : null;
        outElem1772 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2");
        outStyle1772 = SvgUtils.isCssAttr(outElem1772, "width") ? (SVGStylable)outElem1772 : null;
        outElem1773 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3");
        outStyle1773 = SvgUtils.isCssAttr(outElem1773, "width") ? (SVGStylable)outElem1773 : null;
        outElem1774 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1");
        outStyle1774 = SvgUtils.isCssAttr(outElem1774, "width") ? (SVGStylable)outElem1774 : null;
        outElem1775 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2");
        outStyle1775 = SvgUtils.isCssAttr(outElem1775, "width") ? (SVGStylable)outElem1775 : null;
        outElem1776 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3");
        outStyle1776 = SvgUtils.isCssAttr(outElem1776, "width") ? (SVGStylable)outElem1776 : null;
        outElem1777 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1");
        outStyle1777 = SvgUtils.isCssAttr(outElem1777, "transform") ? (SVGStylable)outElem1777 : null;
        outElem1778 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2");
        outStyle1778 = SvgUtils.isCssAttr(outElem1778, "transform") ? (SVGStylable)outElem1778 : null;
        outElem1779 = document.getElementById("detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3");
        outStyle1779 = SvgUtils.isCssAttr(outElem1779, "transform") ? (SVGStylable)outElem1779 : null;
        outElem1780 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1");
        outStyle1780 = SvgUtils.isCssAttr(outElem1780, "transform") ? (SVGStylable)outElem1780 : null;
        outElem1781 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2");
        outStyle1781 = SvgUtils.isCssAttr(outElem1781, "transform") ? (SVGStylable)outElem1781 : null;
        outElem1782 = document.getElementById("detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3");
        outStyle1782 = SvgUtils.isCssAttr(outElem1782, "transform") ? (SVGStylable)outElem1782 : null;
        outElem1783 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_9_lb_12");
        outStyle1783 = SvgUtils.isCssAttr(outElem1783, "transform") ? (SVGStylable)outElem1783 : null;
        outElem1784 = document.getElementById("detail_stippellijn_rijstrook_scheiding_sectie_9_lb_23");
        outStyle1784 = SvgUtils.isCssAttr(outElem1784, "transform") ? (SVGStylable)outElem1784 : null;
        outElem1785 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1");
        outStyle1785 = SvgUtils.isCssAttr(outElem1785, "width") ? (SVGStylable)outElem1785 : null;
        outElem1786 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2");
        outStyle1786 = SvgUtils.isCssAttr(outElem1786, "width") ? (SVGStylable)outElem1786 : null;
        outElem1787 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3");
        outStyle1787 = SvgUtils.isCssAttr(outElem1787, "width") ? (SVGStylable)outElem1787 : null;
        outElem1788 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1");
        outStyle1788 = SvgUtils.isCssAttr(outElem1788, "width") ? (SVGStylable)outElem1788 : null;
        outElem1789 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2");
        outStyle1789 = SvgUtils.isCssAttr(outElem1789, "width") ? (SVGStylable)outElem1789 : null;
        outElem1790 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3");
        outStyle1790 = SvgUtils.isCssAttr(outElem1790, "width") ? (SVGStylable)outElem1790 : null;
        outElem1791 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1");
        outStyle1791 = SvgUtils.isCssAttr(outElem1791, "transform") ? (SVGStylable)outElem1791 : null;
        outElem1792 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2");
        outStyle1792 = SvgUtils.isCssAttr(outElem1792, "transform") ? (SVGStylable)outElem1792 : null;
        outElem1793 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3");
        outStyle1793 = SvgUtils.isCssAttr(outElem1793, "transform") ? (SVGStylable)outElem1793 : null;
        outElem1794 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1");
        outStyle1794 = SvgUtils.isCssAttr(outElem1794, "transform") ? (SVGStylable)outElem1794 : null;
        outElem1795 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2");
        outStyle1795 = SvgUtils.isCssAttr(outElem1795, "transform") ? (SVGStylable)outElem1795 : null;
        outElem1796 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3");
        outStyle1796 = SvgUtils.isCssAttr(outElem1796, "transform") ? (SVGStylable)outElem1796 : null;
        outElem1797 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1");
        outStyle1797 = SvgUtils.isCssAttr(outElem1797, "width") ? (SVGStylable)outElem1797 : null;
        outElem1798 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2");
        outStyle1798 = SvgUtils.isCssAttr(outElem1798, "width") ? (SVGStylable)outElem1798 : null;
        outElem1799 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3");
        outStyle1799 = SvgUtils.isCssAttr(outElem1799, "width") ? (SVGStylable)outElem1799 : null;
        outElem1800 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1");
        outStyle1800 = SvgUtils.isCssAttr(outElem1800, "width") ? (SVGStylable)outElem1800 : null;
        outElem1801 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2");
        outStyle1801 = SvgUtils.isCssAttr(outElem1801, "width") ? (SVGStylable)outElem1801 : null;
        outElem1802 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3");
        outStyle1802 = SvgUtils.isCssAttr(outElem1802, "width") ? (SVGStylable)outElem1802 : null;
        outElem1803 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1");
        outStyle1803 = SvgUtils.isCssAttr(outElem1803, "transform") ? (SVGStylable)outElem1803 : null;
        outElem1804 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2");
        outStyle1804 = SvgUtils.isCssAttr(outElem1804, "transform") ? (SVGStylable)outElem1804 : null;
        outElem1805 = document.getElementById("detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3");
        outStyle1805 = SvgUtils.isCssAttr(outElem1805, "transform") ? (SVGStylable)outElem1805 : null;
        outElem1806 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1");
        outStyle1806 = SvgUtils.isCssAttr(outElem1806, "transform") ? (SVGStylable)outElem1806 : null;
        outElem1807 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2");
        outStyle1807 = SvgUtils.isCssAttr(outElem1807, "transform") ? (SVGStylable)outElem1807 : null;
        outElem1808 = document.getElementById("detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3");
        outStyle1808 = SvgUtils.isCssAttr(outElem1808, "transform") ? (SVGStylable)outElem1808 : null;
        outElem1809 = document.getElementById("detail_plattegrond_verkeerslicht_uit_rb_1");
        outStyle1809 = SvgUtils.isCssAttr(outElem1809, "visibility") ? (SVGStylable)outElem1809 : null;
        outElem1810 = document.getElementById("detail_plattegrond_verkeerslicht_rood_rb_1");
        outStyle1810 = SvgUtils.isCssAttr(outElem1810, "visibility") ? (SVGStylable)outElem1810 : null;
        outElem1811 = document.getElementById("detail_plattegrond_verkeerslicht_oranje_rb_1");
        outStyle1811 = SvgUtils.isCssAttr(outElem1811, "visibility") ? (SVGStylable)outElem1811 : null;
        outElem1812 = document.getElementById("detail_plattegrond_verkeerslicht_uit_rb_2");
        outStyle1812 = SvgUtils.isCssAttr(outElem1812, "visibility") ? (SVGStylable)outElem1812 : null;
        outElem1813 = document.getElementById("detail_plattegrond_verkeerslicht_rood_rb_2");
        outStyle1813 = SvgUtils.isCssAttr(outElem1813, "visibility") ? (SVGStylable)outElem1813 : null;
        outElem1814 = document.getElementById("detail_plattegrond_verkeerslicht_oranje_rb_2");
        outStyle1814 = SvgUtils.isCssAttr(outElem1814, "visibility") ? (SVGStylable)outElem1814 : null;
        outElem1815 = document.getElementById("detail_plattegrond_verkeerslicht_uit_rb_3");
        outStyle1815 = SvgUtils.isCssAttr(outElem1815, "visibility") ? (SVGStylable)outElem1815 : null;
        outElem1816 = document.getElementById("detail_plattegrond_verkeerslicht_rood_rb_3");
        outStyle1816 = SvgUtils.isCssAttr(outElem1816, "visibility") ? (SVGStylable)outElem1816 : null;
        outElem1817 = document.getElementById("detail_plattegrond_verkeerslicht_oranje_rb_3");
        outStyle1817 = SvgUtils.isCssAttr(outElem1817, "visibility") ? (SVGStylable)outElem1817 : null;
        outElem1818 = document.getElementById("detail_plattegrond_afsluitboom_open_rb");
        outStyle1818 = SvgUtils.isCssAttr(outElem1818, "visibility") ? (SVGStylable)outElem1818 : null;
        outElem1819 = document.getElementById("detail_plattegrond_afsluitboom_in_beweging_rb");
        outStyle1819 = SvgUtils.isCssAttr(outElem1819, "visibility") ? (SVGStylable)outElem1819 : null;
        outElem1820 = document.getElementById("detail_plattegrond_afsluitboom_gesloten_rb");
        outStyle1820 = SvgUtils.isCssAttr(outElem1820, "visibility") ? (SVGStylable)outElem1820 : null;
        outElem1821 = document.getElementById("detail_plattegrond_actieve_camera_links6_sectie_9lb");
        outStyle1821 = SvgUtils.isCssAttr(outElem1821, "visibility") ? (SVGStylable)outElem1821 : null;
        outElem1822 = document.getElementById("detail_plattegrond_inactieve_camera_links6_sectie_9lb");
        outStyle1822 = SvgUtils.isCssAttr(outElem1822, "visibility") ? (SVGStylable)outElem1822 : null;
        outElem1823 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb");
        outStyle1823 = SvgUtils.isCssAttr(outElem1823, "fill") ? (SVGStylable)outElem1823 : null;
        outElem1824 = document.getElementById("detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb");
        outText1824 = SvgUtils.getTextNode(outElem1824);
        outElem1825 = document.getElementById("detail_plattegrond_camera_actieve_camera_links_nummer6_sectie_9lb");
        outText1825 = SvgUtils.getTextNode(outElem1825);
        outElem1826 = document.getElementById("detail_plattegrond_actieve_camera_rechts1_sectie_9rb");
        outStyle1826 = SvgUtils.isCssAttr(outElem1826, "visibility") ? (SVGStylable)outElem1826 : null;
        outElem1827 = document.getElementById("detail_plattegrond_inactieve_camera_rechts1_sectie_9rb");
        outStyle1827 = SvgUtils.isCssAttr(outElem1827, "visibility") ? (SVGStylable)outElem1827 : null;
        outElem1828 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb");
        outStyle1828 = SvgUtils.isCssAttr(outElem1828, "fill") ? (SVGStylable)outElem1828 : null;
        outElem1829 = document.getElementById("detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb");
        outText1829 = SvgUtils.getTextNode(outElem1829);
        outElem1830 = document.getElementById("detail_plattegrond_camera_actieve_camera_rechts_nummer1_sectie_9rb");
        outText1830 = SvgUtils.getTextNode(outElem1830);
        outElem1831 = document.getElementById("detail_plattegrond_knop_rechts");
        outStyle1831 = SvgUtils.isCssAttr(outElem1831, "visibility") ? (SVGStylable)outElem1831 : null;
        outElem1832 = document.getElementById("detail_plattegrond_knop_rechts_niet_beschikbaar");
        outStyle1832 = SvgUtils.isCssAttr(outElem1832, "visibility") ? (SVGStylable)outElem1832 : null;
        outElem1833 = document.getElementById("detail_plattegrond_knop_links");
        outStyle1833 = SvgUtils.isCssAttr(outElem1833, "visibility") ? (SVGStylable)outElem1833 : null;
        outElem1834 = document.getElementById("detail_plattegrond_knop_links_niet_beschikbaar");
        outStyle1834 = SvgUtils.isCssAttr(outElem1834, "visibility") ? (SVGStylable)outElem1834 : null;
    }


    @Override
    protected void applyOutputInternal(RuntimeState _state) {
        State state = (State)_state;
        applyOutput0(state);
        applyOutput1(state);
        applyOutput2(state);
        applyOutput3(state);
        applyOutput4(state);
        applyOutput5(state);
        applyOutput6(state);
        applyOutput7(state);
        applyOutput8(state);
        applyOutput9(state);
        applyOutput10(state);
        applyOutput11(state);
        applyOutput12(state);
        applyOutput13(state);
        applyOutput14(state);
        applyOutput15(state);
        applyOutput16(state);
        applyOutput17(state);
        applyOutput18(state);
        applyOutput19(state);
        applyOutput20(state);
        applyOutput21(state);
        applyOutput22(state);
        applyOutput23(state);
        applyOutput24(state);
        applyOutput25(state);
        applyOutput26(state);
        applyOutput27(state);
        applyOutput28(state);
        applyOutput29(state);
        applyOutput30(state);
        applyOutput31(state);
        applyOutput32(state);
        applyOutput33(state);
        applyOutput34(state);
        applyOutput35(state);
        applyOutput36(state);
        applyOutput37(state);
        applyOutput38(state);
        applyOutput39(state);
        applyOutput40(state);
        applyOutput41(state);
        applyOutput42(state);
        applyOutput43(state);
        applyOutput44(state);
        applyOutput45(state);
        applyOutput46(state);
        applyOutput47(state);
        applyOutput48(state);
        applyOutput49(state);
        applyOutput50(state);
        applyOutput51(state);
        applyOutput52(state);
        applyOutput53(state);
        applyOutput54(state);
        applyOutput55(state);
        applyOutput56(state);
        applyOutput57(state);
        applyOutput58(state);
        applyOutput59(state);
        applyOutput60(state);
        applyOutput61(state);
        applyOutput62(state);
        applyOutput63(state);
        applyOutput64(state);
        applyOutput65(state);
        applyOutput66(state);
        applyOutput67(state);
        applyOutput68(state);
        applyOutput69(state);
        applyOutput70(state);
        applyOutput71(state);
        applyOutput72(state);
        applyOutput73(state);
        applyOutput74(state);
        applyOutput75(state);
        applyOutput76(state);
        applyOutput77(state);
        applyOutput78(state);
        applyOutput79(state);
        applyOutput80(state);
        applyOutput81(state);
        applyOutput82(state);
        applyOutput83(state);
        applyOutput84(state);
        applyOutput85(state);
        applyOutput86(state);
        applyOutput87(state);
        applyOutput88(state);
        applyOutput89(state);
        applyOutput90(state);
        applyOutput91(state);
        applyOutput92(state);
        applyOutput93(state);
        applyOutput94(state);
        applyOutput95(state);
        applyOutput96(state);
        applyOutput97(state);
        applyOutput98(state);
        applyOutput99(state);
        applyOutput100(state);
        applyOutput101(state);
        applyOutput102(state);
        applyOutput103(state);
        applyOutput104(state);
        applyOutput105(state);
        applyOutput106(state);
        applyOutput107(state);
        applyOutput108(state);
        applyOutput109(state);
        applyOutput110(state);
        applyOutput111(state);
        applyOutput112(state);
        applyOutput113(state);
        applyOutput114(state);
        applyOutput115(state);
        applyOutput116(state);
        applyOutput117(state);
        applyOutput118(state);
        applyOutput119(state);
        applyOutput120(state);
        applyOutput121(state);
        applyOutput122(state);
        applyOutput123(state);
        applyOutput124(state);
        applyOutput125(state);
        applyOutput126(state);
        applyOutput127(state);
        applyOutput128(state);
        applyOutput129(state);
        applyOutput130(state);
        applyOutput131(state);
        applyOutput132(state);
        applyOutput133(state);
        applyOutput134(state);
        applyOutput135(state);
        applyOutput136(state);
        applyOutput137(state);
        applyOutput138(state);
        applyOutput139(state);
        applyOutput140(state);
        applyOutput141(state);
        applyOutput142(state);
        applyOutput143(state);
        applyOutput144(state);
        applyOutput145(state);
        applyOutput146(state);
        applyOutput147(state);
        applyOutput148(state);
        applyOutput149(state);
        applyOutput150(state);
        applyOutput151(state);
        applyOutput152(state);
        applyOutput153(state);
        applyOutput154(state);
        applyOutput155(state);
        applyOutput156(state);
        applyOutput157(state);
        applyOutput158(state);
        applyOutput159(state);
        applyOutput160(state);
        applyOutput161(state);
        applyOutput162(state);
        applyOutput163(state);
        applyOutput164(state);
        applyOutput165(state);
        applyOutput166(state);
        applyOutput167(state);
        applyOutput168(state);
        applyOutput169(state);
        applyOutput170(state);
        applyOutput171(state);
        applyOutput172(state);
        applyOutput173(state);
        applyOutput174(state);
        applyOutput175(state);
        applyOutput176(state);
        applyOutput177(state);
        applyOutput178(state);
        applyOutput179(state);
        applyOutput180(state);
        applyOutput181(state);
        applyOutput182(state);
        applyOutput183(state);
        applyOutput184(state);
        applyOutput185(state);
        applyOutput186(state);
        applyOutput187(state);
        applyOutput188(state);
        applyOutput189(state);
        applyOutput190(state);
        applyOutput191(state);
        applyOutput192(state);
        applyOutput193(state);
        applyOutput194(state);
        applyOutput195(state);
        applyOutput196(state);
        applyOutput197(state);
        applyOutput198(state);
        applyOutput199(state);
        applyOutput200(state);
        applyOutput201(state);
        applyOutput202(state);
        applyOutput203(state);
        applyOutput204(state);
        applyOutput205(state);
        applyOutput206(state);
        applyOutput207(state);
        applyOutput208(state);
        applyOutput209(state);
        applyOutput210(state);
        applyOutput211(state);
        applyOutput212(state);
        applyOutput213(state);
        applyOutput214(state);
        applyOutput215(state);
        applyOutput216(state);
        applyOutput217(state);
        applyOutput218(state);
        applyOutput219(state);
        applyOutput220(state);
        applyOutput221(state);
        applyOutput222(state);
        applyOutput223(state);
        applyOutput224(state);
        applyOutput225(state);
        applyOutput226(state);
        applyOutput227(state);
        applyOutput228(state);
        applyOutput229(state);
        applyOutput230(state);
        applyOutput231(state);
        applyOutput232(state);
        applyOutput233(state);
        applyOutput234(state);
        applyOutput235(state);
        applyOutput236(state);
        applyOutput237(state);
        applyOutput238(state);
        applyOutput239(state);
        applyOutput240(state);
        applyOutput241(state);
        applyOutput242(state);
        applyOutput243(state);
        applyOutput244(state);
        applyOutput245(state);
        applyOutput246(state);
        applyOutput247(state);
        applyOutput248(state);
        applyOutput249(state);
        applyOutput250(state);
        applyOutput251(state);
        applyOutput252(state);
        applyOutput253(state);
        applyOutput254(state);
        applyOutput255(state);
        applyOutput256(state);
        applyOutput257(state);
        applyOutput258(state);
        applyOutput259(state);
        applyOutput260(state);
        applyOutput261(state);
        applyOutput262(state);
        applyOutput263(state);
        applyOutput264(state);
        applyOutput265(state);
        applyOutput266(state);
        applyOutput267(state);
        applyOutput268(state);
        applyOutput269(state);
        applyOutput270(state);
        applyOutput271(state);
        applyOutput272(state);
        applyOutput273(state);
        applyOutput274(state);
        applyOutput275(state);
        applyOutput276(state);
        applyOutput277(state);
        applyOutput278(state);
        applyOutput279(state);
        applyOutput280(state);
        applyOutput281(state);
        applyOutput282(state);
        applyOutput283(state);
        applyOutput284(state);
        applyOutput285(state);
        applyOutput286(state);
        applyOutput287(state);
        applyOutput288(state);
        applyOutput289(state);
        applyOutput290(state);
        applyOutput291(state);
        applyOutput292(state);
        applyOutput293(state);
        applyOutput294(state);
        applyOutput295(state);
        applyOutput296(state);
        applyOutput297(state);
        applyOutput298(state);
        applyOutput299(state);
        applyOutput300(state);
        applyOutput301(state);
        applyOutput302(state);
        applyOutput303(state);
        applyOutput304(state);
        applyOutput305(state);
        applyOutput306(state);
        applyOutput307(state);
        applyOutput308(state);
        applyOutput309(state);
        applyOutput310(state);
        applyOutput311(state);
        applyOutput312(state);
        applyOutput313(state);
        applyOutput314(state);
        applyOutput315(state);
        applyOutput316(state);
        applyOutput317(state);
        applyOutput318(state);
        applyOutput319(state);
        applyOutput320(state);
        applyOutput321(state);
        applyOutput322(state);
        applyOutput323(state);
        applyOutput324(state);
        applyOutput325(state);
        applyOutput326(state);
        applyOutput327(state);
        applyOutput328(state);
        applyOutput329(state);
        applyOutput330(state);
        applyOutput331(state);
        applyOutput332(state);
        applyOutput333(state);
        applyOutput334(state);
        applyOutput335(state);
        applyOutput336(state);
        applyOutput337(state);
        applyOutput338(state);
        applyOutput339(state);
        applyOutput340(state);
        applyOutput341(state);
        applyOutput342(state);
        applyOutput343(state);
        applyOutput344(state);
        applyOutput345(state);
        applyOutput346(state);
        applyOutput347(state);
        applyOutput348(state);
        applyOutput349(state);
        applyOutput350(state);
        applyOutput351(state);
        applyOutput352(state);
        applyOutput353(state);
        applyOutput354(state);
        applyOutput355(state);
        applyOutput356(state);
        applyOutput357(state);
        applyOutput358(state);
        applyOutput359(state);
        applyOutput360(state);
        applyOutput361(state);
        applyOutput362(state);
        applyOutput363(state);
        applyOutput364(state);
        applyOutput365(state);
        applyOutput366(state);
        applyOutput367(state);
        applyOutput368(state);
        applyOutput369(state);
        applyOutput370(state);
        applyOutput371(state);
        applyOutput372(state);
        applyOutput373(state);
        applyOutput374(state);
        applyOutput375(state);
        applyOutput376(state);
        applyOutput377(state);
        applyOutput378(state);
        applyOutput379(state);
        applyOutput380(state);
        applyOutput381(state);
        applyOutput382(state);
        applyOutput383(state);
        applyOutput384(state);
        applyOutput385(state);
        applyOutput386(state);
        applyOutput387(state);
        applyOutput388(state);
        applyOutput389(state);
        applyOutput390(state);
        applyOutput391(state);
        applyOutput392(state);
        applyOutput393(state);
        applyOutput394(state);
        applyOutput395(state);
        applyOutput396(state);
        applyOutput397(state);
        applyOutput398(state);
        applyOutput399(state);
        applyOutput400(state);
        applyOutput401(state);
        applyOutput402(state);
        applyOutput403(state);
        applyOutput404(state);
        applyOutput405(state);
        applyOutput406(state);
        applyOutput407(state);
        applyOutput408(state);
        applyOutput409(state);
        applyOutput410(state);
        applyOutput411(state);
        applyOutput412(state);
        applyOutput413(state);
        applyOutput414(state);
        applyOutput415(state);
        applyOutput416(state);
        applyOutput417(state);
        applyOutput418(state);
        applyOutput419(state);
        applyOutput420(state);
        applyOutput421(state);
        applyOutput422(state);
        applyOutput423(state);
        applyOutput424(state);
        applyOutput425(state);
        applyOutput426(state);
        applyOutput427(state);
        applyOutput428(state);
        applyOutput429(state);
        applyOutput430(state);
        applyOutput431(state);
        applyOutput432(state);
        applyOutput433(state);
        applyOutput434(state);
        applyOutput435(state);
        applyOutput436(state);
        applyOutput437(state);
        applyOutput438(state);
        applyOutput439(state);
        applyOutput440(state);
        applyOutput441(state);
        applyOutput442(state);
        applyOutput443(state);
        applyOutput444(state);
        applyOutput445(state);
        applyOutput446(state);
        applyOutput447(state);
        applyOutput448(state);
        applyOutput449(state);
        applyOutput450(state);
        applyOutput451(state);
        applyOutput452(state);
        applyOutput453(state);
        applyOutput454(state);
        applyOutput455(state);
        applyOutput456(state);
        applyOutput457(state);
        applyOutput458(state);
        applyOutput459(state);
        applyOutput460(state);
        applyOutput461(state);
        applyOutput462(state);
        applyOutput463(state);
        applyOutput464(state);
        applyOutput465(state);
        applyOutput466(state);
        applyOutput467(state);
        applyOutput468(state);
        applyOutput469(state);
        applyOutput470(state);
        applyOutput471(state);
        applyOutput472(state);
        applyOutput473(state);
        applyOutput474(state);
        applyOutput475(state);
        applyOutput476(state);
        applyOutput477(state);
        applyOutput478(state);
        applyOutput479(state);
        applyOutput480(state);
        applyOutput481(state);
        applyOutput482(state);
        applyOutput483(state);
        applyOutput484(state);
        applyOutput485(state);
        applyOutput486(state);
        applyOutput487(state);
        applyOutput488(state);
        applyOutput489(state);
        applyOutput490(state);
        applyOutput491(state);
        applyOutput492(state);
        applyOutput493(state);
        applyOutput494(state);
        applyOutput495(state);
        applyOutput496(state);
        applyOutput497(state);
        applyOutput498(state);
        applyOutput499(state);
        applyOutput500(state);
        applyOutput501(state);
        applyOutput502(state);
        applyOutput503(state);
        applyOutput504(state);
        applyOutput505(state);
        applyOutput506(state);
        applyOutput507(state);
        applyOutput508(state);
        applyOutput509(state);
        applyOutput510(state);
        applyOutput511(state);
        applyOutput512(state);
        applyOutput513(state);
        applyOutput514(state);
        applyOutput515(state);
        applyOutput516(state);
        applyOutput517(state);
        applyOutput518(state);
        applyOutput519(state);
        applyOutput520(state);
        applyOutput521(state);
        applyOutput522(state);
        applyOutput523(state);
        applyOutput524(state);
        applyOutput525(state);
        applyOutput526(state);
        applyOutput527(state);
        applyOutput528(state);
        applyOutput529(state);
        applyOutput530(state);
        applyOutput531(state);
        applyOutput532(state);
        applyOutput533(state);
        applyOutput534(state);
        applyOutput535(state);
        applyOutput536(state);
        applyOutput537(state);
        applyOutput538(state);
        applyOutput539(state);
        applyOutput540(state);
        applyOutput541(state);
        applyOutput542(state);
        applyOutput543(state);
        applyOutput544(state);
        applyOutput545(state);
        applyOutput546(state);
        applyOutput547(state);
        applyOutput548(state);
        applyOutput549(state);
        applyOutput550(state);
        applyOutput551(state);
        applyOutput552(state);
        applyOutput553(state);
        applyOutput554(state);
        applyOutput555(state);
        applyOutput556(state);
        applyOutput557(state);
        applyOutput558(state);
        applyOutput559(state);
        applyOutput560(state);
        applyOutput561(state);
        applyOutput562(state);
        applyOutput563(state);
        applyOutput564(state);
        applyOutput565(state);
        applyOutput566(state);
        applyOutput567(state);
        applyOutput568(state);
        applyOutput569(state);
        applyOutput570(state);
        applyOutput571(state);
        applyOutput572(state);
        applyOutput573(state);
        applyOutput574(state);
        applyOutput575(state);
        applyOutput576(state);
        applyOutput577(state);
        applyOutput578(state);
        applyOutput579(state);
        applyOutput580(state);
        applyOutput581(state);
        applyOutput582(state);
        applyOutput583(state);
        applyOutput584(state);
        applyOutput585(state);
        applyOutput586(state);
        applyOutput587(state);
        applyOutput588(state);
        applyOutput589(state);
        applyOutput590(state);
        applyOutput591(state);
        applyOutput592(state);
        applyOutput593(state);
        applyOutput594(state);
        applyOutput595(state);
        applyOutput596(state);
        applyOutput597(state);
        applyOutput598(state);
        applyOutput599(state);
        applyOutput600(state);
        applyOutput601(state);
        applyOutput602(state);
        applyOutput603(state);
        applyOutput604(state);
        applyOutput605(state);
        applyOutput606(state);
        applyOutput607(state);
        applyOutput608(state);
        applyOutput609(state);
        applyOutput610(state);
        applyOutput611(state);
        applyOutput612(state);
        applyOutput613(state);
        applyOutput614(state);
        applyOutput615(state);
        applyOutput616(state);
        applyOutput617(state);
        applyOutput618(state);
        applyOutput619(state);
        applyOutput620(state);
        applyOutput621(state);
        applyOutput622(state);
        applyOutput623(state);
        applyOutput624(state);
        applyOutput625(state);
        applyOutput626(state);
        applyOutput627(state);
        applyOutput628(state);
        applyOutput629(state);
        applyOutput630(state);
        applyOutput631(state);
        applyOutput632(state);
        applyOutput633(state);
        applyOutput634(state);
        applyOutput635(state);
        applyOutput636(state);
        applyOutput637(state);
        applyOutput638(state);
        applyOutput639(state);
        applyOutput640(state);
        applyOutput641(state);
        applyOutput642(state);
        applyOutput643(state);
        applyOutput644(state);
        applyOutput645(state);
        applyOutput646(state);
        applyOutput647(state);
        applyOutput648(state);
        applyOutput649(state);
        applyOutput650(state);
        applyOutput651(state);
        applyOutput652(state);
        applyOutput653(state);
        applyOutput654(state);
        applyOutput655(state);
        applyOutput656(state);
        applyOutput657(state);
        applyOutput658(state);
        applyOutput659(state);
        applyOutput660(state);
        applyOutput661(state);
        applyOutput662(state);
        applyOutput663(state);
        applyOutput664(state);
        applyOutput665(state);
        applyOutput666(state);
        applyOutput667(state);
        applyOutput668(state);
        applyOutput669(state);
        applyOutput670(state);
        applyOutput671(state);
        applyOutput672(state);
        applyOutput673(state);
        applyOutput674(state);
        applyOutput675(state);
        applyOutput676(state);
        applyOutput677(state);
        applyOutput678(state);
        applyOutput679(state);
        applyOutput680(state);
        applyOutput681(state);
        applyOutput682(state);
        applyOutput683(state);
        applyOutput684(state);
        applyOutput685(state);
        applyOutput686(state);
        applyOutput687(state);
        applyOutput688(state);
        applyOutput689(state);
        applyOutput690(state);
        applyOutput691(state);
        applyOutput692(state);
        applyOutput693(state);
        applyOutput694(state);
        applyOutput695(state);
        applyOutput696(state);
        applyOutput697(state);
        applyOutput698(state);
        applyOutput699(state);
        applyOutput700(state);
        applyOutput701(state);
        applyOutput702(state);
        applyOutput703(state);
        applyOutput704(state);
        applyOutput705(state);
        applyOutput706(state);
        applyOutput707(state);
        applyOutput708(state);
        applyOutput709(state);
        applyOutput710(state);
        applyOutput711(state);
        applyOutput712(state);
        applyOutput713(state);
        applyOutput714(state);
        applyOutput715(state);
        applyOutput716(state);
        applyOutput717(state);
        applyOutput718(state);
        applyOutput719(state);
        applyOutput720(state);
        applyOutput721(state);
        applyOutput722(state);
        applyOutput723(state);
        applyOutput724(state);
        applyOutput725(state);
        applyOutput726(state);
        applyOutput727(state);
        applyOutput728(state);
        applyOutput729(state);
        applyOutput730(state);
        applyOutput731(state);
        applyOutput732(state);
        applyOutput733(state);
        applyOutput734(state);
        applyOutput735(state);
        applyOutput736(state);
        applyOutput737(state);
        applyOutput738(state);
        applyOutput739(state);
        applyOutput740(state);
        applyOutput741(state);
        applyOutput742(state);
        applyOutput743(state);
        applyOutput744(state);
        applyOutput745(state);
        applyOutput746(state);
        applyOutput747(state);
        applyOutput748(state);
        applyOutput749(state);
        applyOutput750(state);
        applyOutput751(state);
        applyOutput752(state);
        applyOutput753(state);
        applyOutput754(state);
        applyOutput755(state);
        applyOutput756(state);
        applyOutput757(state);
        applyOutput758(state);
        applyOutput759(state);
        applyOutput760(state);
        applyOutput761(state);
        applyOutput762(state);
        applyOutput763(state);
        applyOutput764(state);
        applyOutput765(state);
        applyOutput766(state);
        applyOutput767(state);
        applyOutput768(state);
        applyOutput769(state);
        applyOutput770(state);
        applyOutput771(state);
        applyOutput772(state);
        applyOutput773(state);
        applyOutput774(state);
        applyOutput775(state);
        applyOutput776(state);
        applyOutput777(state);
        applyOutput778(state);
        applyOutput779(state);
        applyOutput780(state);
        applyOutput781(state);
        applyOutput782(state);
        applyOutput783(state);
        applyOutput784(state);
        applyOutput785(state);
        applyOutput786(state);
        applyOutput787(state);
        applyOutput788(state);
        applyOutput789(state);
        applyOutput790(state);
        applyOutput791(state);
        applyOutput792(state);
        applyOutput793(state);
        applyOutput794(state);
        applyOutput795(state);
        applyOutput796(state);
        applyOutput797(state);
        applyOutput798(state);
        applyOutput799(state);
        applyOutput800(state);
        applyOutput801(state);
        applyOutput802(state);
        applyOutput803(state);
        applyOutput804(state);
        applyOutput805(state);
        applyOutput806(state);
        applyOutput807(state);
        applyOutput808(state);
        applyOutput809(state);
        applyOutput810(state);
        applyOutput811(state);
        applyOutput812(state);
        applyOutput813(state);
        applyOutput814(state);
        applyOutput815(state);
        applyOutput816(state);
        applyOutput817(state);
        applyOutput818(state);
        applyOutput819(state);
        applyOutput820(state);
        applyOutput821(state);
        applyOutput822(state);
        applyOutput823(state);
        applyOutput824(state);
        applyOutput825(state);
        applyOutput826(state);
        applyOutput827(state);
        applyOutput828(state);
        applyOutput829(state);
        applyOutput830(state);
        applyOutput831(state);
        applyOutput832(state);
        applyOutput833(state);
        applyOutput834(state);
        applyOutput835(state);
        applyOutput836(state);
        applyOutput837(state);
        applyOutput838(state);
        applyOutput839(state);
        applyOutput840(state);
        applyOutput841(state);
        applyOutput842(state);
        applyOutput843(state);
        applyOutput844(state);
        applyOutput845(state);
        applyOutput846(state);
        applyOutput847(state);
        applyOutput848(state);
        applyOutput849(state);
        applyOutput850(state);
        applyOutput851(state);
        applyOutput852(state);
        applyOutput853(state);
        applyOutput854(state);
        applyOutput855(state);
        applyOutput856(state);
        applyOutput857(state);
        applyOutput858(state);
        applyOutput859(state);
        applyOutput860(state);
        applyOutput861(state);
        applyOutput862(state);
        applyOutput863(state);
        applyOutput864(state);
        applyOutput865(state);
        applyOutput866(state);
        applyOutput867(state);
        applyOutput868(state);
        applyOutput869(state);
        applyOutput870(state);
        applyOutput871(state);
        applyOutput872(state);
        applyOutput873(state);
        applyOutput874(state);
        applyOutput875(state);
        applyOutput876(state);
        applyOutput877(state);
        applyOutput878(state);
        applyOutput879(state);
        applyOutput880(state);
        applyOutput881(state);
        applyOutput882(state);
        applyOutput883(state);
        applyOutput884(state);
        applyOutput885(state);
        applyOutput886(state);
        applyOutput887(state);
        applyOutput888(state);
        applyOutput889(state);
        applyOutput890(state);
        applyOutput891(state);
        applyOutput892(state);
        applyOutput893(state);
        applyOutput894(state);
        applyOutput895(state);
        applyOutput896(state);
        applyOutput897(state);
        applyOutput898(state);
        applyOutput899(state);
        applyOutput900(state);
        applyOutput901(state);
        applyOutput902(state);
        applyOutput903(state);
        applyOutput904(state);
        applyOutput905(state);
        applyOutput906(state);
        applyOutput907(state);
        applyOutput908(state);
        applyOutput909(state);
        applyOutput910(state);
        applyOutput911(state);
        applyOutput912(state);
        applyOutput913(state);
        applyOutput914(state);
        applyOutput915(state);
        applyOutput916(state);
        applyOutput917(state);
        applyOutput918(state);
        applyOutput919(state);
        applyOutput920(state);
        applyOutput921(state);
        applyOutput922(state);
        applyOutput923(state);
        applyOutput924(state);
        applyOutput925(state);
        applyOutput926(state);
        applyOutput927(state);
        applyOutput928(state);
        applyOutput929(state);
        applyOutput930(state);
        applyOutput931(state);
        applyOutput932(state);
        applyOutput933(state);
        applyOutput934(state);
        applyOutput935(state);
        applyOutput936(state);
        applyOutput937(state);
        applyOutput938(state);
        applyOutput939(state);
        applyOutput940(state);
        applyOutput941(state);
        applyOutput942(state);
        applyOutput943(state);
        applyOutput944(state);
        applyOutput945(state);
        applyOutput946(state);
        applyOutput947(state);
        applyOutput948(state);
        applyOutput949(state);
        applyOutput950(state);
        applyOutput951(state);
        applyOutput952(state);
        applyOutput953(state);
        applyOutput954(state);
        applyOutput955(state);
        applyOutput956(state);
        applyOutput957(state);
        applyOutput958(state);
        applyOutput959(state);
        applyOutput960(state);
        applyOutput961(state);
        applyOutput962(state);
        applyOutput963(state);
        applyOutput964(state);
        applyOutput965(state);
        applyOutput966(state);
        applyOutput967(state);
        applyOutput968(state);
        applyOutput969(state);
        applyOutput970(state);
        applyOutput971(state);
        applyOutput972(state);
        applyOutput973(state);
        applyOutput974(state);
        applyOutput975(state);
        applyOutput976(state);
        applyOutput977(state);
        applyOutput978(state);
        applyOutput979(state);
        applyOutput980(state);
        applyOutput981(state);
        applyOutput982(state);
        applyOutput983(state);
        applyOutput984(state);
        applyOutput985(state);
        applyOutput986(state);
        applyOutput987(state);
        applyOutput988(state);
        applyOutput989(state);
        applyOutput990(state);
        applyOutput991(state);
        applyOutput992(state);
        applyOutput993(state);
        applyOutput994(state);
        applyOutput995(state);
        applyOutput996(state);
        applyOutput997(state);
        applyOutput998(state);
        applyOutput999(state);
        applyOutput1000(state);
        applyOutput1001(state);
        applyOutput1002(state);
        applyOutput1003(state);
        applyOutput1004(state);
        applyOutput1005(state);
        applyOutput1006(state);
        applyOutput1007(state);
        applyOutput1008(state);
        applyOutput1009(state);
        applyOutput1010(state);
        applyOutput1011(state);
        applyOutput1012(state);
        applyOutput1013(state);
        applyOutput1014(state);
        applyOutput1015(state);
        applyOutput1016(state);
        applyOutput1017(state);
        applyOutput1018(state);
        applyOutput1019(state);
        applyOutput1020(state);
        applyOutput1021(state);
        applyOutput1022(state);
        applyOutput1023(state);
        applyOutput1024(state);
        applyOutput1025(state);
        applyOutput1026(state);
        applyOutput1027(state);
        applyOutput1028(state);
        applyOutput1029(state);
        applyOutput1030(state);
        applyOutput1031(state);
        applyOutput1032(state);
        applyOutput1033(state);
        applyOutput1034(state);
        applyOutput1035(state);
        applyOutput1036(state);
        applyOutput1037(state);
        applyOutput1038(state);
        applyOutput1039(state);
        applyOutput1040(state);
        applyOutput1041(state);
        applyOutput1042(state);
        applyOutput1043(state);
        applyOutput1044(state);
        applyOutput1045(state);
        applyOutput1046(state);
        applyOutput1047(state);
        applyOutput1048(state);
        applyOutput1049(state);
        applyOutput1050(state);
        applyOutput1051(state);
        applyOutput1052(state);
        applyOutput1053(state);
        applyOutput1054(state);
        applyOutput1055(state);
        applyOutput1056(state);
        applyOutput1057(state);
        applyOutput1058(state);
        applyOutput1059(state);
        applyOutput1060(state);
        applyOutput1061(state);
        applyOutput1062(state);
        applyOutput1063(state);
        applyOutput1064(state);
        applyOutput1065(state);
        applyOutput1066(state);
        applyOutput1067(state);
        applyOutput1068(state);
        applyOutput1069(state);
        applyOutput1070(state);
        applyOutput1071(state);
        applyOutput1072(state);
        applyOutput1073(state);
        applyOutput1074(state);
        applyOutput1075(state);
        applyOutput1076(state);
        applyOutput1077(state);
        applyOutput1078(state);
        applyOutput1079(state);
        applyOutput1080(state);
        applyOutput1081(state);
        applyOutput1082(state);
        applyOutput1083(state);
        applyOutput1084(state);
        applyOutput1085(state);
        applyOutput1086(state);
        applyOutput1087(state);
        applyOutput1088(state);
        applyOutput1089(state);
        applyOutput1090(state);
        applyOutput1091(state);
        applyOutput1092(state);
        applyOutput1093(state);
        applyOutput1094(state);
        applyOutput1095(state);
        applyOutput1096(state);
        applyOutput1097(state);
        applyOutput1098(state);
        applyOutput1099(state);
        applyOutput1100(state);
        applyOutput1101(state);
        applyOutput1102(state);
        applyOutput1103(state);
        applyOutput1104(state);
        applyOutput1105(state);
        applyOutput1106(state);
        applyOutput1107(state);
        applyOutput1108(state);
        applyOutput1109(state);
        applyOutput1110(state);
        applyOutput1111(state);
        applyOutput1112(state);
        applyOutput1113(state);
        applyOutput1114(state);
        applyOutput1115(state);
        applyOutput1116(state);
        applyOutput1117(state);
        applyOutput1118(state);
        applyOutput1119(state);
        applyOutput1120(state);
        applyOutput1121(state);
        applyOutput1122(state);
        applyOutput1123(state);
        applyOutput1124(state);
        applyOutput1125(state);
        applyOutput1126(state);
        applyOutput1127(state);
        applyOutput1128(state);
        applyOutput1129(state);
        applyOutput1130(state);
        applyOutput1131(state);
        applyOutput1132(state);
        applyOutput1133(state);
        applyOutput1134(state);
        applyOutput1135(state);
        applyOutput1136(state);
        applyOutput1137(state);
        applyOutput1138(state);
        applyOutput1139(state);
        applyOutput1140(state);
        applyOutput1141(state);
        applyOutput1142(state);
        applyOutput1143(state);
        applyOutput1144(state);
        applyOutput1145(state);
        applyOutput1146(state);
        applyOutput1147(state);
        applyOutput1148(state);
        applyOutput1149(state);
        applyOutput1150(state);
        applyOutput1151(state);
        applyOutput1152(state);
        applyOutput1153(state);
        applyOutput1154(state);
        applyOutput1155(state);
        applyOutput1156(state);
        applyOutput1157(state);
        applyOutput1158(state);
        applyOutput1159(state);
        applyOutput1160(state);
        applyOutput1161(state);
        applyOutput1162(state);
        applyOutput1163(state);
        applyOutput1164(state);
        applyOutput1165(state);
        applyOutput1166(state);
        applyOutput1167(state);
        applyOutput1168(state);
        applyOutput1169(state);
        applyOutput1170(state);
        applyOutput1171(state);
        applyOutput1172(state);
        applyOutput1173(state);
        applyOutput1174(state);
        applyOutput1175(state);
        applyOutput1176(state);
        applyOutput1177(state);
        applyOutput1178(state);
        applyOutput1179(state);
        applyOutput1180(state);
        applyOutput1181(state);
        applyOutput1182(state);
        applyOutput1183(state);
        applyOutput1184(state);
        applyOutput1185(state);
        applyOutput1186(state);
        applyOutput1187(state);
        applyOutput1188(state);
        applyOutput1189(state);
        applyOutput1190(state);
        applyOutput1191(state);
        applyOutput1192(state);
        applyOutput1193(state);
        applyOutput1194(state);
        applyOutput1195(state);
        applyOutput1196(state);
        applyOutput1197(state);
        applyOutput1198(state);
        applyOutput1199(state);
        applyOutput1200(state);
        applyOutput1201(state);
        applyOutput1202(state);
        applyOutput1203(state);
        applyOutput1204(state);
        applyOutput1205(state);
        applyOutput1206(state);
        applyOutput1207(state);
        applyOutput1208(state);
        applyOutput1209(state);
        applyOutput1210(state);
        applyOutput1211(state);
        applyOutput1212(state);
        applyOutput1213(state);
        applyOutput1214(state);
        applyOutput1215(state);
        applyOutput1216(state);
        applyOutput1217(state);
        applyOutput1218(state);
        applyOutput1219(state);
        applyOutput1220(state);
        applyOutput1221(state);
        applyOutput1222(state);
        applyOutput1223(state);
        applyOutput1224(state);
        applyOutput1225(state);
        applyOutput1226(state);
        applyOutput1227(state);
        applyOutput1228(state);
        applyOutput1229(state);
        applyOutput1230(state);
        applyOutput1231(state);
        applyOutput1232(state);
        applyOutput1233(state);
        applyOutput1234(state);
        applyOutput1235(state);
        applyOutput1236(state);
        applyOutput1237(state);
        applyOutput1238(state);
        applyOutput1239(state);
        applyOutput1240(state);
        applyOutput1241(state);
        applyOutput1242(state);
        applyOutput1243(state);
        applyOutput1244(state);
        applyOutput1245(state);
        applyOutput1246(state);
        applyOutput1247(state);
        applyOutput1248(state);
        applyOutput1249(state);
        applyOutput1250(state);
        applyOutput1251(state);
        applyOutput1252(state);
        applyOutput1253(state);
        applyOutput1254(state);
        applyOutput1255(state);
        applyOutput1256(state);
        applyOutput1257(state);
        applyOutput1258(state);
        applyOutput1259(state);
        applyOutput1260(state);
        applyOutput1261(state);
        applyOutput1262(state);
        applyOutput1263(state);
        applyOutput1264(state);
        applyOutput1265(state);
        applyOutput1266(state);
        applyOutput1267(state);
        applyOutput1268(state);
        applyOutput1269(state);
        applyOutput1270(state);
        applyOutput1271(state);
        applyOutput1272(state);
        applyOutput1273(state);
        applyOutput1274(state);
        applyOutput1275(state);
        applyOutput1276(state);
        applyOutput1277(state);
        applyOutput1278(state);
        applyOutput1279(state);
        applyOutput1280(state);
        applyOutput1281(state);
        applyOutput1282(state);
        applyOutput1283(state);
        applyOutput1284(state);
        applyOutput1285(state);
        applyOutput1286(state);
        applyOutput1287(state);
        applyOutput1288(state);
        applyOutput1289(state);
        applyOutput1290(state);
        applyOutput1291(state);
        applyOutput1292(state);
        applyOutput1293(state);
        applyOutput1294(state);
        applyOutput1295(state);
        applyOutput1296(state);
        applyOutput1297(state);
        applyOutput1298(state);
        applyOutput1299(state);
        applyOutput1300(state);
        applyOutput1301(state);
        applyOutput1302(state);
        applyOutput1303(state);
        applyOutput1304(state);
        applyOutput1305(state);
        applyOutput1306(state);
        applyOutput1307(state);
        applyOutput1308(state);
        applyOutput1309(state);
        applyOutput1310(state);
        applyOutput1311(state);
        applyOutput1312(state);
        applyOutput1313(state);
        applyOutput1314(state);
        applyOutput1315(state);
        applyOutput1316(state);
        applyOutput1317(state);
        applyOutput1318(state);
        applyOutput1319(state);
        applyOutput1320(state);
        applyOutput1321(state);
        applyOutput1322(state);
        applyOutput1323(state);
        applyOutput1324(state);
        applyOutput1325(state);
        applyOutput1326(state);
        applyOutput1327(state);
        applyOutput1328(state);
        applyOutput1329(state);
        applyOutput1330(state);
        applyOutput1331(state);
        applyOutput1332(state);
        applyOutput1333(state);
        applyOutput1334(state);
        applyOutput1335(state);
        applyOutput1336(state);
        applyOutput1337(state);
        applyOutput1338(state);
        applyOutput1339(state);
        applyOutput1340(state);
        applyOutput1341(state);
        applyOutput1342(state);
        applyOutput1343(state);
        applyOutput1344(state);
        applyOutput1345(state);
        applyOutput1346(state);
        applyOutput1347(state);
        applyOutput1348(state);
        applyOutput1349(state);
        applyOutput1350(state);
        applyOutput1351(state);
        applyOutput1352(state);
        applyOutput1353(state);
        applyOutput1354(state);
        applyOutput1355(state);
        applyOutput1356(state);
        applyOutput1357(state);
        applyOutput1358(state);
        applyOutput1359(state);
        applyOutput1360(state);
        applyOutput1361(state);
        applyOutput1362(state);
        applyOutput1363(state);
        applyOutput1364(state);
        applyOutput1365(state);
        applyOutput1366(state);
        applyOutput1367(state);
        applyOutput1368(state);
        applyOutput1369(state);
        applyOutput1370(state);
        applyOutput1371(state);
        applyOutput1372(state);
        applyOutput1373(state);
        applyOutput1374(state);
        applyOutput1375(state);
        applyOutput1376(state);
        applyOutput1377(state);
        applyOutput1378(state);
        applyOutput1379(state);
        applyOutput1380(state);
        applyOutput1381(state);
        applyOutput1382(state);
        applyOutput1383(state);
        applyOutput1384(state);
        applyOutput1385(state);
        applyOutput1386(state);
        applyOutput1387(state);
        applyOutput1388(state);
        applyOutput1389(state);
        applyOutput1390(state);
        applyOutput1391(state);
        applyOutput1392(state);
        applyOutput1393(state);
        applyOutput1394(state);
        applyOutput1395(state);
        applyOutput1396(state);
        applyOutput1397(state);
        applyOutput1398(state);
        applyOutput1399(state);
        applyOutput1400(state);
        applyOutput1401(state);
        applyOutput1402(state);
        applyOutput1403(state);
        applyOutput1404(state);
        applyOutput1405(state);
        applyOutput1406(state);
        applyOutput1407(state);
        applyOutput1408(state);
        applyOutput1409(state);
        applyOutput1410(state);
        applyOutput1411(state);
        applyOutput1412(state);
        applyOutput1413(state);
        applyOutput1414(state);
        applyOutput1415(state);
        applyOutput1416(state);
        applyOutput1417(state);
        applyOutput1418(state);
        applyOutput1419(state);
        applyOutput1420(state);
        applyOutput1421(state);
        applyOutput1422(state);
        applyOutput1423(state);
        applyOutput1424(state);
        applyOutput1425(state);
        applyOutput1426(state);
        applyOutput1427(state);
        applyOutput1428(state);
        applyOutput1429(state);
        applyOutput1430(state);
        applyOutput1431(state);
        applyOutput1432(state);
        applyOutput1433(state);
        applyOutput1434(state);
        applyOutput1435(state);
        applyOutput1436(state);
        applyOutput1437(state);
        applyOutput1438(state);
        applyOutput1439(state);
        applyOutput1440(state);
        applyOutput1441(state);
        applyOutput1442(state);
        applyOutput1443(state);
        applyOutput1444(state);
        applyOutput1445(state);
        applyOutput1446(state);
        applyOutput1447(state);
        applyOutput1448(state);
        applyOutput1449(state);
        applyOutput1450(state);
        applyOutput1451(state);
        applyOutput1452(state);
        applyOutput1453(state);
        applyOutput1454(state);
        applyOutput1455(state);
        applyOutput1456(state);
        applyOutput1457(state);
        applyOutput1458(state);
        applyOutput1459(state);
        applyOutput1460(state);
        applyOutput1461(state);
        applyOutput1462(state);
        applyOutput1463(state);
        applyOutput1464(state);
        applyOutput1465(state);
        applyOutput1466(state);
        applyOutput1467(state);
        applyOutput1468(state);
        applyOutput1469(state);
        applyOutput1470(state);
        applyOutput1471(state);
        applyOutput1472(state);
        applyOutput1473(state);
        applyOutput1474(state);
        applyOutput1475(state);
        applyOutput1476(state);
        applyOutput1477(state);
        applyOutput1478(state);
        applyOutput1479(state);
        applyOutput1480(state);
        applyOutput1481(state);
        applyOutput1482(state);
        applyOutput1483(state);
        applyOutput1484(state);
        applyOutput1485(state);
        applyOutput1486(state);
        applyOutput1487(state);
        applyOutput1488(state);
        applyOutput1489(state);
        applyOutput1490(state);
        applyOutput1491(state);
        applyOutput1492(state);
        applyOutput1493(state);
        applyOutput1494(state);
        applyOutput1495(state);
        applyOutput1496(state);
        applyOutput1497(state);
        applyOutput1498(state);
        applyOutput1499(state);
        applyOutput1500(state);
        applyOutput1501(state);
        applyOutput1502(state);
        applyOutput1503(state);
        applyOutput1504(state);
        applyOutput1505(state);
        applyOutput1506(state);
        applyOutput1507(state);
        applyOutput1508(state);
        applyOutput1509(state);
        applyOutput1510(state);
        applyOutput1511(state);
        applyOutput1512(state);
        applyOutput1513(state);
        applyOutput1514(state);
        applyOutput1515(state);
        applyOutput1516(state);
        applyOutput1517(state);
        applyOutput1518(state);
        applyOutput1519(state);
        applyOutput1520(state);
        applyOutput1521(state);
        applyOutput1522(state);
        applyOutput1523(state);
        applyOutput1524(state);
        applyOutput1525(state);
        applyOutput1526(state);
        applyOutput1527(state);
        applyOutput1528(state);
        applyOutput1529(state);
        applyOutput1530(state);
        applyOutput1531(state);
        applyOutput1532(state);
        applyOutput1533(state);
        applyOutput1534(state);
        applyOutput1535(state);
        applyOutput1536(state);
        applyOutput1537(state);
        applyOutput1538(state);
        applyOutput1539(state);
        applyOutput1540(state);
        applyOutput1541(state);
        applyOutput1542(state);
        applyOutput1543(state);
        applyOutput1544(state);
        applyOutput1545(state);
        applyOutput1546(state);
        applyOutput1547(state);
        applyOutput1548(state);
        applyOutput1549(state);
        applyOutput1550(state);
        applyOutput1551(state);
        applyOutput1552(state);
        applyOutput1553(state);
        applyOutput1554(state);
        applyOutput1555(state);
        applyOutput1556(state);
        applyOutput1557(state);
        applyOutput1558(state);
        applyOutput1559(state);
        applyOutput1560(state);
        applyOutput1561(state);
        applyOutput1562(state);
        applyOutput1563(state);
        applyOutput1564(state);
        applyOutput1565(state);
        applyOutput1566(state);
        applyOutput1567(state);
        applyOutput1568(state);
        applyOutput1569(state);
        applyOutput1570(state);
        applyOutput1571(state);
        applyOutput1572(state);
        applyOutput1573(state);
        applyOutput1574(state);
        applyOutput1575(state);
        applyOutput1576(state);
        applyOutput1577(state);
        applyOutput1578(state);
        applyOutput1579(state);
        applyOutput1580(state);
        applyOutput1581(state);
        applyOutput1582(state);
        applyOutput1583(state);
        applyOutput1584(state);
        applyOutput1585(state);
        applyOutput1586(state);
        applyOutput1587(state);
        applyOutput1588(state);
        applyOutput1589(state);
        applyOutput1590(state);
        applyOutput1591(state);
        applyOutput1592(state);
        applyOutput1593(state);
        applyOutput1594(state);
        applyOutput1595(state);
        applyOutput1596(state);
        applyOutput1597(state);
        applyOutput1598(state);
        applyOutput1599(state);
        applyOutput1600(state);
        applyOutput1601(state);
        applyOutput1602(state);
        applyOutput1603(state);
        applyOutput1604(state);
        applyOutput1605(state);
        applyOutput1606(state);
        applyOutput1607(state);
        applyOutput1608(state);
        applyOutput1609(state);
        applyOutput1610(state);
        applyOutput1611(state);
        applyOutput1612(state);
        applyOutput1613(state);
        applyOutput1614(state);
        applyOutput1615(state);
        applyOutput1616(state);
        applyOutput1617(state);
        applyOutput1618(state);
        applyOutput1619(state);
        applyOutput1620(state);
        applyOutput1621(state);
        applyOutput1622(state);
        applyOutput1623(state);
        applyOutput1624(state);
        applyOutput1625(state);
        applyOutput1626(state);
        applyOutput1627(state);
        applyOutput1628(state);
        applyOutput1629(state);
        applyOutput1630(state);
        applyOutput1631(state);
        applyOutput1632(state);
        applyOutput1633(state);
        applyOutput1634(state);
        applyOutput1635(state);
        applyOutput1636(state);
        applyOutput1637(state);
        applyOutput1638(state);
        applyOutput1639(state);
        applyOutput1640(state);
        applyOutput1641(state);
        applyOutput1642(state);
        applyOutput1643(state);
        applyOutput1644(state);
        applyOutput1645(state);
        applyOutput1646(state);
        applyOutput1647(state);
        applyOutput1648(state);
        applyOutput1649(state);
        applyOutput1650(state);
        applyOutput1651(state);
        applyOutput1652(state);
        applyOutput1653(state);
        applyOutput1654(state);
        applyOutput1655(state);
        applyOutput1656(state);
        applyOutput1657(state);
        applyOutput1658(state);
        applyOutput1659(state);
        applyOutput1660(state);
        applyOutput1661(state);
        applyOutput1662(state);
        applyOutput1663(state);
        applyOutput1664(state);
        applyOutput1665(state);
        applyOutput1666(state);
        applyOutput1667(state);
        applyOutput1668(state);
        applyOutput1669(state);
        applyOutput1670(state);
        applyOutput1671(state);
        applyOutput1672(state);
        applyOutput1673(state);
        applyOutput1674(state);
        applyOutput1675(state);
        applyOutput1676(state);
        applyOutput1677(state);
        applyOutput1678(state);
        applyOutput1679(state);
        applyOutput1680(state);
        applyOutput1681(state);
        applyOutput1682(state);
        applyOutput1683(state);
        applyOutput1684(state);
        applyOutput1685(state);
        applyOutput1686(state);
        applyOutput1687(state);
        applyOutput1688(state);
        applyOutput1689(state);
        applyOutput1690(state);
        applyOutput1691(state);
        applyOutput1692(state);
        applyOutput1693(state);
        applyOutput1694(state);
        applyOutput1695(state);
        applyOutput1696(state);
        applyOutput1697(state);
        applyOutput1698(state);
        applyOutput1699(state);
        applyOutput1700(state);
        applyOutput1701(state);
        applyOutput1702(state);
        applyOutput1703(state);
        applyOutput1704(state);
        applyOutput1705(state);
        applyOutput1706(state);
        applyOutput1707(state);
        applyOutput1708(state);
        applyOutput1709(state);
        applyOutput1710(state);
        applyOutput1711(state);
        applyOutput1712(state);
        applyOutput1713(state);
        applyOutput1714(state);
        applyOutput1715(state);
        applyOutput1716(state);
        applyOutput1717(state);
        applyOutput1718(state);
        applyOutput1719(state);
        applyOutput1720(state);
        applyOutput1721(state);
        applyOutput1722(state);
        applyOutput1723(state);
        applyOutput1724(state);
        applyOutput1725(state);
        applyOutput1726(state);
        applyOutput1727(state);
        applyOutput1728(state);
        applyOutput1729(state);
        applyOutput1730(state);
        applyOutput1731(state);
        applyOutput1732(state);
        applyOutput1733(state);
        applyOutput1734(state);
        applyOutput1735(state);
        applyOutput1736(state);
        applyOutput1737(state);
        applyOutput1738(state);
        applyOutput1739(state);
        applyOutput1740(state);
        applyOutput1741(state);
        applyOutput1742(state);
        applyOutput1743(state);
        applyOutput1744(state);
        applyOutput1745(state);
        applyOutput1746(state);
        applyOutput1747(state);
        applyOutput1748(state);
        applyOutput1749(state);
        applyOutput1750(state);
        applyOutput1751(state);
        applyOutput1752(state);
        applyOutput1753(state);
        applyOutput1754(state);
        applyOutput1755(state);
        applyOutput1756(state);
        applyOutput1757(state);
        applyOutput1758(state);
        applyOutput1759(state);
        applyOutput1760(state);
        applyOutput1761(state);
        applyOutput1762(state);
        applyOutput1763(state);
        applyOutput1764(state);
        applyOutput1765(state);
        applyOutput1766(state);
        applyOutput1767(state);
        applyOutput1768(state);
        applyOutput1769(state);
        applyOutput1770(state);
        applyOutput1771(state);
        applyOutput1772(state);
        applyOutput1773(state);
        applyOutput1774(state);
        applyOutput1775(state);
        applyOutput1776(state);
        applyOutput1777(state);
        applyOutput1778(state);
        applyOutput1779(state);
        applyOutput1780(state);
        applyOutput1781(state);
        applyOutput1782(state);
        applyOutput1783(state);
        applyOutput1784(state);
        applyOutput1785(state);
        applyOutput1786(state);
        applyOutput1787(state);
        applyOutput1788(state);
        applyOutput1789(state);
        applyOutput1790(state);
        applyOutput1791(state);
        applyOutput1792(state);
        applyOutput1793(state);
        applyOutput1794(state);
        applyOutput1795(state);
        applyOutput1796(state);
        applyOutput1797(state);
        applyOutput1798(state);
        applyOutput1799(state);
        applyOutput1800(state);
        applyOutput1801(state);
        applyOutput1802(state);
        applyOutput1803(state);
        applyOutput1804(state);
        applyOutput1805(state);
        applyOutput1806(state);
        applyOutput1807(state);
        applyOutput1808(state);
        applyOutput1809(state);
        applyOutput1810(state);
        applyOutput1811(state);
        applyOutput1812(state);
        applyOutput1813(state);
        applyOutput1814(state);
        applyOutput1815(state);
        applyOutput1816(state);
        applyOutput1817(state);
        applyOutput1818(state);
        applyOutput1819(state);
        applyOutput1820(state);
        applyOutput1821(state);
        applyOutput1822(state);
        applyOutput1823(state);
        applyOutput1824(state);
        applyOutput1825(state);
        applyOutput1826(state);
        applyOutput1827(state);
        applyOutput1828(state);
        applyOutput1829(state);
        applyOutput1830(state);
        applyOutput1831(state);
        applyOutput1832(state);
        applyOutput1833(state);
        applyOutput1834(state);

        if (debug) dbg.println();
    }


    private void applyOutput0(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle0 == null) {
                outElem0.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_tunnel\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle0.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_tunnel\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_tunnel\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1(State state) {
        try {
            String value;
            try {
                value = "Eerste Heinenoordtunnel";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Eerste Heinenoordtunnel\"\" failed.", e, state);
            }

            String txt = value;
            outText1.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_tunnel\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_tunnel\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput2(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle2 == null) {
                outElem2.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle2.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput3(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle3 == null) {
                outElem3.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle3.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput4(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle4 == null) {
                outElem4.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle4.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput5(State state) {
        try {
            String value;
            try {
                value = "visible";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"visible\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle5 == null) {
                outElem5.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle5.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput6(State state) {
        try {
            String value;
            try {
                value = "visible";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"visible\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle6 == null) {
                outElem6.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle6.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput7(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle7 == null) {
                outElem7.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle7.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_vri_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput8(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle8 == null) {
                outElem8.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle8.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput9(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle9 == null) {
                outElem9.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle9.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput10(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle10 == null) {
                outElem10.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_openen_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle10.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_openen_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_buis_openen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput11(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1)) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit and Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle11 == null) {
                outElem11.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle11.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput12(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1)) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit and Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle12 == null) {
                outElem12.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle12.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput13(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_PopUp_Venster.lp_Tunnel_Verkeersbuis1_PopUp_Venster == 1) || (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_PopUp_Venster.aan or Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle13 == null) {
                outElem13.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle13.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput14(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_PopUp_Venster.lp_Tunnel_Verkeersbuis1_PopUp_Venster == 1) || (state.s_Tunnel_Verkeersbuis1_KnopCalamiteit_Waarnemer.lp_Tunnel_Verkeersbuis1_KnopCalamiteit_Waarnemer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_PopUp_Venster.aan or Tunnel_Verkeersbuis1_KnopCalamiteit_Waarnemer.ingedrukt: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle14 == null) {
                outElem14.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"pop_up_bevestigen_calamiteit_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle14.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"pop_up_bevestigen_calamiteit_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"pop_up_bevestigen_calamiteit_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput15(State state) {
        try {
            String value;
            try {
                value = "Re";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Re\"\" failed.", e, state);
            }

            String txt = value;
            outText15.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput16(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) ? "grey" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open: \"grey\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle16 == null) {
                outElem16.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle16.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput17(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle17 == null) {
                outElem17.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle17.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput18(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 0) ? "Operationeel" : ((state.s_Tunnel_Verkeersbuis1_Standby.lp_Tunnel_Verkeersbuis1_Standby == 1) ? "Standby" : ((state.s_Tunnel_Verkeersbuis1_Evacuatie.lp_Tunnel_Verkeersbuis1_Evacuatie == 1) ? "Evacuatie" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "Calamiteit" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 3) ? "Ondersteunend" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 2) ? "Herstel" : ((state.s_Tunnel_Verkeersbuis1_Onderhoud.lp_Tunnel_Verkeersbuis1_Onderhoud == 1) ? "Onderhoud" : ("")))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.operationeel: \"Operationeel\" elif Tunnel_Verkeersbuis1_Standby.aan: \"Standby\" elif Tunnel_Verkeersbuis1_Evacuatie.aan: \"Evacuatie\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"Calamiteit\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.ondersteunend: \"Ondersteunend\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.herstel: \"Herstel\" elif Tunnel_Verkeersbuis1_Onderhoud.aan: \"Onderhoud\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText18.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput19(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 0) ? "White" : ((state.s_Tunnel_Verkeersbuis1_Standby.lp_Tunnel_Verkeersbuis1_Standby == 1) ? "Yellow" : ((state.s_Tunnel_Verkeersbuis1_Evacuatie.lp_Tunnel_Verkeersbuis1_Evacuatie == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 3) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 2) ? "mediumaquamarine" : ((state.s_Tunnel_Verkeersbuis1_Onderhoud.lp_Tunnel_Verkeersbuis1_Onderhoud == 1) ? "mediumaquamarine" : ("")))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.operationeel: \"White\" elif Tunnel_Verkeersbuis1_Standby.aan: \"Yellow\" elif Tunnel_Verkeersbuis1_Evacuatie.aan: \"darkorange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"darkorange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.ondersteunend: \"darkorange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.herstel: \"mediumaquamarine\" elif Tunnel_Verkeersbuis1_Onderhoud.aan: \"mediumaquamarine\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle19 == null) {
                outElem19.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle19.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Text_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput20(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_StandVerkeersbuis.operationeel: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle20 == null) {
                outElem20.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle20.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput21(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_Standby.lp_Tunnel_Verkeersbuis1_Standby == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_Standby.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle21 == null) {
                outElem21.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle21.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_standby_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput22(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_Evacuatie.lp_Tunnel_Verkeersbuis1_Evacuatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_Evacuatie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle22 == null) {
                outElem22.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle22.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput23(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle23 == null) {
                outElem23.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle23.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput24(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_StandVerkeersbuis.ondersteunend: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle24 == null) {
                outElem24.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle24.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput25(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_StandVerkeersbuis.herstel: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle25 == null) {
                outElem25.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle25.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_herstel_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput26(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis1_Onderhoud.lp_Tunnel_Verkeersbuis1_Onderhoud == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis1_Onderhoud.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle26 == null) {
                outElem26.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle26.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput27(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle27 == null) {
                outElem27.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle27.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_operationeel_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput28(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle28 == null) {
                outElem28.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle28.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_standby_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput29(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle29 == null) {
                outElem29.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle29.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_evacuatie_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput30(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle30 == null) {
                outElem30.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle30.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_calamiteit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput31(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle31 == null) {
                outElem31.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle31.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_ondersteunend_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput32(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle32 == null) {
                outElem32.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle32.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_herstel_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput33(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle33 == null) {
                outElem33.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle33.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_onderhoud_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput34(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle34 == null) {
                outElem34.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle34.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_operationeel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput35(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle35 == null) {
                outElem35.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle35.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_standby_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput36(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle36 == null) {
                outElem36.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle36.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_evacuatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput37(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle37 == null) {
                outElem37.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle37.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_calamiteit_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput38(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle38 == null) {
                outElem38.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle38.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_ondersteunend_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput39(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle39 == null) {
                outElem39.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle39.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_herstel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput40(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle40 == null) {
                outElem40.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle40.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_onderhoud_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput41(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_bedienmenu_voor_verkeerslichtenstanden.lp_rb_bedienmenu_voor_verkeerslichtenstanden == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_bedienmenu_voor_verkeerslichtenstanden.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle41 == null) {
                outElem41.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_vri_drop_down_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle41.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_vri_drop_down_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_vri_drop_down_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput42(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_bedienmenu_voor_verkeerslichtenstanden.lp_rb_bedienmenu_voor_verkeerslichtenstanden == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_bedienmenu_voor_verkeerslichtenstanden.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle42 == null) {
                outElem42.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bedienmenu_voor_verkeerslichtenstanden_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle42.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bedienmenu_voor_verkeerslichtenstanden_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bedienmenu_voor_verkeerslichtenstanden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput43(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle43 == null) {
                outElem43.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_sluiten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle43.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_sluiten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_buis_sluiten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput44(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 0)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 0)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.uit and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.uit and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.uit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle44 == null) {
                outElem44.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_openen_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle44.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_openen_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_buis_openen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput45(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "Dicht" : ((((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 0) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 0)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 0)) ? "Open" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"Dicht\" elif Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.uit and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.uit and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.uit: \"Open\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText45.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_indicatie_buis_open_of_dicht_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Text_indicatie_buis_open_of_dicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput46(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "orange" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"orange\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle46 == null) {
                outElem46.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_indicatie_buis_open_of_dicht_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle46.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_indicatie_buis_open_of_dicht_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Text_indicatie_buis_open_of_dicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput47(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 6) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle47 == null) {
                outElem47.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_links_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle47.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_links_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_camera_links_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput48(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle48 == null) {
                outElem48.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle48.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput49(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle49 == null) {
                outElem49.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle49.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput50(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle50 == null) {
                outElem50.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle50.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput51(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle51 == null) {
                outElem51.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle51.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput52(State state) {
        try {
            String value;
            try {
                value = "visible";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"visible\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle52 == null) {
                outElem52.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle52.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput53(State state) {
        try {
            String value;
            try {
                value = "visible";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"visible\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle53 == null) {
                outElem53.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle53.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_kijk_camera_drop_down_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput54(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle54 == null) {
                outElem54.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle54.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_vri_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput55(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle55 == null) {
                outElem55.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle55.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_vri_drop_down_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput56(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle56 == null) {
                outElem56.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle56.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_buis_sluiten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput57(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle57 == null) {
                outElem57.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_openen_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle57.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_buis_openen_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_buis_openen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput58(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1)) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit and Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle58 == null) {
                outElem58.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle58.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_sluiten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput59(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1)) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit and Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle59 == null) {
                outElem59.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle59.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_buis_openen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput60(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_PopUp_Venster.lp_Tunnel_Verkeersbuis2_PopUp_Venster == 1) || (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_PopUp_Venster.aan or Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle60 == null) {
                outElem60.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle60.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_niet_beschikbaar_calamiteit_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput61(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_PopUp_Venster.lp_Tunnel_Verkeersbuis2_PopUp_Venster == 1) || (state.s_Tunnel_Verkeersbuis2_KnopCalamiteit_Waarnemer.lp_Tunnel_Verkeersbuis2_KnopCalamiteit_Waarnemer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_PopUp_Venster.aan or Tunnel_Verkeersbuis2_KnopCalamiteit_Waarnemer.ingedrukt: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle61 == null) {
                outElem61.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"pop_up_bevestigen_calamiteit_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle61.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"pop_up_bevestigen_calamiteit_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"pop_up_bevestigen_calamiteit_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput62(State state) {
        try {
            String value;
            try {
                value = "Li";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Li\"\" failed.", e, state);
            }

            String txt = value;
            outText62.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput63(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) ? "grey" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open: \"grey\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle63 == null) {
                outElem63.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle63.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput64(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle64 == null) {
                outElem64.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle64.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput65(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 0) ? "Operationeel" : ((state.s_Tunnel_Verkeersbuis2_Standby.lp_Tunnel_Verkeersbuis2_Standby == 1) ? "Standby" : ((state.s_Tunnel_Verkeersbuis2_Evacuatie.lp_Tunnel_Verkeersbuis2_Evacuatie == 1) ? "Evacuatie" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "Calamiteit" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 3) ? "Ondersteunend" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 2) ? "Herstel" : ((state.s_Tunnel_Verkeersbuis2_Onderhoud.lp_Tunnel_Verkeersbuis2_Onderhoud == 1) ? "Onderhoud" : ("")))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.operationeel: \"Operationeel\" elif Tunnel_Verkeersbuis2_Standby.aan: \"Standby\" elif Tunnel_Verkeersbuis2_Evacuatie.aan: \"Evacuatie\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"Calamiteit\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.ondersteunend: \"Ondersteunend\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.herstel: \"Herstel\" elif Tunnel_Verkeersbuis2_Onderhoud.aan: \"Onderhoud\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText65.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_knop_drop-down_menu_verkeersbuis_states_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Text_knop_drop-down_menu_verkeersbuis_states_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput66(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 0) ? "White" : ((state.s_Tunnel_Verkeersbuis2_Standby.lp_Tunnel_Verkeersbuis2_Standby == 1) ? "Yellow" : ((state.s_Tunnel_Verkeersbuis2_Evacuatie.lp_Tunnel_Verkeersbuis2_Evacuatie == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 3) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 2) ? "mediumaquamarine" : ((state.s_Tunnel_Verkeersbuis2_Onderhoud.lp_Tunnel_Verkeersbuis2_Onderhoud == 1) ? "mediumaquamarine" : ("white")))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.operationeel: \"White\" elif Tunnel_Verkeersbuis2_Standby.aan: \"Yellow\" elif Tunnel_Verkeersbuis2_Evacuatie.aan: \"darkorange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"darkorange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.ondersteunend: \"darkorange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.herstel: \"mediumaquamarine\" elif Tunnel_Verkeersbuis2_Onderhoud.aan: \"mediumaquamarine\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle66 == null) {
                outElem66.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_knop_drop-down_menu_verkeersbuis_states_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle66.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_knop_drop-down_menu_verkeersbuis_states_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Text_knop_drop-down_menu_verkeersbuis_states_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput67(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_StandVerkeersbuis.operationeel: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle67 == null) {
                outElem67.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle67.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_operationeel_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput68(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_Standby.lp_Tunnel_Verkeersbuis2_Standby == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_Standby.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle68 == null) {
                outElem68.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle68.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_standby_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput69(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_Evacuatie.lp_Tunnel_Verkeersbuis2_Evacuatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_Evacuatie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle69 == null) {
                outElem69.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle69.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput70(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle70 == null) {
                outElem70.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle70.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput71(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_StandVerkeersbuis.ondersteunend: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle71 == null) {
                outElem71.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle71.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput72(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_StandVerkeersbuis.herstel: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle72 == null) {
                outElem72.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle72.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_herstel_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput73(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1) && (state.s_Tunnel_Verkeersbuis2_Onderhoud.lp_Tunnel_Verkeersbuis2_Onderhoud == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_drop_down_menu_buis_states.open and Tunnel_Verkeersbuis2_Onderhoud.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle73 == null) {
                outElem73.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle73.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput74(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle74 == null) {
                outElem74.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle74.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_operationeel_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput75(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle75 == null) {
                outElem75.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle75.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_standby_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput76(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle76 == null) {
                outElem76.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle76.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_evacuatie_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput77(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle77 == null) {
                outElem77.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle77.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_calamiteit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput78(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle78 == null) {
                outElem78.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle78.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_ondersteunend_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput79(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle79 == null) {
                outElem79.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle79.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_herstel_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput80(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle80 == null) {
                outElem80.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle80.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_onderhoud_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput81(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle81 == null) {
                outElem81.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle81.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_operationeel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_operationeel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput82(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle82 == null) {
                outElem82.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle82.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_standby_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_standby_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput83(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle83 == null) {
                outElem83.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle83.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_evacuatie_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_evacuatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput84(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle84 == null) {
                outElem84.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle84.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_calamiteit_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_calamiteit_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput85(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle85 == null) {
                outElem85.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle85.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_ondersteunend_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_ondersteunend_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput86(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle86 == null) {
                outElem86.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle86.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_herstel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_herstel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput87(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle87 == null) {
                outElem87.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle87.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"drop_down_menu_stand_buis_onderhoud_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"drop_down_menu_stand_buis_onderhoud_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput88(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_bedienmenu_voor_verkeerslichtenstanden.lp_lb_bedienmenu_voor_verkeerslichtenstanden == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_bedienmenu_voor_verkeerslichtenstanden.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle88 == null) {
                outElem88.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_vri_drop_down_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle88.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_vri_drop_down_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_vri_drop_down_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput89(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_bedienmenu_voor_verkeerslichtenstanden.lp_lb_bedienmenu_voor_verkeerslichtenstanden == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_bedienmenu_voor_verkeerslichtenstanden.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle89 == null) {
                outElem89.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bedienmenu_voor_verkeerslichtenstanden_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle89.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bedienmenu_voor_verkeerslichtenstanden_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bedienmenu_voor_verkeerslichtenstanden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput90(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle90 == null) {
                outElem90.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_sluiten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle90.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_sluiten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_buis_sluiten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput91(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 0)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 0)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.uit and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.uit and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.uit: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle91 == null) {
                outElem91.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_openen_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle91.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_ingedrukt_buis_openen_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_ingedrukt_buis_openen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput92(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "Dicht" : ((((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 0) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 0)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 0)) ? "Open" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"Dicht\" elif Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.uit and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.uit and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.uit: \"Open\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText92.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_indicatie_buis_open_of_dicht_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Text_indicatie_buis_open_of_dicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput93(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "orange" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"orange\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle93 == null) {
                outElem93.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_indicatie_buis_open_of_dicht_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle93.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Text_indicatie_buis_open_of_dicht_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Text_indicatie_buis_open_of_dicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput94(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 6) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle94 == null) {
                outElem94.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle94.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_camera_rechts_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput95(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle95 == null) {
                outElem95.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_links_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle95.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_primaire_bediening_niet_beschikbaar_camera_links_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_primaire_bediening_niet_beschikbaar_camera_links_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput96(State state) {
        try {
            String value;
            try {
                value = (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) ? "translate(0,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) ? "translate(100,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) ? "translate(200,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) ? "translate(300,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) ? "translate(400,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) ? "translate(500,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) ? "translate(600,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) ? "translate(700,0)" : ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) ? "translate(800,0)" : ("translate(2000,2000)")))))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"translate(0,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"translate(100,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie3: \"translate(200,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"translate(300,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"translate(400,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"translate(500,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie7: \"translate(600,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"translate(700,0)\" elif besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"translate(800,0)\" else \"translate(2000,2000)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle96 == null) {
                outElem96.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_sectie_voor_detail_plattegrond\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle96.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_sectie_voor_detail_plattegrond\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"geselecteerde_sectie_voor_detail_plattegrond\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput97(State state) {
        try {
            String value;
            try {
                value = "Re";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Re\"\" failed.", e, state);
            }

            String txt = value;
            outText97.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_op_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_buis_op_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput98(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle98 == null) {
                outElem98.setAttribute("stroke", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"punt_richtingspijl_links_rechter_buis\" attr \"stroke\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle98.getStyle().setProperty("stroke", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"punt_richtingspijl_links_rechter_buis\" attr \"stroke\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"stroke\" of the SVG element with id \"punt_richtingspijl_links_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput99(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle99 == null) {
                outElem99.setAttribute("stroke", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"horizontaal_richtingspijl_rechter_buis\" attr \"stroke\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle99.getStyle().setProperty("stroke", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"horizontaal_richtingspijl_rechter_buis\" attr \"stroke\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"stroke\" of the SVG element with id \"horizontaal_richtingspijl_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput100(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle100 == null) {
                outElem100.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_op_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle100.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_op_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_buis_op_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput101(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 3) ? "orange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 2) ? "mediumaquamarine" : ((state.s_Tunnel_Verkeersbuis1_Onderhoud.lp_Tunnel_Verkeersbuis1_Onderhoud == 1) ? "mediumseagreen" : (((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "black" : ("grey")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"darkorange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.ondersteunend: \"orange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.herstel: \"mediumaquamarine\" elif Tunnel_Verkeersbuis1_Onderhoud.aan: \"mediumseagreen\" elif Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan or Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"black\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle101 == null) {
                outElem101.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"weg_binnen_tunnel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle101.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"weg_binnen_tunnel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"weg_binnen_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput102(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 3) ? "orange" : ((state.s_Tunnel_Verkeersbuis1_StandVerkeersbuis.lp_Tunnel_Verkeersbuis1_StandVerkeersbuis == 2) ? "mediumaquamarine" : ((state.s_Tunnel_Verkeersbuis1_Onderhoud.lp_Tunnel_Verkeersbuis1_Onderhoud == 1) ? "mediumseagreen" : (((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "black" : ("grey")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_StandVerkeersbuis.calamiteit: \"darkorange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.ondersteunend: \"orange\" elif Tunnel_Verkeersbuis1_StandVerkeersbuis.herstel: \"mediumaquamarine\" elif Tunnel_Verkeersbuis1_Onderhoud.aan: \"mediumseagreen\" elif Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan or Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"black\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle102 == null) {
                outElem102.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"aanduiding_richting_tunnel_buis_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle102.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"aanduiding_richting_tunnel_buis_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"aanduiding_richting_tunnel_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput103(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle103 == null) {
                outElem103.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera1_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle103.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera1_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera1_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput104(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 2) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle104 == null) {
                outElem104.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera2_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle104.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera2_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera2_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput105(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 3) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera3: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle105 == null) {
                outElem105.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera3_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle105.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera3_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera3_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput106(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 4) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle106 == null) {
                outElem106.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle106.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput107(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 5) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle107 == null) {
                outElem107.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle107.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput108(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 6) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle108 == null) {
                outElem108.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera6_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle108.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera6_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera6_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput109(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle109 == null) {
                outElem109.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"rood_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle109.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"rood_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"rood_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput110(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 2) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 2)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.geel: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle110 == null) {
                outElem110.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"oranje_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle110.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"oranje_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"oranje_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput111(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle111 == null) {
                outElem111.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"groen_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle111.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"groen_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"groen_licht_verkeerslicht_overzichtsplattengrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput112(State state) {
        try {
            String value;
            try {
                value = ((((((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 2)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 2)) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 2)) ? "black" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood or Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.geel: \"black\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle112 == null) {
                outElem112.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"achtergrond_verkeerslicht_overzichtsplattegrond_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle112.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"achtergrond_verkeerslicht_overzichtsplattegrond_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"achtergrond_verkeerslicht_overzichtsplattegrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput113(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle113 == null) {
                outElem113.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle113.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_overzichtsplattengrond_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"slagboom_overzichtsplattengrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput114(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.aan: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle114 == null) {
                outElem114.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_dicht_overzichtsplattegrond_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle114.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_dicht_overzichtsplattegrond_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"slagboom_dicht_overzichtsplattegrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput115(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 0)) || ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 0) && ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 0)))) || ((state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 0) && ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 0)))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.uit or Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.uit and (Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.uit) or Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.uit and (Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.uit): \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle115 == null) {
                outElem115.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"vervagen_slagboom_dicht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle115.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"vervagen_slagboom_dicht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"vervagen_slagboom_dicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput116(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle116 == null) {
                outElem116.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_plattegrond_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle116.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_plattegrond_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_plattegrond_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput117(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 3) ? "orange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 2) ? "mediumaquamarine" : ((state.s_Tunnel_Verkeersbuis2_Onderhoud.lp_Tunnel_Verkeersbuis2_Onderhoud == 1) ? "mediumseagreen" : (((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "black" : ("grey")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"darkorange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.ondersteunend: \"orange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.herstel: \"mediumaquamarine\" elif Tunnel_Verkeersbuis2_Onderhoud.aan: \"mediumseagreen\" elif Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan or Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"black\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle117 == null) {
                outElem117.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"weg_binnen_tunnel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle117.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"weg_binnen_tunnel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"weg_binnen_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput118(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 1) ? "darkorange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 3) ? "orange" : ((state.s_Tunnel_Verkeersbuis2_StandVerkeersbuis.lp_Tunnel_Verkeersbuis2_StandVerkeersbuis == 2) ? "mediumaquamarine" : ((state.s_Tunnel_Verkeersbuis2_Onderhoud.lp_Tunnel_Verkeersbuis2_Onderhoud == 1) ? "mediumseagreen" : (((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "black" : ("grey")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_StandVerkeersbuis.calamiteit: \"darkorange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.ondersteunend: \"orange\" elif Tunnel_Verkeersbuis2_StandVerkeersbuis.herstel: \"mediumaquamarine\" elif Tunnel_Verkeersbuis2_Onderhoud.aan: \"mediumseagreen\" elif Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan or Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"black\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle118 == null) {
                outElem118.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"aanduiding_richting_tunnel_buis_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle118.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"aanduiding_richting_tunnel_buis_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"aanduiding_richting_tunnel_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput119(State state) {
        try {
            String value;
            try {
                value = "Li";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Li\"\" failed.", e, state);
            }

            String txt = value;
            outText119.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_op_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_buis_op_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput120(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle120 == null) {
                outElem120.setAttribute("stroke", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"punt_richtingspijl_rechts_linker_buis\" attr \"stroke\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle120.getStyle().setProperty("stroke", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"punt_richtingspijl_rechts_linker_buis\" attr \"stroke\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"stroke\" of the SVG element with id \"punt_richtingspijl_rechts_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput121(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle121 == null) {
                outElem121.setAttribute("stroke", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"horizontaal_richtingspijl_linker_buis\" attr \"stroke\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle121.getStyle().setProperty("stroke", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"horizontaal_richtingspijl_linker_buis\" attr \"stroke\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"stroke\" of the SVG element with id \"horizontaal_richtingspijl_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput122(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle122 == null) {
                outElem122.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_op_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle122.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_buis_op_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_buis_op_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput123(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle123 == null) {
                outElem123.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera1_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle123.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera1_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera1_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput124(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 2) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle124 == null) {
                outElem124.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera2_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle124.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera2_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera2_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput125(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 3) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera3: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle125 == null) {
                outElem125.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera3_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle125.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera3_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera3_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput126(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 4) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle126 == null) {
                outElem126.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera4_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle126.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera4_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera4_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput127(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 5) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle127 == null) {
                outElem127.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle127.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_rechts_gericht_camera5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput128(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 6) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle128 == null) {
                outElem128.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle128.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geselecteerde_camera_overzichtsplattegrond_links_gericht_camera6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput129(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle129 == null) {
                outElem129.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"rood_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle129.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"rood_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"rood_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput130(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 2) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 2)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.geel: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle130 == null) {
                outElem130.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"oranje_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle130.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"oranje_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"oranje_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput131(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle131 == null) {
                outElem131.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"groen_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle131.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"groen_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"groen_licht_verkeerslicht_overzichtsplattengrond_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput132(State state) {
        try {
            String value;
            try {
                value = ((((((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 2)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 2)) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 2)) ? "black" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood or Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.geel: \"black\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle132 == null) {
                outElem132.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"achtergrond_verkeerslicht_overzichtsplattegrond_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle132.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"achtergrond_verkeerslicht_overzichtsplattegrond_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"achtergrond_verkeerslicht_overzichtsplattegrond_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput133(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle133 == null) {
                outElem133.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_overzichtsplattengrond_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle133.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_overzichtsplattengrond_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"slagboom_overzichtsplattengrond_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput134(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.aan: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle134 == null) {
                outElem134.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_dicht_overzichtsplattegrond_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle134.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"slagboom_dicht_overzichtsplattegrond_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"slagboom_dicht_overzichtsplattegrond_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput135(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 0)) || ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 0) && ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 0)))) || ((state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 0) && ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 0)))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.uit or Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.uit and (Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.uit) or Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.uit and (Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.uit): \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle135 == null) {
                outElem135.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"vervagen_slagboom_dicht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle135.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"vervagen_slagboom_dicht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"vervagen_slagboom_dicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput136(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle136 == null) {
                outElem136.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_pijl_rechts_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle136.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_pijl_rechts_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_pijl_rechts_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput137(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle137 == null) {
                outElem137.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_pijl_rechts_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle137.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_pijl_rechts_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_pijl_rechts_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput138(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle138 == null) {
                outElem138.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_active_tab_systemen_en_detecties_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle138.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_active_tab_systemen_en_detecties_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_active_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput139(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle139 == null) {
                outElem139.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_inactive_tab_systemen_en_detecties_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle139.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_inactive_tab_systemen_en_detecties_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_inactive_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput140(State state) {
        try {
            String value;
            try {
                value = "Re";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Re\"\" failed.", e, state);
            }

            String txt = value;
            outText140.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_active_tab_systemen_en_detecties_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_active_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput141(State state) {
        try {
            String value;
            try {
                value = "Re";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Re\"\" failed.", e, state);
            }

            String txt = value;
            outText141.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_inactive_tab_systemen_en_detecties_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_inactive_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput142(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle142 == null) {
                outElem142.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_pijl_links_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle142.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_pijl_links_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_pijl_links_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput143(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle143 == null) {
                outElem143.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_pijl_links_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle143.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_pijl_links_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_pijl_links_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput144(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle144 == null) {
                outElem144.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_active_tab_systemen_en_detecties_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle144.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_active_tab_systemen_en_detecties_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_active_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput145(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle145 == null) {
                outElem145.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_inactive_tab_systemen_en_detecties_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle145.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_inactive_tab_systemen_en_detecties_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"Naam_inactive_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput146(State state) {
        try {
            String value;
            try {
                value = "Li";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Li\"\" failed.", e, state);
            }

            String txt = value;
            outText146.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_active_tab_systemen_en_detecties_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_active_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput147(State state) {
        try {
            String value;
            try {
                value = "Li";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Li\"\" failed.", e, state);
            }

            String txt = value;
            outText147.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Naam_inactive_tab_systemen_en_detecties_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"Naam_inactive_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput148(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) || (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd or geselecteerde_tab_tab_systemen_en_detecties.geen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle148 == null) {
                outElem148.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle148.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput149(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) || (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd or geselecteerde_tab_tab_systemen_en_detecties.geen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle149 == null) {
                outElem149.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle149.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput150(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle150 == null) {
                outElem150.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle150.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput151(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle151 == null) {
                outElem151.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle151.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput152(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_rechter_buis_rb_overzicht_systemen_en_detecties_buis_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_rechter_buis.rb_overzicht_systemen_en_detecties_buis_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText152.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput153(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_rechter_buis_rb_overzicht_systemen_en_detecties_vluchtroute_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_rechter_buis.rb_overzicht_systemen_en_detecties_vluchtroute_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText153.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput154(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_rechter_buis_rb_overzicht_systemen_en_detecties_tunnel_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_rechter_buis.rb_overzicht_systemen_en_detecties_tunnel_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText154.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput155(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_rechter_buis_rb_overzicht_systemen_en_detecties_verkeer_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_rechter_buis.rb_overzicht_systemen_en_detecties_verkeer_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText155.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput156(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_rechter_buis_rb_overzicht_systemen_en_detecties_detecties_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_rechter_buis.rb_overzicht_systemen_en_detecties_detecties_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText156.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput157(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_rechter_buis_rb_overzicht_systemen_en_detecties_overig_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_rechter_buis.rb_overzicht_systemen_en_detecties_overig_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText157.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput158(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle158 == null) {
                outElem158.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_buis_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle158.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_buis_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput159(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle159 == null) {
                outElem159.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_buis_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle159.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_buis_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput160(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle160 == null) {
                outElem160.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle160.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput161(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle161 == null) {
                outElem161.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle161.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput162(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle162 == null) {
                outElem162.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle162.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput163(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle163 == null) {
                outElem163.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle163.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput164(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle164 == null) {
                outElem164.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle164.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput165(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle165 == null) {
                outElem165.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle165.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput166(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle166 == null) {
                outElem166.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle166.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput167(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verkeer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle167 == null) {
                outElem167.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_verkeer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle167.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_verkeer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput168(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verkeer.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle168 == null) {
                outElem168.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_verkeer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle168.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_verkeer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput169(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle169 == null) {
                outElem169.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle169.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput170(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle170 == null) {
                outElem170.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle170.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput171(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle171 == null) {
                outElem171.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle171.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput172(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle172 == null) {
                outElem172.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle172.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput173(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overig.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle173 == null) {
                outElem173.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_overig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle173.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_overig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput174(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overig.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle174 == null) {
                outElem174.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_overig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle174.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_overig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput175(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle175 == null) {
                outElem175.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle175.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput176(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "translate(0,-5525)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5525)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle176 == null) {
                outElem176.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle176.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput177(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5400)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "translate(0,-5500)" : ("translate(0,0)"));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5400)\" elif geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle177 == null) {
                outElem177.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle177.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput178(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5375)" : (((state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5300)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "translate(0,-5475)" : ("translate(0,0)")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5375)\" elif rb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5300)\" elif geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5475)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle178 == null) {
                outElem178.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle178.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput179(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5350)" : (((state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5275)" : (((state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5250)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "translate(0,-5450)" : ("translate(0,0)"))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5350)\" elif rb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5275)\" elif rb_overzicht_systemen_en_detecties_tunnel.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5250)\" elif geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle179 == null) {
                outElem179.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle179.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput180(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5325)" : (((state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5250)" : (((state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5225)" : (((state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5325)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "translate(0,-5425)" : ("translate(0,0)")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5325)\" elif rb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5250)\" elif rb_overzicht_systemen_en_detecties_tunnel.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5225)\" elif rb_overzicht_systemen_en_detecties_verkeer.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5325)\" elif geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5425)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle180 == null) {
                outElem180.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle180.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput181(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5300)" : (((state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5225)" : (((state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5200)" : (((state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5300)" : (((state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0)) ? "translate(0,-5125)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 0) ? "translate(0,-5400)" : ("translate(0,0)"))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5300)\" elif rb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5225)\" elif rb_overzicht_systemen_en_detecties_tunnel.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5200)\" elif rb_overzicht_systemen_en_detecties_verkeer.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5300)\" elif rb_overzicht_systemen_en_detecties_detecties.open and geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5125)\" elif geselecteerde_tab_tab_systemen_en_detecties.rechterbuis_tab_geselecteerd: \"translate(0,-5400)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle181 == null) {
                outElem181.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle181.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput182(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1175)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1175)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle182 == null) {
                outElem182.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle182.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput183(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_ventilatie.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle183 == null) {
                outElem183.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle183.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput184(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1150)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1150)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle184 == null) {
                outElem184.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle184.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput185(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle185 == null) {
                outElem185.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle185.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput186(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1125)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1125)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle186 == null) {
                outElem186.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle186.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput187(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle187 == null) {
                outElem187.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle187.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput188(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle188 == null) {
                outElem188.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle188.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput189(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle189 == null) {
                outElem189.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle189.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput190(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_buis_rechter_buis_rb_overzicht_systemen_en_detecties_ventilatie_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_buis_rechter_buis.rb_overzicht_systemen_en_detecties_ventilatie_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText190.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput191(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_buis_rechter_buis_rb_overzicht_systemen_en_detecties_verlichting_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_buis_rechter_buis.rb_overzicht_systemen_en_detecties_verlichting_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText191.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput192(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_buis_rechter_buis_rb_overzicht_systemen_en_detecties_CCTV_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_buis_rechter_buis.rb_overzicht_systemen_en_detecties_CCTV_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText192.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput193(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_buis_rechter_buis_rb_overzicht_systemen_en_detecties_Beeld_HVD_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_buis_rechter_buis.rb_overzicht_systemen_en_detecties_Beeld_HVD_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText193.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput194(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1150)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1150)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle194 == null) {
                outElem194.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle194.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput195(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle195 == null) {
                outElem195.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle195.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput196(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1125)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1125)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle196 == null) {
                outElem196.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle196.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput197(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle197 == null) {
                outElem197.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle197.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput198(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle198 == null) {
                outElem198.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle198.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput199(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeuren.lp_rb_overzicht_systemen_en_detecties_vluchtdeuren == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle199 == null) {
                outElem199.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle199.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput200(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle200 == null) {
                outElem200.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle200.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput201(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle201 == null) {
                outElem201.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle201.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput202(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle202 == null) {
                outElem202.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle202.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput203(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle203 == null) {
                outElem203.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle203.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput204(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle204 == null) {
                outElem204.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle204.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput205(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle205 == null) {
                outElem205.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle205.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput206(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle206 == null) {
                outElem206.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle206.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput207(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle207 == null) {
                outElem207.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle207.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput208(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText208.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput209(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_vergrendeling_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_vergrendeling_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText209.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput210(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_Vluchtdeuren_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_Vluchtdeuren_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText210.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput211(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_Kopdeur_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_Kopdeur_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText211.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput212(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_Dyn_Vluchtroute_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_Dyn_Vluchtroute_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText212.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput213(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_Overdruk_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_Overdruk_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText213.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput214(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis_rb_overzicht_systemen_en_detecties_Licht_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_rechter_buis.rb_overzicht_systemen_en_detecties_Licht_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText214.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput215(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1125)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1125)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle215 == null) {
                outElem215.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle215.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput216(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle216 == null) {
                outElem216.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle216.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput217(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle217 == null) {
                outElem217.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle217.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput218(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle218 == null) {
                outElem218.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle218.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput219(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle219 == null) {
                outElem219.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle219.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput220(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle220 == null) {
                outElem220.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle220.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput221(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle221 == null) {
                outElem221.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle221.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput222(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle222 == null) {
                outElem222.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle222.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput223(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle223 == null) {
                outElem223.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle223.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput224(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle224 == null) {
                outElem224.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle224.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput225(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle225 == null) {
                outElem225.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle225.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput226(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle226 == null) {
                outElem226.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle226.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput227(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-975)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-975)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle227 == null) {
                outElem227.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle227.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput228(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle228 == null) {
                outElem228.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle228.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput229(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-950)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-950)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle229 == null) {
                outElem229.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle229.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput230(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle230 == null) {
                outElem230.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle230.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput231(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Blusvoorziening_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Blusvoorziening_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText231.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput232(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Vloeistofafvoer_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Vloeistofafvoer_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText232.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput233(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Omroep_HF_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Omroep_HF_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText233.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput234(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Intercom_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Intercom_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText234.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput235(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Bediening_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Bediening_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText235.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput236(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_CCTV_tunnel_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_CCTV_tunnel_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText236.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput237(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText237.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput238(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_rechter_buis_rb_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_rechter_buis.rb_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText238.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput239(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle239 == null) {
                outElem239.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle239.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput240(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle240 == null) {
                outElem240.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle240.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput241(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle241 == null) {
                outElem241.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle241.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput242(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle242 == null) {
                outElem242.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle242.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput243(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle243 == null) {
                outElem243.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle243.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput244(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle244 == null) {
                outElem244.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle244.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput245(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle245 == null) {
                outElem245.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle245.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput246(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle246 == null) {
                outElem246.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle246.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput247(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_rechter_buis_rb_overzicht_systemen_en_detecties_VRI_Afsluitboom_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_rechter_buis.rb_overzicht_systemen_en_detecties_VRI_Afsluitboom_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText247.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput248(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_rechter_buis_rb_overzicht_systemen_en_detecties_Cado_hekken_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_rechter_buis.rb_overzicht_systemen_en_detecties_Cado_hekken_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText248.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput249(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_rechter_buis_rb_overzicht_systemen_en_detecties_Veva_Beba_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_rechter_buis.rb_overzicht_systemen_en_detecties_Veva_Beba_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText249.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput250(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_rechter_buis_rb_overzicht_systemen_en_detecties_Tunnelbuis_Wi_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_rechter_buis.rb_overzicht_systemen_en_detecties_Tunnelbuis_Wi_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText250.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput251(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle251 == null) {
                outElem251.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle251.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput252(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle252 == null) {
                outElem252.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle252.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput253(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle253 == null) {
                outElem253.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle253.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput254(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle254 == null) {
                outElem254.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle254.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput255(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle255 == null) {
                outElem255.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle255.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput256(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle256 == null) {
                outElem256.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle256.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput257(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle257 == null) {
                outElem257.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle257.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput258(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle258 == null) {
                outElem258.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle258.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput259(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-975)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-975)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle259 == null) {
                outElem259.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle259.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput260(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle260 == null) {
                outElem260.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle260.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput261(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-950)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-950)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle261 == null) {
                outElem261.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle261.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput262(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle262 == null) {
                outElem262.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle262.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput263(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-925)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-925)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle263 == null) {
                outElem263.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle263.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput264(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle264 == null) {
                outElem264.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle264.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput265(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-900)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-900)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle265 == null) {
                outElem265.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle265.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput266(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle266 == null) {
                outElem266.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle266.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput267(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-875)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-875)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle267 == null) {
                outElem267.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle267.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput268(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle268 == null) {
                outElem268.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle268.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput269(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle269 == null) {
                outElem269.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle269.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput270(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle270 == null) {
                outElem270.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle270.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput271(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-825)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-825)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle271 == null) {
                outElem271.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle271.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput272(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle272 == null) {
                outElem272.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle272.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput273(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Hoogte_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Hoogte_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText273.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput274(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_SOS_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_SOS_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText274.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput275(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Snelheid_laag_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Snelheid_laag_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText275.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput276(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Stilstand_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Stilstand_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText276.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput277(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Spookrijder_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Spookrijder_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText277.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput278(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Zicht_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Zicht_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText278.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput279(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Hulppost_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Hulppost_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText279.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput280(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Deur_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Deur_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText280.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput281(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Blusser_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Blusser_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText281.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput282(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Haspel_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Haspel_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText282.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput283(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_rechter_buis_rb_overzicht_systemen_en_detecties_Noodtelefoon_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_rechter_buis.rb_overzicht_systemen_en_detecties_Noodtelefoon_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText283.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput284(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overig.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle284 == null) {
                outElem284.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle284.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput285(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle285 == null) {
                outElem285.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle285.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput286(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overig.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle286 == null) {
                outElem286.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle286.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput287(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle287 == null) {
                outElem287.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle287.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput288(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overig.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle288 == null) {
                outElem288.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle288.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput289(State state) {
        try {
            String value;
            try {
                value = "grey";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"grey\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle289 == null) {
                outElem289.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle289.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput290(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_overig_rechter_buis_rb_overzicht_systemen_en_detecties_C2000_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_overig_rechter_buis.rb_overzicht_systemen_en_detecties_C2000_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText290.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput291(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_overig_rechter_buis_rb_overzicht_systemen_en_detecties_Telefoon_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_overig_rechter_buis.rb_overzicht_systemen_en_detecties_Telefoon_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText291.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput292(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_overig_rechter_buis_rb_overzicht_systemen_en_detecties_GMK_beelden_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_overig_rechter_buis.rb_overzicht_systemen_en_detecties_GMK_beelden_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText292.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput293(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_linker_buis_lb_overzicht_systemen_en_detecties_buis_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_linker_buis.lb_overzicht_systemen_en_detecties_buis_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText293.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput294(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_linker_buis_lb_overzicht_systemen_en_detecties_vluchtroute_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_linker_buis.lb_overzicht_systemen_en_detecties_vluchtroute_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText294.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput295(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_linker_buis_lb_overzicht_systemen_en_detecties_tunnel_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_linker_buis.lb_overzicht_systemen_en_detecties_tunnel_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText295.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput296(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_linker_buis_lb_overzicht_systemen_en_detecties_verkeer_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_linker_buis.lb_overzicht_systemen_en_detecties_verkeer_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText296.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput297(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_linker_buis_lb_overzicht_systemen_en_detecties_detecties_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_linker_buis.lb_overzicht_systemen_en_detecties_detecties_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText297.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput298(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_titel_blokken_linker_buis_lb_overzicht_systemen_en_detecties_overig_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_titel_blokken_linker_buis.lb_overzicht_systemen_en_detecties_overig_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText298.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput299(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle299 == null) {
                outElem299.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_buis_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle299.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_buis_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput300(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle300 == null) {
                outElem300.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_buis_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle300.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_buis_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput301(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle301 == null) {
                outElem301.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle301.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput302(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle302 == null) {
                outElem302.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle302.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput303(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle303 == null) {
                outElem303.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle303.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput304(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle304 == null) {
                outElem304.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle304.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput305(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle305 == null) {
                outElem305.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle305.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput306(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle306 == null) {
                outElem306.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle306.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput307(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle307 == null) {
                outElem307.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle307.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput308(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verkeer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle308 == null) {
                outElem308.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_verkeer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle308.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_verkeer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput309(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verkeer.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle309 == null) {
                outElem309.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_verkeer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle309.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_verkeer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput310(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle310 == null) {
                outElem310.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle310.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput311(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle311 == null) {
                outElem311.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle311.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput312(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle312 == null) {
                outElem312.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle312.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput313(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle313 == null) {
                outElem313.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle313.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput314(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overig.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle314 == null) {
                outElem314.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_overig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle314.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_open_pijltje_overig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_open_pijltje_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput315(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overig.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle315 == null) {
                outElem315.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_overig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle315.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Drop_down_menu_dicht_pijltje_overig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Drop_down_menu_dicht_pijltje_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput316(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle316 == null) {
                outElem316.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle316.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput317(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "translate(0,-5525)" : ("translate (0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5525)\" else \"translate (0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle317 == null) {
                outElem317.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle317.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput318(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5400)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "translate(0,-5500)" : ("translate(0,0)"));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5400)\" elif geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle318 == null) {
                outElem318.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle318.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput319(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5375)" : (((state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5300)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "translate(0,-5475)" : ("translate(0,0)")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5375)\" elif lb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5300)\" elif geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5475)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle319 == null) {
                outElem319.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle319.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput320(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5350)" : (((state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5275)" : (((state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5250)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "translate(0,-5450)" : ("translate(0,0)"))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5350)\" elif lb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5275)\" elif lb_overzicht_systemen_en_detecties_tunnel.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5250)\" elif geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle320 == null) {
                outElem320.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle320.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput321(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5325)" : (((state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5250)" : (((state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5225)" : (((state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5325)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "translate(0,-5425)" : ("translate(0,0)")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5325)\" elif lb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5250)\" elif lb_overzicht_systemen_en_detecties_tunnel.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5225)\" elif lb_overzicht_systemen_en_detecties_verkeer.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5325)\" elif geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5425)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle321 == null) {
                outElem321.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle321.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput322(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5300)" : (((state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5225)" : (((state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5200)" : (((state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5300)" : (((state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) && (state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1)) ? "translate(0,-5125)" : ((state.s_geselecteerde_tab_tab_systemen_en_detecties.lp_geselecteerde_tab_tab_systemen_en_detecties == 1) ? "translate(0,-5400)" : ("translate(0,0)"))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5300)\" elif lb_overzicht_systemen_en_detecties_vluchtroute.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5225)\" elif lb_overzicht_systemen_en_detecties_tunnel.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5200)\" elif lb_overzicht_systemen_en_detecties_verkeer.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5300)\" elif lb_overzicht_systemen_en_detecties_detecties.open and geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5125)\" elif geselecteerde_tab_tab_systemen_en_detecties.linkerbuis_tab_geselecteerd: \"translate(0,-5400)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle322 == null) {
                outElem322.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle322.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"titel_blokken_overzicht_systemen_en_detecties_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput323(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1175)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1175)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle323 == null) {
                outElem323.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle323.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput324(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle324 == null) {
                outElem324.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle324.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput325(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1150)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1150)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle325 == null) {
                outElem325.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle325.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput326(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle326 == null) {
                outElem326.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle326.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput327(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1125)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1125)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle327 == null) {
                outElem327.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle327.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput328(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle328 == null) {
                outElem328.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle328.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput329(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_buis.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle329 == null) {
                outElem329.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle329.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput330(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle330 == null) {
                outElem330.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle330.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput331(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_sub_blokken_buis_linker_buis_lb_overzicht_systemen_en_detecties_ventilatie_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_sub_blokken_buis_linker_buis.lb_overzicht_systemen_en_detecties_ventilatie_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText331.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput332(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_sub_blokken_buis_linker_buis_lb_overzicht_systemen_en_detecties_verlichting_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_sub_blokken_buis_linker_buis.lb_overzicht_systemen_en_detecties_verlichting_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText332.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput333(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_sub_blokken_buis_linker_buis_lb_overzicht_systemen_en_detecties_CCTV_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_sub_blokken_buis_linker_buis.lb_overzicht_systemen_en_detecties_CCTV_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText333.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput334(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_sub_blokken_buis_linker_buis_lb_overzicht_systemen_en_detecties_Beeld_HVD_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_sub_blokken_buis_linker_buis.lb_overzicht_systemen_en_detecties_Beeld_HVD_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText334.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput335(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1150)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1150)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle335 == null) {
                outElem335.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle335.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput336(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle336 == null) {
                outElem336.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle336.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput337(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1125)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1125)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle337 == null) {
                outElem337.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle337.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput338(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle338 == null) {
                outElem338.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle338.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput339(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle339 == null) {
                outElem339.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle339.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput340(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle340 == null) {
                outElem340.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle340.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput341(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle341 == null) {
                outElem341.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle341.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput342(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle342 == null) {
                outElem342.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle342.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput343(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle343 == null) {
                outElem343.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle343.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput344(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle344 == null) {
                outElem344.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle344.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput345(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle345 == null) {
                outElem345.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle345.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput346(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle346 == null) {
                outElem346.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle346.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput347(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtroute.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle347 == null) {
                outElem347.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle347.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput348(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle348 == null) {
                outElem348.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle348.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput349(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText349.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput350(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_vergrendeling_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_vergrendeling_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText350.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput351(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_Vluchtdeuren_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_Vluchtdeuren_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText351.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput352(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_Kopdeur_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_Kopdeur_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText352.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput353(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_Dyn_Vluchtroute_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_Dyn_Vluchtroute_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText353.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput354(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_Overdruk_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_Overdruk_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText354.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput355(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_vluchtroute_linker_buis_lb_overzicht_systemen_en_detecties_Licht_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_vluchtroute_linker_buis.lb_overzicht_systemen_en_detecties_Licht_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText355.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput356(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1125)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1125)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle356 == null) {
                outElem356.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle356.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput357(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle357 == null) {
                outElem357.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle357.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput358(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle358 == null) {
                outElem358.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle358.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput359(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle359 == null) {
                outElem359.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle359.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput360(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle360 == null) {
                outElem360.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle360.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput361(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle361 == null) {
                outElem361.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle361.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput362(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle362 == null) {
                outElem362.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle362.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput363(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle363 == null) {
                outElem363.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle363.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput364(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle364 == null) {
                outElem364.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle364.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput365(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle365 == null) {
                outElem365.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle365.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput366(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle366 == null) {
                outElem366.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle366.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput367(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle367 == null) {
                outElem367.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle367.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput368(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-975)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-975)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle368 == null) {
                outElem368.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle368.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput369(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle369 == null) {
                outElem369.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle369.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput370(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1) ? "translate(0,-950)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_tunnel.open: \"translate(0,-950)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle370 == null) {
                outElem370.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle370.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput371(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle371 == null) {
                outElem371.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle371.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput372(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Blusvoorziening_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Blusvoorziening_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText372.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput373(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Vloeistofafvoer_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Vloeistofafvoer_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText373.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput374(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Omroep_HF_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Omroep_HF_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText374.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput375(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Intercom_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Intercom_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText375.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput376(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Bediening_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Bediening_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText376.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput377(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_CCTV_tunnel_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_CCTV_tunnel_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText377.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput378(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText378.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput379(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_tunnel_linker_buis_lb_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_tunnel_linker_buis.lb_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText379.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput380(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1100)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1100)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle380 == null) {
                outElem380.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle380.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput381(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle381 == null) {
                outElem381.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle381.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput382(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle382 == null) {
                outElem382.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle382.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput383(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle383 == null) {
                outElem383.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle383.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput384(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle384 == null) {
                outElem384.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle384.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput385(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle385 == null) {
                outElem385.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle385.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput386(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verkeer.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle386 == null) {
                outElem386.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle386.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput387(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle387 == null) {
                outElem387.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle387.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput388(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_linker_buis_lb_overzicht_systemen_en_detecties_VRI_Afsluitboom_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_linker_buis.lb_overzicht_systemen_en_detecties_VRI_Afsluitboom_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText388.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput389(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_linker_buis_lb_overzicht_systemen_en_detecties_Cado_hekken_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_linker_buis.lb_overzicht_systemen_en_detecties_Cado_hekken_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText389.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput390(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_linker_buis_lb_overzicht_systemen_en_detecties_Veva_Beba_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_linker_buis.lb_overzicht_systemen_en_detecties_Veva_Beba_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText390.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput391(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_verkeer_linker_buis_lb_overzicht_systemen_en_detecties_Tunnelbuis_Wi_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_verkeer_linker_buis.lb_overzicht_systemen_en_detecties_Tunnelbuis_Wi_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText391.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput392(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1075)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1075)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle392 == null) {
                outElem392.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle392.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput393(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle393 == null) {
                outElem393.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle393.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput394(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle394 == null) {
                outElem394.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle394.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput395(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle395 == null) {
                outElem395.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle395.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput396(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle396 == null) {
                outElem396.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle396.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput397(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle397 == null) {
                outElem397.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle397.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput398(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle398 == null) {
                outElem398.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle398.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput399(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle399 == null) {
                outElem399.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle399.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput400(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-975)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-975)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle400 == null) {
                outElem400.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle400.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput401(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle401 == null) {
                outElem401.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle401.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput402(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-950)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-950)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle402 == null) {
                outElem402.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle402.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput403(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle403 == null) {
                outElem403.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle403.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput404(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-925)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-925)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle404 == null) {
                outElem404.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle404.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput405(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle405 == null) {
                outElem405.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle405.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput406(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-900)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-900)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle406 == null) {
                outElem406.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle406.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput407(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle407 == null) {
                outElem407.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle407.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput408(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-875)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-875)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle408 == null) {
                outElem408.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle408.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput409(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle409 == null) {
                outElem409.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle409.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput410(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle410 == null) {
                outElem410.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle410.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput411(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle411 == null) {
                outElem411.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle411.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput412(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1) ? "translate(0,-825)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_detecties.open: \"translate(0,-825)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle412 == null) {
                outElem412.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle412.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput413(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle413 == null) {
                outElem413.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle413.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput414(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Hoogte_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Hoogte_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText414.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput415(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_SOS_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_SOS_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText415.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput416(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Snelheid_laag_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Snelheid_laag_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText416.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput417(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Stilstand_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Stilstand_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText417.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput418(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Spookrijder_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Spookrijder_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText418.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput419(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Zicht_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Zicht_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText419.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput420(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Hulppost_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Hulppost_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText420.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput421(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Deur_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Deur_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText421.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput422(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Blusser_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Blusser_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText422.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput423(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Haspel_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Haspel_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText423.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput424(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_detecties_linker_buis_lb_overzicht_systemen_en_detecties_Noodtelefoon_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_detecties_linker_buis.lb_overzicht_systemen_en_detecties_Noodtelefoon_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText424.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput425(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1) ? "translate(0,-1050)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overig.open: \"translate(0,-1050)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle425 == null) {
                outElem425.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle425.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput426(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle426 == null) {
                outElem426.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle426.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput427(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1) ? "translate(0,-1025)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overig.open: \"translate(0,-1025)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle427 == null) {
                outElem427.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle427.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput428(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle428 == null) {
                outElem428.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle428.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput429(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1) ? "translate(0,-1000)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overig.open: \"translate(0,-1000)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle429 == null) {
                outElem429.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle429.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput430(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle430 == null) {
                outElem430.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle430.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput431(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_overig_linker_buis_lb_overzicht_systemen_en_detecties_C2000_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_overig_linker_buis.lb_overzicht_systemen_en_detecties_C2000_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText431.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput432(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_overig_linker_buis_lb_overzicht_systemen_en_detecties_Telefoon_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_overig_linker_buis.lb_overzicht_systemen_en_detecties_Telefoon_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText432.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput433(State state) {
        try {
            String value;
            try {
                value = a_sys_detec_creeren_sub_blokken_overig_linker_buis_lb_overzicht_systemen_en_detecties_GMK_beelden_blok_textValue(state);
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"sys_detec_creeren_sub_blokken_overig_linker_buis.lb_overzicht_systemen_en_detecties_GMK_beelden_blok.textValue\" failed.", e, state);
            }

            String txt = value;
            outText433.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"text_blokken_overzicht_systemen_en_detecties_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput434(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1) && (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_ventilatie.open and rb_overzicht_systemen_en_detecties_buis.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle434 == null) {
                outElem434.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle434.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput435(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_ventilatie.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle435 == null) {
                outElem435.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle435.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput436(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and rb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle436 == null) {
                outElem436.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle436.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Langsventilatie_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput437(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.auto and rb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle437 == null) {
                outElem437.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle437.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Langsventilatie_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput438(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and rb_overzicht_systemen_en_detecties_ventilatie.open and not Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle438 == null) {
                outElem438.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"langsventilatie_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle438.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"langsventilatie_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"langsventilatie_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput439(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.auto and rb_overzicht_systemen_en_detecties_ventilatie.open and not Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle439 == null) {
                outElem439.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle439.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Langsventilatie_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput440(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open and rb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle440 == null) {
                outElem440.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle440.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput441(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 0) || (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 0)) || (state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.auto or rb_overzicht_systemen_en_detecties_ventilatie.dicht or rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle441 == null) {
                outElem441.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle441.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput442(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 0)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 0 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle442 == null) {
                outElem442.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle442.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput443(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 1)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 1 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle443 == null) {
                outElem443.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle443.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput444(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 2)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 2 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle444 == null) {
                outElem444.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle444.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput445(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 3)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 3 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle445 == null) {
                outElem445.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle445.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput446(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 4)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 4 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle446 == null) {
                outElem446.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle446.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput447(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 5)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 5 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle447 == null) {
                outElem447.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle447.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput448(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 6)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 6 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle448 == null) {
                outElem448.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle448.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput449(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 7)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 7 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle449 == null) {
                outElem449.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle449.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput450(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 8)) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Ventilatie.stand = 8 and rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle450 == null) {
                outElem450.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle450.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput451(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 0) || (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 0)) || (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.auto or rb_overzicht_systemen_en_detecties_ventilatie.dicht or rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle451 == null) {
                outElem451.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle451.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput452(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1) && (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open and Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle452 == null) {
                outElem452.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle452.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput453(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_VentilatieRichting.lp_Tunnel_Verkeersbuis1_VentilatieRichting == 0) && (state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_VentilatieRichting.Rijrichting and rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle453 == null) {
                outElem453.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle453.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput454(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_VentilatieRichting.lp_Tunnel_Verkeersbuis1_VentilatieRichting == 1) && (state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_VentilatieRichting.TegenRijrichting and rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle454 == null) {
                outElem454.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle454.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput455(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 0) ? "Sensor Volgen" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 0))) ? "0  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 1))) ? "12.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 2))) ? "25  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 3))) ? "37.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 4))) ? "50  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 5))) ? "62.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 6))) ? "75  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 7))) ? "87.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Ventilatie.v_stand5, 8))) ? "100  %" : (" "))))))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.auto: \"Sensor Volgen\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 0: \"0  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 1: \"12.5  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 2: \"25  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 3: \"37.5  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 4: \"50  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 5: \"62.5  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 6: \"75  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 7: \"87.5  %\" elif Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis1_Ventilatie.stand = 8: \"100  %\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText455.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_percentage_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_percentage_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput456(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_VentilatieRichting.lp_Tunnel_Verkeersbuis1_VentilatieRichting == 1) && (state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_VentilatieRichting.TegenRijrichting and rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle456 == null) {
                outElem456.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle456.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput457(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_VentilatieRichting.lp_Tunnel_Verkeersbuis1_VentilatieRichting == 0) && (state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_VentilatieRichting.Rijrichting and rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle457 == null) {
                outElem457.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle457.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput458(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_VentilatieRichting.lp_Tunnel_Verkeersbuis1_VentilatieRichting == 0) ? "Mee" : ((state.s_Tunnel_Verkeersbuis1_VentilatieRichting.lp_Tunnel_Verkeersbuis1_VentilatieRichting == 1) ? "Tegen" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_VentilatieRichting.Rijrichting: \"Mee\" elif Tunnel_Verkeersbuis1_VentilatieRichting.TegenRijrichting: \"Tegen\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText458.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_stand_richting_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_stand_richting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput459(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1) && (state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting.open and rb_overzicht_systemen_en_detecties_buis.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle459 == null) {
                outElem459.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle459.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput460(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle460 == null) {
                outElem460.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle460.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput461(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle461 == null) {
                outElem461.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle461.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput462(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.auto and rb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle462 == null) {
                outElem462.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle462.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput463(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting.open and not Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle463 == null) {
                outElem463.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle463.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput464(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.auto and rb_overzicht_systemen_en_detecties_verlichting.open and not Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle464 == null) {
                outElem464.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle464.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput465(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting.open and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle465 == null) {
                outElem465.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle465.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput466(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 0) || (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 0)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.auto or rb_overzicht_systemen_en_detecties_verlichting.dicht: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle466 == null) {
                outElem466.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle466.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput467(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 0)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 0 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle467 == null) {
                outElem467.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle467.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput468(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 1)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 1 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle468 == null) {
                outElem468.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle468.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput469(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 2)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 2 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle469 == null) {
                outElem469.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle469.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput470(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 3)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 3 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle470 == null) {
                outElem470.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle470.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput471(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 4)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 4 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle471 == null) {
                outElem471.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle471.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput472(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 5)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 5 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle472 == null) {
                outElem472.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle472.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput473(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 6)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 6 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle473 == null) {
                outElem473.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle473.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput474(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 7)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 7 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle474 == null) {
                outElem474.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle474.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput475(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 8)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verlichting.stand = 8 and rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle475 == null) {
                outElem475.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle475.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput476(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 0) ? "Sensor Volgen" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 0))) ? "0  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 1))) ? "12.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 2))) ? "25  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 3))) ? "37.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 4))) ? "50  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 5))) ? "62.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 6))) ? "75  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 7))) ? "87.5  %" : (((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis1_Verlichting.v_stand7, 8))) ? "100  %" : (" "))))))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.auto: \"Sensor Volgen\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 0: \"0  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 1: \"12.5  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 2: \"25  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 3: \"37.5  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 4: \"50  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 5: \"62.5  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 6: \"75  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 7: \"87.5  %\" elif Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis1_Verlichting.stand = 8: \"100  %\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText476.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_percentage_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_percentage_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput477(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle477 == null) {
                outElem477.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle477.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput478(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle478 == null) {
                outElem478.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle478.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput479(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and rb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle479 == null) {
                outElem479.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle479.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput480(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle480 == null) {
                outElem480.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle480.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput481(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 0) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.dicht and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle481 == null) {
                outElem481.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle481.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput482(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.auto and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle482 == null) {
                outElem482.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle482.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput483(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle483 == null) {
                outElem483.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle483.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput484(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.auto and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle484 == null) {
                outElem484.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle484.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput485(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 0) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.dicht and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle485 == null) {
                outElem485.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle485.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput486(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.auto and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle486 == null) {
                outElem486.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle486.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput487(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle487 == null) {
                outElem487.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle487.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput488(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.auto and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle488 == null) {
                outElem488.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle488.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput489(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 0) || (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 0)) || (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.auto or rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.dicht or rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle489 == null) {
                outElem489.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle489.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput490(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle490 == null) {
                outElem490.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle490.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput491(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle491 == null) {
                outElem491.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle491.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput492(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken == 1) ? "Aan" : ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken == 0) ? "Uit" : ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken == 2) ? "Onderdrukt" : ("")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.aan: \"Aan\" elif Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.uit: \"Uit\" elif Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.onderdrukt: \"Onderdrukt\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText492.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_geluidsbakens_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_geluidsbakens_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput493(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.aan and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle493 == null) {
                outElem493.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle493.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput494(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken == 0) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_Geluidsbaken.uit and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle494 == null) {
                outElem494.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle494.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput495(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle495 == null) {
                outElem495.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle495.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput496(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 0) || (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 0)) || (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.auto or rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.dicht or rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle496 == null) {
                outElem496.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle496.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput497(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle497 == null) {
                outElem497.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle497.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput498(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.aan and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle498 == null) {
                outElem498.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle498.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput499(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting == 0) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.uit and rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle499 == null) {
                outElem499.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle499.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput500(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting == 1) ? "Aan" : ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting == 0) ? "Uit" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.aan: \"Aan\" elif Tunnel_Verkeersbuis1_Vluchtdeur_ContourVerlichting.uit: \"Uit\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText500.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_contourverlichting_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_contourverlichting_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput501(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle501 == null) {
                outElem501.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle501.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput502(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeuren.lp_rb_overzicht_systemen_en_detecties_vluchtdeuren == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle502 == null) {
                outElem502.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle502.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput503(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeuren.lp_rb_overzicht_systemen_en_detecties_vluchtdeuren == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle503 == null) {
                outElem503.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle503.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput504(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) ? "Ja" : ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 0) ? "Nee" : (" "));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan: \"Ja\" elif Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.uit: \"Nee\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText504.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeuren_open_sensor_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeuren_open_sensor_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput505(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle505 == null) {
                outElem505.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle505.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput506(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle506 == null) {
                outElem506.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle506.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput507(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle507 == null) {
                outElem507.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle507.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput508(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle508 == null) {
                outElem508.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle508.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput509(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.auto and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle509 == null) {
                outElem509.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle509.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput510(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open and not Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle510 == null) {
                outElem510.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle510.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput511(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.auto and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open and not Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle511 == null) {
                outElem511.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle511.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput512(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle512 == null) {
                outElem512.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle512.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput513(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open and Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle513 == null) {
                outElem513.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle513.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput514(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 1) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.oplopend and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle514 == null) {
                outElem514.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle514.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput515(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 2) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.aflopend and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle515 == null) {
                outElem515.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle515.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput516(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 0) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.uit and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle516 == null) {
                outElem516.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle516.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput517(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 1) ? "Oplopend" : ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 2) ? "Aflopend" : ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 0) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.oplopend: \"Oplopend\" elif Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.aflopend: \"Aflopend\" elif Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText517.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput518(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle518 == null) {
                outElem518.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle518.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput519(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle519 == null) {
                outElem519.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle519.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput520(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle520 == null) {
                outElem520.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle520.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput521(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.auto and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle521 == null) {
                outElem521.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle521.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput522(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle522 == null) {
                outElem522.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle522.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput523(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.auto and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle523 == null) {
                outElem523.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle523.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput524(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle524 == null) {
                outElem524.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle524.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput525(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open and Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle525 == null) {
                outElem525.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle525.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput526(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 2) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.rechts and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle526 == null) {
                outElem526.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle526.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput527(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 1) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.links and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle527 == null) {
                outElem527.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle527.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput528(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 0) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.uit and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle528 == null) {
                outElem528.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle528.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput529(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 2) ? "Rechts" : ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 1) ? "Links" : ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 0) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.rechts: \"Rechts\" elif Tunnel_MiddenTunnelKanaal_Overdruk.links: \"Links\" elif Tunnel_MiddenTunnelKanaal_Overdruk.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText529.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput530(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle530 == null) {
                outElem530.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle530.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput531(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle531 == null) {
                outElem531.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Licht_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle531.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Licht_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput532(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle532 == null) {
                outElem532.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle532.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput533(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.auto and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle533 == null) {
                outElem533.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle533.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput534(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle534 == null) {
                outElem534.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle534.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput535(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.auto and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle535 == null) {
                outElem535.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle535.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput536(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle536 == null) {
                outElem536.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle536.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput537(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 1) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open and Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle537 == null) {
                outElem537.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle537.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput538(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Verlichting.aan and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle538 == null) {
                outElem538.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle538.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput539(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 0) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Verlichting.uit and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle539 == null) {
                outElem539.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle539.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput540(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 1) ? "Aan" : ((state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 0) ? "Uit" : (" "));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Verlichting.aan: \"Aan\" elif Tunnel_MiddenTunnelKanaal_Verlichting.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText540.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput541(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle541 == null) {
                outElem541.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_bluswatervoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle541.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_bluswatervoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_bluswatervoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput542(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle542 == null) {
                outElem542.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle542.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput543(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 0) && (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.dicht and Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle543 == null) {
                outElem543.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle543.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput544(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle544 == null) {
                outElem544.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle544.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput545(State state) {
        try {
            String value;
            try {
                value = ((!(state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 0)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if not Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_blusvoorziening.dicht: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle545 == null) {
                outElem545.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle545.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput546(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1)) && (!(state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_blusvoorziening.open and not Tunnel_BrandBlusInstallatie_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle546 == null) {
                outElem546.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle546.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput547(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle547 == null) {
                outElem547.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle547.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput548(State state) {
        try {
            String value;
            try {
                value = (((state.s_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 1) && (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open and Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle548 == null) {
                outElem548.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle548.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput549(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 0) && (state.s_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Regime.bewaken and rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle549 == null) {
                outElem549.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle549.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput550(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 1) && (state.s_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Regime.blussen and rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle550 == null) {
                outElem550.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle550.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput551(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 0) ? "Bewaken" : ((state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 1) ? "Blussen" : (" "));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Regime.bewaken: \"Bewaken\" elif Tunnel_BrandBlusInstallatie_Regime.blussen: \"Blussen\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText551.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput552(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_SensorLaag.lp_Tunnel_BrandBlusInstallatie_SensorLaag == 1) ? "Aan" : ("Uit");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_SensorLaag.aan: \"Aan\" else \"Uit\" end\" failed.", e, state);
            }

            String txt = value;
            outText552.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"brand_blus_installatie_sensor_laag_text_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"brand_blus_installatie_sensor_laag_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput553(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_SensorHoog.lp_Tunnel_BrandBlusInstallatie_SensorHoog == 1) ? "Aan" : ("Uit");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_SensorHoog.aan: \"Aan\" else \"Uit\" end\" failed.", e, state);
            }

            String txt = value;
            outText553.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"brand_blus_installatie_sensor_hoog_text_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"brand_blus_installatie_sensor_hoog_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput554(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_Pomp.lp_Tunnel_BrandBlusInstallatie_Pomp == 1) ? "Aan" : ("Uit");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Pomp.aan: \"Aan\" else \"Uit\" end\" failed.", e, state);
            }

            String txt = value;
            outText554.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"brand_blus_installatie_blus_pomp_stand_text_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"brand_blus_installatie_blus_pomp_stand_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput555(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle555 == null) {
                outElem555.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle555.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput556(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle556 == null) {
                outElem556.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle556.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput557(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 0) && (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.dicht and Tunnel_MiddenPompkelder_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle557 == null) {
                outElem557.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle557.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput558(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle558 == null) {
                outElem558.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle558.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput559(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_MiddenPompkelder_Bediening_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle559 == null) {
                outElem559.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle559.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput560(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_MiddenPompkelder_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle560 == null) {
                outElem560.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle560.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput561(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle561 == null) {
                outElem561.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle561.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput562(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1) && (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open and Tunnel_MiddenPompkelder_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle562 == null) {
                outElem562.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle562.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput563(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 1) && (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.bergen and overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle563 == null) {
                outElem563.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle563.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput564(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 0) && (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.leeghouden and overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle564 == null) {
                outElem564.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle564.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput565(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 2) && (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.uit and overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle565 == null) {
                outElem565.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle565.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput566(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 1) ? "Bergen" : ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 0) ? "Leeg houden" : ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 2) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.bergen: \"Bergen\" elif Tunnel_MiddenPompkelder_Regime.leeghouden: \"Leeg houden\" elif Tunnel_MiddenPompkelder_Regime.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText566.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput567(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenPompkelder_SensorLaagwater.lp_Tunnel_MiddenPompkelder_SensorLaagwater == 1) ? "Laag water" : ((state.s_Tunnel_MiddenPompkelder_SensorStartwater.lp_Tunnel_MiddenPompkelder_SensorStartwater == 1) ? "Start water" : ((state.s_Tunnel_MiddenPompkelder_SensorMaxstartwater.lp_Tunnel_MiddenPompkelder_SensorMaxstartwater == 1) ? "Max start water" : ((state.s_Tunnel_MiddenPompkelder_SensorLaaghoogwater.lp_Tunnel_MiddenPompkelder_SensorLaaghoogwater == 1) ? "Laag hoog water" : ((state.s_Tunnel_MiddenPompkelder_SensorHooghoogwater.lp_Tunnel_MiddenPompkelder_SensorHooghoogwater == 1) ? "Hoog hoog water" : (" ")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_SensorLaagwater.aan: \"Laag water\" elif Tunnel_MiddenPompkelder_SensorStartwater.aan: \"Start water\" elif Tunnel_MiddenPompkelder_SensorMaxstartwater.aan: \"Max start water\" elif Tunnel_MiddenPompkelder_SensorLaaghoogwater.aan: \"Laag hoog water\" elif Tunnel_MiddenPompkelder_SensorHooghoogwater.aan: \"Hoog hoog water\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText567.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_niveau_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_niveau_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput568(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.dicht and Tunnel_HoofdPompkelder1_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle568 == null) {
                outElem568.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle568.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput569(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle569 == null) {
                outElem569.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle569.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput570(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder1_Bediening_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle570 == null) {
                outElem570.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle570.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput571(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder1_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle571 == null) {
                outElem571.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle571.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput572(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle572 == null) {
                outElem572.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle572.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput573(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1) && (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open and Tunnel_HoofdPompkelder1_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle573 == null) {
                outElem573.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle573.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput574(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 1) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.bergen and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle574 == null) {
                outElem574.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle574.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput575(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 0) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.leeghouden and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle575 == null) {
                outElem575.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle575.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput576(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 2) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.uit and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle576 == null) {
                outElem576.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle576.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput577(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 1) ? "Bergen" : ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 0) ? "Leeg houden" : ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 2) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.bergen: \"Bergen\" elif Tunnel_HoofdPompkelder1_Regime.leeghouden: \"Leeg houden\" elif Tunnel_HoofdPompkelder1_Regime.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText577.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput578(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder1_SensorLaagwater.lp_Tunnel_HoofdPompkelder1_SensorLaagwater == 1) ? "Laag water" : ((state.s_Tunnel_HoofdPompkelder1_SensorStartwater.lp_Tunnel_HoofdPompkelder1_SensorStartwater == 1) ? "Start water" : ((state.s_Tunnel_HoofdPompkelder1_SensorMaxstartwater.lp_Tunnel_HoofdPompkelder1_SensorMaxstartwater == 1) ? "Max start water" : ((state.s_Tunnel_HoofdPompkelder1_SensorLaaghoogwater.lp_Tunnel_HoofdPompkelder1_SensorLaaghoogwater == 1) ? "Laag hoog water" : ((state.s_Tunnel_HoofdPompkelder1_SensorHooghoogwater.lp_Tunnel_HoofdPompkelder1_SensorHooghoogwater == 1) ? "Hoog hoog water" : (" ")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_SensorLaagwater.aan: \"Laag water\" elif Tunnel_HoofdPompkelder1_SensorStartwater.aan: \"Start water\" elif Tunnel_HoofdPompkelder1_SensorMaxstartwater.aan: \"Max start water\" elif Tunnel_HoofdPompkelder1_SensorLaaghoogwater.aan: \"Laag hoog water\" elif Tunnel_HoofdPompkelder1_SensorHooghoogwater.aan: \"Hoog hoog water\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText578.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_niveau_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_niveau_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput579(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.dicht and Tunnel_HoofdPompkelder2_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle579 == null) {
                outElem579.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle579.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput580(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle580 == null) {
                outElem580.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle580.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput581(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder2_Bediening_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle581 == null) {
                outElem581.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle581.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput582(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.auto and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle582 == null) {
                outElem582.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle582.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput583(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle583 == null) {
                outElem583.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle583.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput584(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1) && (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) && (state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open and Tunnel_HoofdPompkelder2_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle584 == null) {
                outElem584.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle584.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput585(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 1) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.bergen and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle585 == null) {
                outElem585.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle585.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput586(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 0) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.leeghouden and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle586 == null) {
                outElem586.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle586.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput587(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 2) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.uit and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle587 == null) {
                outElem587.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle587.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput588(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 1) ? "Bergen" : ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 0) ? "Leeg houden" : ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 2) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.bergen: \"Bergen\" elif Tunnel_HoofdPompkelder2_Regime.leeghouden: \"Leeg houden\" elif Tunnel_HoofdPompkelder2_Regime.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText588.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput589(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder2_SensorLaagwater.lp_Tunnel_HoofdPompkelder2_SensorLaagwater == 1) ? "Laag water" : ((state.s_Tunnel_HoofdPompkelder2_SensorStartwater.lp_Tunnel_HoofdPompkelder2_SensorStartwater == 1) ? "Start water" : ((state.s_Tunnel_HoofdPompkelder2_SensorMaxstartwater.lp_Tunnel_HoofdPompkelder2_SensorMaxstartwater == 1) ? "Max start water" : ((state.s_Tunnel_HoofdPompkelder2_SensorLaaghoogwater.lp_Tunnel_HoofdPompkelder2_SensorLaaghoogwater == 1) ? "Laag hoog water" : ((state.s_Tunnel_HoofdPompkelder2_SensorHooghoogwater.lp_Tunnel_HoofdPompkelder2_SensorHooghoogwater == 1) ? "Hoog hoog water" : (" ")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_SensorLaagwater.aan: \"Laag water\" elif Tunnel_HoofdPompkelder2_SensorStartwater.aan: \"Start water\" elif Tunnel_HoofdPompkelder2_SensorMaxstartwater.aan: \"Max start water\" elif Tunnel_HoofdPompkelder2_SensorLaaghoogwater.aan: \"Laag hoog water\" elif Tunnel_HoofdPompkelder2_SensorHooghoogwater.aan: \"Hoog hoog water\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText589.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_niveau_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_niveau_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput590(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle590 == null) {
                outElem590.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle590.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput591(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle591 == null) {
                outElem591.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle591.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput592(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle592 == null) {
                outElem592.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle592.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput593(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle593 == null) {
                outElem593.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle593.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput594(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle594 == null) {
                outElem594.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle594.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput595(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle595 == null) {
                outElem595.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle595.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput596(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle596 == null) {
                outElem596.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_VRI_en_afsluitboom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle596.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_VRI_en_afsluitboom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_VRI_en_afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput597(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle597 == null) {
                outElem597.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle597.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput598(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle598 == null) {
                outElem598.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle598.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput599(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.auto and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle599 == null) {
                outElem599.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle599.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput600(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle600 == null) {
                outElem600.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle600.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput601(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.auto and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle601 == null) {
                outElem601.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle601.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput602(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle602 == null) {
                outElem602.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle602.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_auto_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput603(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.auto and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle603 == null) {
                outElem603.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_knop_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle603.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_knop_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_handmatig_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput604(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle604 == null) {
                outElem604.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle604.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_handmatig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput605(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 0) && (state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.auto and rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle605 == null) {
                outElem605.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle605.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_auto_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput606(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3)) ? "Dicht" : ((((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 0) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 0)) && (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 0)) ? "Open" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood: \"Dicht\" elif Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.uit and Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.uit and Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.uit: \"Open\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText606.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_buis_status_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_buis_status_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput607(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 0) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.uit: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle607 == null) {
                outElem607.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle607.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput608(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 1) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.knipper: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle608 == null) {
                outElem608.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle608.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput609(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle609 == null) {
                outElem609.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle609.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput610(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 0) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.uit: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle610 == null) {
                outElem610.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle610.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput611(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.knipper: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle611 == null) {
                outElem611.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle611.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput612(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle612 == null) {
                outElem612.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_text_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle612.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_text_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput613(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 1)) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.aan: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle613 == null) {
                outElem613.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle613.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput614(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 0)) && ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 0))) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.uit) and (Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.uit): \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle614 == null) {
                outElem614.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle614.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput615(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ActuatorNeer.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ActuatorNeer == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ActuatorNeer.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ActuatorNeer == 1)) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_ActuatorNeer.aan and Tunnel_Verkeersbuis1_Afsluitboom2_ActuatorNeer.aan: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle615 == null) {
                outElem615.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle615.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput616(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 1)) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.aan: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle616 == null) {
                outElem616.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_text_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle616.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_text_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput617(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 0)) || ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 0) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 0))) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.uit or (Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.uit or Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.uit): \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle617 == null) {
                outElem617.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_text_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle617.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_text_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput618(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 1)) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.aan: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle618 == null) {
                outElem618.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle618.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput619(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) ? "Op" : ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1) ? "Neer" : ("In beweging"));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan: \"Op\" elif Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan: \"Neer\" else \"In beweging\" end\" failed.", e, state);
            }

            String txt = value;
            outText619.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stand_afsluitboom1_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_stand_afsluitboom1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput620(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 1) ? "Op" : ((state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 1) ? "Neer" : ("In beweging"));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.aan: \"Op\" elif Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.aan: \"Neer\" else \"In beweging\" end\" failed.", e, state);
            }

            String txt = value;
            outText620.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stand_afsluitboom2_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_stand_afsluitboom2_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput621(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1) ? "Ja" : ("Nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan: \"Ja\" else \"Nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText621.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom1_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput622(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1) ? "Ja" : ("Nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"Ja\" else \"Nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText622.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom2_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom2_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput623(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle623 == null) {
                outElem623.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle623.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput624(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle624 == null) {
                outElem624.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle624.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput625(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle625 == null) {
                outElem625.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle625.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput626(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle626 == null) {
                outElem626.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle626.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput627(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_SOS.lp_rb_overzicht_systemen_en_detecties_SOS == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_SOS.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle627 == null) {
                outElem627.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_SOS_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle627.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_SOS_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput628(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_SOS.lp_rb_overzicht_systemen_en_detecties_SOS == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_SOS.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle628 == null) {
                outElem628.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_SOS_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle628.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_SOS_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput629(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle629 == null) {
                outElem629.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle629.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput630(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle630 == null) {
                outElem630.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle630.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput631(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle631 == null) {
                outElem631.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle631.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput632(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle632 == null) {
                outElem632.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle632.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput633(State state) {
        try {
            String value;
            try {
                value = (((((state.s_rb_overzicht_systemen_en_detecties_hulppost.lp_rb_overzicht_systemen_en_detecties_hulppost == 1) || (state.s_rb_overzicht_systemen_en_detecties_deur.lp_rb_overzicht_systemen_en_detecties_deur == 1)) || (state.s_rb_overzicht_systemen_en_detecties_blusser.lp_rb_overzicht_systemen_en_detecties_blusser == 1)) || (state.s_rb_overzicht_systemen_en_detecties_haspel.lp_rb_overzicht_systemen_en_detecties_haspel == 1)) || (state.s_rb_overzicht_systemen_en_detecties_noodtelefoon.lp_rb_overzicht_systemen_en_detecties_noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_hulppost.open or rb_overzicht_systemen_en_detecties_deur.open or rb_overzicht_systemen_en_detecties_blusser.open or rb_overzicht_systemen_en_detecties_haspel.open or rb_overzicht_systemen_en_detecties_noodtelefoon.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle633 == null) {
                outElem633.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hulppost_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle633.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hulppost_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput634(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_hulppost.lp_rb_overzicht_systemen_en_detecties_hulppost == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_hulppost.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle634 == null) {
                outElem634.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle634.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput635(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) ? "Ja" : ("nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan: \"Ja\" else \"nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText635.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_deur_open_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_deur_open_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput636(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1) ? "Nee" : ((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 0) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan: \"Nee\" elif Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.uit: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText636.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_handblusser_in_houder_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_handblusser_in_houder_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput637(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1) ? "Nee" : ((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 0) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan: \"Nee\" elif Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.uit: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText637.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_brandslang_in_houder_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_brandslang_in_houder_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput638(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 0) ? "Nee" : ((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.uit: \"Nee\" elif Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText638.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_noodtelefoon_gebruikt_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_noodtelefoon_gebruikt_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput639(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1) ? "Ja" : ("nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan: \"Ja\" else \"nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText639.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostC_deur_open_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostC_deur_open_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput640(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1) ? "Nee" : ((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 0) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan: \"Nee\" elif Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.uit: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText640.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostC_handblusser_in_houder_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostC_handblusser_in_houder_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput641(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 0) ? "Nee" : ((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.uit: \"Nee\" elif Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText641.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostC_noodtelefoon_gebruikt_stand_rechter_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostC_noodtelefoon_gebruikt_stand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput642(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_deur.lp_rb_overzicht_systemen_en_detecties_deur == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_deur.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle642 == null) {
                outElem642.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Deur_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle642.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Deur_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput643(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_blusser.lp_rb_overzicht_systemen_en_detecties_blusser == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_blusser.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle643 == null) {
                outElem643.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle643.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput644(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_haspel.lp_rb_overzicht_systemen_en_detecties_haspel == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_haspel.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle644 == null) {
                outElem644.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle644.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput645(State state) {
        try {
            String value;
            try {
                value = (state.s_rb_overzicht_systemen_en_detecties_noodtelefoon.lp_rb_overzicht_systemen_en_detecties_noodtelefoon == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_noodtelefoon.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle645 == null) {
                outElem645.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle645.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput646(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle646 == null) {
                outElem646.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_C2000_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle646.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_C2000_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput647(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle647 == null) {
                outElem647.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle647.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput648(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle648 == null) {
                outElem648.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_rechter_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle648.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_rechter_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput649(State state) {
        try {
            String value;
            try {
                value = ((((((((((((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1)) || (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand or Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand or Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle649 == null) {
                outElem649.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_handbediening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle649.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_handbediening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_handbediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput650(State state) {
        try {
            String value;
            try {
                value = (((((((((((((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1)) || (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) || (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand or Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand or Tunnel_BrandBlusInstallatie_Bediening_Modus.hand or Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle650 == null) {
                outElem650.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_handbediening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle650.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_handbediening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_handbediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput651(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle651 == null) {
                outElem651.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_buis_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle651.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_buis_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput652(State state) {
        try {
            String value;
            try {
                value = (((((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle652 == null) {
                outElem652.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle652.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput653(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) || (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand or Tunnel_BrandBlusInstallatie_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle653 == null) {
                outElem653.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle653.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput654(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle654 == null) {
                outElem654.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle654.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput655(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle655 == null) {
                outElem655.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle655.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput656(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle656 == null) {
                outElem656.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_overig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle656.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_overig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput657(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle657 == null) {
                outElem657.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_ventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle657.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_ventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput658(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle658 == null) {
                outElem658.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle658.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput659(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle659 == null) {
                outElem659.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle659.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput660(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle660 == null) {
                outElem660.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle660.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput661(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle661 == null) {
                outElem661.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle661.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput662(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle662 == null) {
                outElem662.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle662.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput663(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle663 == null) {
                outElem663.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle663.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput664(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle664 == null) {
                outElem664.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle664.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput665(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle665 == null) {
                outElem665.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle665.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput666(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle666 == null) {
                outElem666.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Overdruk_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle666.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Overdruk_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput667(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle667 == null) {
                outElem667.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Licht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle667.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Licht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput668(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle668 == null) {
                outElem668.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle668.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput669(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle669 == null) {
                outElem669.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle669.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput670(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle670 == null) {
                outElem670.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle670.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput671(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle671 == null) {
                outElem671.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle671.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput672(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle672 == null) {
                outElem672.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Intercom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle672.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Intercom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput673(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle673 == null) {
                outElem673.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Bediening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle673.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Bediening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput674(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle674 == null) {
                outElem674.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle674.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput675(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle675 == null) {
                outElem675.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle675.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput676(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle676 == null) {
                outElem676.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle676.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput677(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle677 == null) {
                outElem677.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle677.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput678(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle678 == null) {
                outElem678.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle678.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput679(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle679 == null) {
                outElem679.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle679.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput680(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle680 == null) {
                outElem680.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hoogte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle680.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hoogte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput681(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle681 == null) {
                outElem681.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_SOS_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle681.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_SOS_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput682(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle682 == null) {
                outElem682.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle682.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput683(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle683 == null) {
                outElem683.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Stilstand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle683.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Stilstand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput684(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle684 == null) {
                outElem684.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle684.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput685(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle685 == null) {
                outElem685.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Zicht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle685.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Zicht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput686(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle686 == null) {
                outElem686.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hulppost_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle686.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hulppost_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput687(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle687 == null) {
                outElem687.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Deur_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle687.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Deur_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput688(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle688 == null) {
                outElem688.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusser_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle688.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusser_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput689(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle689 == null) {
                outElem689.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Haspel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle689.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Haspel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput690(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle690 == null) {
                outElem690.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle690.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput691(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle691 == null) {
                outElem691.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_C2000_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle691.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_C2000_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput692(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle692 == null) {
                outElem692.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Telefoon_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle692.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Telefoon_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput693(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle693 == null) {
                outElem693.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle693.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput694(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand and rb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle694 == null) {
                outElem694.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_langsventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle694.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_langsventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_langsventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput695(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle695 == null) {
                outElem695.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle695.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput696(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle696 == null) {
                outElem696.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_gesloten_deel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle696.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_gesloten_deel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_verlichting_gesloten_deel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput697(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and (Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand): \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle697 == null) {
                outElem697.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle697.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeurindicatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput698(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle698 == null) {
                outElem698.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle698.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput699(State state) {
        try {
            String value;
            try {
                value = ((state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle699 == null) {
                outElem699.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle699.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput700(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle700 == null) {
                outElem700.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle700.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput701(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle701 == null) {
                outElem701.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeur_open_sensor_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle701.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeur_open_sensor_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeur_open_sensor_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput702(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle702 == null) {
                outElem702.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle702.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_dynamische_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput703(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle703 == null) {
                outElem703.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle703.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_overdruk_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput704(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle704 == null) {
                outElem704.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle704.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_verlichting_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput705(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1) && (state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and rb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle705 == null) {
                outElem705.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_bluswatervoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle705.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_bluswatervoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_bluswatervoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput706(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle706 == null) {
                outElem706.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sensor_brand_blus_installatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle706.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sensor_brand_blus_installatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_sensor_brand_blus_installatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput707(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle707 == null) {
                outElem707.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_blus_pomp_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle707.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_blus_pomp_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_blus_pomp_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput708(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle708 == null) {
                outElem708.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle708.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput709(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle709 == null) {
                outElem709.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_midden_pomp_kelder_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle709.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_midden_pomp_kelder_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_midden_pomp_kelder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput710(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle710 == null) {
                outElem710.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_1_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle710.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_1_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_hoofd_pomp_kelder_1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput711(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle711 == null) {
                outElem711.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_2_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle711.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_2_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_hoofd_pomp_kelder_2_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput712(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis1_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle712 == null) {
                outElem712.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_handbedieningalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle712.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_handbedieningalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_handbedieningalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput713(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle713 == null) {
                outElem713.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle713.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput714(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle714 == null) {
                outElem714.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle714.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput715(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle715 == null) {
                outElem715.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle715.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_sos_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput716(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle716 == null) {
                outElem716.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_sectie1_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle716.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_sectie1_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_sos_sectie1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput717(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle717 == null) {
                outElem717.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulpposten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle717.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulpposten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handmatigalarm_hulpposten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput718(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle718 == null) {
                outElem718.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostA_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle718.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostA_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handmatigalarm_hulppostA_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput719(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle719 == null) {
                outElem719.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostC_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle719.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostC_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handmatigalarm_hulppostC_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput720(State state) {
        try {
            String value;
            try {
                value = ((((((((((state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1)) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1)) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan or Tunnel_Verkeersbuis1_SOS.aan or Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle720 == null) {
                outElem720.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle720.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput721(State state) {
        try {
            String value;
            try {
                value = ((((((((((state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1)) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1)) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan or Tunnel_Verkeersbuis1_SOS.aan or Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle721 == null) {
                outElem721.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle721.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_verkeerskundigalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput722(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle722 == null) {
                outElem722.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle722.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput723(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and lb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle723 == null) {
                outElem723.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle723.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput724(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle724 == null) {
                outElem724.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle724.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput725(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle725 == null) {
                outElem725.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle725.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput726(State state) {
        try {
            String value;
            try {
                value = ((((((((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan or Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle726 == null) {
                outElem726.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle726.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput727(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle727 == null) {
                outElem727.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle727.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput728(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle728 == null) {
                outElem728.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle728.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput729(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle729 == null) {
                outElem729.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle729.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput730(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle730 == null) {
                outElem730.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle730.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput731(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle731 == null) {
                outElem731.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle731.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput732(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle732 == null) {
                outElem732.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle732.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput733(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle733 == null) {
                outElem733.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle733.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput734(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and lb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle734 == null) {
                outElem734.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle734.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput735(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle735 == null) {
                outElem735.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle735.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput736(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle736 == null) {
                outElem736.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle736.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput737(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle737 == null) {
                outElem737.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle737.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput738(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle738 == null) {
                outElem738.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle738.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput739(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle739 == null) {
                outElem739.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle739.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput740(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle740 == null) {
                outElem740.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle740.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput741(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle741 == null) {
                outElem741.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle741.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput742(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle742 == null) {
                outElem742.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle742.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput743(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle743 == null) {
                outElem743.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle743.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput744(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle744 == null) {
                outElem744.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle744.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput745(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle745 == null) {
                outElem745.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle745.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput746(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle746 == null) {
                outElem746.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle746.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput747(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle747 == null) {
                outElem747.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle747.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput748(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle748 == null) {
                outElem748.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle748.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput749(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle749 == null) {
                outElem749.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle749.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput750(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle750 == null) {
                outElem750.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle750.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput751(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle751 == null) {
                outElem751.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle751.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput752(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle752 == null) {
                outElem752.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle752.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput753(State state) {
        try {
            String value;
            try {
                value = (((((((state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle753 == null) {
                outElem753.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle753.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput754(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle754 == null) {
                outElem754.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle754.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput755(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle755 == null) {
                outElem755.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle755.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput756(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle756 == null) {
                outElem756.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle756.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput757(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle757 == null) {
                outElem757.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle757.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput758(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle758 == null) {
                outElem758.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle758.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput759(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle759 == null) {
                outElem759.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle759.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput760(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle760 == null) {
                outElem760.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle760.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput761(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle761 == null) {
                outElem761.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle761.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput762(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle762 == null) {
                outElem762.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle762.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput763(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle763 == null) {
                outElem763.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle763.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput764(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle764 == null) {
                outElem764.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle764.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput765(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle765 == null) {
                outElem765.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_langsventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle765.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_langsventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_langsventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput766(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle766 == null) {
                outElem766.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle766.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput767(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle767 == null) {
                outElem767.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_gesloten_deel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle767.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_gesloten_deel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_verlichting_gesloten_deel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput768(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle768 == null) {
                outElem768.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle768.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeurindicatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput769(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle769 == null) {
                outElem769.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle769.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput770(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle770 == null) {
                outElem770.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle770.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput771(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeuren.lp_rb_overzicht_systemen_en_detecties_vluchtdeuren == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and rb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle771 == null) {
                outElem771.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle771.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput772(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_rb_overzicht_systemen_en_detecties_vluchtdeuren.lp_rb_overzicht_systemen_en_detecties_vluchtdeuren == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and rb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle772 == null) {
                outElem772.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeur_open_sensor_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle772.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeur_open_sensor_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeur_open_sensor_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput773(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle773 == null) {
                outElem773.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle773.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_dynamische_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput774(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle774 == null) {
                outElem774.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle774.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_overdruk_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput775(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle775 == null) {
                outElem775.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle775.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_verlichting_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput776(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle776 == null) {
                outElem776.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_bluswatervoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle776.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_bluswatervoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_bluswatervoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput777(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle777 == null) {
                outElem777.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sensor_brand_blus_installatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle777.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sensor_brand_blus_installatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_sensor_brand_blus_installatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput778(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle778 == null) {
                outElem778.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle778.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput779(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle779 == null) {
                outElem779.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_blus_pomp_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle779.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_blus_pomp_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_blus_pomp_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput780(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle780 == null) {
                outElem780.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_midden_pomp_kelder_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle780.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_midden_pomp_kelder_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_midden_pomp_kelder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput781(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle781 == null) {
                outElem781.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_1_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle781.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_1_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hoofd_pomp_kelder_1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput782(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle782 == null) {
                outElem782.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_2_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle782.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_2_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hoofd_pomp_kelder_2_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput783(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1) || (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle783 == null) {
                outElem783.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle783.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerskundigalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput784(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle784 == null) {
                outElem784.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle784.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput785(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle785 == null) {
                outElem785.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle785.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput786(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_rb_overzicht_systemen_en_detecties_SOS.lp_rb_overzicht_systemen_en_detecties_SOS == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and rb_overzicht_systemen_en_detecties_SOS.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle786 == null) {
                outElem786.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle786.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_sos_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput787(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_rb_overzicht_systemen_en_detecties_SOS.lp_rb_overzicht_systemen_en_detecties_SOS == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and rb_overzicht_systemen_en_detecties_SOS.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle787 == null) {
                outElem787.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_sectie1_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle787.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_sectie1_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_sos_sectie1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput788(State state) {
        try {
            String value;
            try {
                value = ((((((((state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) && (state.s_rb_overzicht_systemen_en_detecties_hulppost.lp_rb_overzicht_systemen_en_detecties_hulppost == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan) and rb_overzicht_systemen_en_detecties_hulppost.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle788 == null) {
                outElem788.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulpposten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle788.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulpposten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hulpposten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput789(State state) {
        try {
            String value;
            try {
                value = (((((state.s_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1)) && (state.s_rb_overzicht_systemen_en_detecties_hulppost.lp_rb_overzicht_systemen_en_detecties_hulppost == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan) and rb_overzicht_systemen_en_detecties_hulppost.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle789 == null) {
                outElem789.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostA_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle789.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostA_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hulppostA_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput790(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1)) && (state.s_rb_overzicht_systemen_en_detecties_hulppost.lp_rb_overzicht_systemen_en_detecties_hulppost == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan) and rb_overzicht_systemen_en_detecties_hulppost.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle790 == null) {
                outElem790.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostC_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle790.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostC_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hulppostC_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput791(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle791 == null) {
                outElem791.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle791.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput792(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle792 == null) {
                outElem792.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle792.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_deelsysteemalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput793(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle793 == null) {
                outElem793.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle793.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput794(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle794 == null) {
                outElem794.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle794.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput795(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle795 == null) {
                outElem795.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle795.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput796(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle796 == null) {
                outElem796.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle796.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput797(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle797 == null) {
                outElem797.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle797.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput798(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle798 == null) {
                outElem798.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle798.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput799(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle799 == null) {
                outElem799.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle799.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput800(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle800 == null) {
                outElem800.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle800.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput801(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle801 == null) {
                outElem801.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle801.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput802(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle802 == null) {
                outElem802.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle802.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput803(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle803 == null) {
                outElem803.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle803.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput804(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle804 == null) {
                outElem804.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle804.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput805(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle805 == null) {
                outElem805.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle805.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput806(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle806 == null) {
                outElem806.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle806.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput807(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle807 == null) {
                outElem807.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle807.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput808(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle808 == null) {
                outElem808.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle808.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput809(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle809 == null) {
                outElem809.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle809.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput810(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle810 == null) {
                outElem810.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle810.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput811(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle811 == null) {
                outElem811.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle811.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput812(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle812 == null) {
                outElem812.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle812.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput813(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle813 == null) {
                outElem813.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle813.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput814(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle814 == null) {
                outElem814.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle814.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput815(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle815 == null) {
                outElem815.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle815.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput816(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle816 == null) {
                outElem816.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle816.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput817(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle817 == null) {
                outElem817.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle817.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput818(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle818 == null) {
                outElem818.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle818.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput819(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle819 == null) {
                outElem819.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle819.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput820(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle820 == null) {
                outElem820.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle820.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput821(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle821 == null) {
                outElem821.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle821.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput822(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle822 == null) {
                outElem822.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle822.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput823(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle823 == null) {
                outElem823.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle823.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput824(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle824 == null) {
                outElem824.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle824.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput825(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle825 == null) {
                outElem825.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle825.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput826(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle826 == null) {
                outElem826.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle826.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput827(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle827 == null) {
                outElem827.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle827.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput828(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle828 == null) {
                outElem828.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle828.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput829(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle829 == null) {
                outElem829.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle829.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput830(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle830 == null) {
                outElem830.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle830.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput831(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle831 == null) {
                outElem831.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle831.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput832(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle832 == null) {
                outElem832.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle832.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput833(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle833 == null) {
                outElem833.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle833.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput834(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle834 == null) {
                outElem834.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle834.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput835(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle835 == null) {
                outElem835.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle835.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput836(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle836 == null) {
                outElem836.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_langsventilatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle836.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_langsventilatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_langsventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput837(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle837 == null) {
                outElem837.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle837.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput838(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle838 == null) {
                outElem838.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_gesloten_deel_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle838.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_gesloten_deel_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_verlichting_gesloten_deel_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput839(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle839 == null) {
                outElem839.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle839.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeurindicatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput840(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle840 == null) {
                outElem840.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle840.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput841(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle841 == null) {
                outElem841.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle841.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeurindicatie_contourverlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput842(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle842 == null) {
                outElem842.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeuren_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle842.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeuren_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput843(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle843 == null) {
                outElem843.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeur_open_sensor_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle843.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeur_open_sensor_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeur_open_sensor_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput844(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle844 == null) {
                outElem844.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle844.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_dynamische_vluchtroute_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_dynamische_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput845(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle845 == null) {
                outElem845.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle845.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_overdruk_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_overdruk_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput846(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle846 == null) {
                outElem846.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle846.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_veilige_ruimte_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_verlichting_veilige_ruimte_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput847(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle847 == null) {
                outElem847.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_bluswatervoorziening_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle847.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_bluswatervoorziening_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_bluswatervoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput848(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle848 == null) {
                outElem848.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sensor_brand_blus_installatie_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle848.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sensor_brand_blus_installatie_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_sensor_brand_blus_installatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput849(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle849 == null) {
                outElem849.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_blus_pomp_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle849.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_blus_pomp_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_blus_pomp_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput850(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle850 == null) {
                outElem850.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vloeistofafvoer_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle850.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vloeistofafvoer_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput851(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle851 == null) {
                outElem851.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_midden_pomp_kelder_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle851.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_midden_pomp_kelder_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_midden_pomp_kelder_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput852(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle852 == null) {
                outElem852.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_1_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle852.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_1_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hoofd_pomp_kelder_1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput853(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle853 == null) {
                outElem853.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_2_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle853.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_2_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hoofd_pomp_kelder_2_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput854(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle854 == null) {
                outElem854.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_deelsysteemalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle854.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_deelsysteemalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_deelsysteemalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput855(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle855 == null) {
                outElem855.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle855.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput856(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle856 == null) {
                outElem856.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle856.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput857(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle857 == null) {
                outElem857.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle857.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_sos_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput858(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle858 == null) {
                outElem858.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_sectie1_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle858.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_sectie1_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_sos_sectie1_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput859(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle859 == null) {
                outElem859.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulpposten_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle859.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulpposten_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hulpposten_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput860(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle860 == null) {
                outElem860.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostA_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle860.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostA_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hulppostA_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput861(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle861 == null) {
                outElem861.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostC_rechter_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle861.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostC_rechter_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hulppostC_rechter_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput862(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1) && (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_ventilatie.open and lb_overzicht_systemen_en_detecties_buis.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle862 == null) {
                outElem862.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle862.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput863(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_ventilatie.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle863 == null) {
                outElem863.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle863.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput864(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and lb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle864 == null) {
                outElem864.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle864.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Langsventilatie_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput865(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.auto and lb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle865 == null) {
                outElem865.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle865.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Langsventilatie_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput866(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and lb_overzicht_systemen_en_detecties_ventilatie.open and not Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle866 == null) {
                outElem866.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"langsventilatie_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle866.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"langsventilatie_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"langsventilatie_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput867(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.auto and lb_overzicht_systemen_en_detecties_ventilatie.open and not Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle867 == null) {
                outElem867.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle867.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"Langsventilatie_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"Langsventilatie_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput868(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open and lb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle868 == null) {
                outElem868.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle868.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput869(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 0) || (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 0)) || (state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.auto or lb_overzicht_systemen_en_detecties_ventilatie.dicht or lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle869 == null) {
                outElem869.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle869.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput870(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 0)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 0 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle870 == null) {
                outElem870.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle870.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_0_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput871(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 1)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 1 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle871 == null) {
                outElem871.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle871.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_125_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput872(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 2)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 2 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle872 == null) {
                outElem872.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle872.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_25_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput873(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 3)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 3 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle873 == null) {
                outElem873.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle873.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_375_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput874(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 4)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 4 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle874 == null) {
                outElem874.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle874.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_50_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput875(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 5)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 5 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle875 == null) {
                outElem875.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle875.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_625_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput876(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 6)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 6 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle876 == null) {
                outElem876.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle876.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_75_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput877(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 7)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 7 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle877 == null) {
                outElem877.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle877.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_875_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput878(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 8)) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Ventilatie.stand = 8 and lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle878 == null) {
                outElem878.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle878.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_check_mark_100_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput879(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 0) || (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 0)) || (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.auto or lb_overzicht_systemen_en_detecties_ventilatie.dicht or lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle879 == null) {
                outElem879.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle879.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput880(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1) && (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open and Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle880 == null) {
                outElem880.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle880.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput881(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_VentilatieRichting.lp_Tunnel_Verkeersbuis2_VentilatieRichting == 0) && (state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_VentilatieRichting.Rijrichting and lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle881 == null) {
                outElem881.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle881.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput882(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_VentilatieRichting.lp_Tunnel_Verkeersbuis2_VentilatieRichting == 1) && (state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_VentilatieRichting.TegenRijrichting and lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle882 == null) {
                outElem882.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle882.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput883(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 0) ? "Sensor Volgen" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 0))) ? "0  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 1))) ? "12.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 2))) ? "25  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 3))) ? "37.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 4))) ? "50  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 5))) ? "62.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 6))) ? "75  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 7))) ? "87.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Ventilatie.v_stand8, 8))) ? "100  %" : (" "))))))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.auto: \"Sensor Volgen\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 0: \"0  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 1: \"12.5  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 2: \"25  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 3: \"37.5  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 4: \"50  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 5: \"62.5  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 6: \"75  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 7: \"87.5  %\" elif Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and Tunnel_Verkeersbuis2_Ventilatie.stand = 8: \"100  %\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText883.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_percentage_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_percentage_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput884(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_VentilatieRichting.lp_Tunnel_Verkeersbuis2_VentilatieRichting == 1) && (state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_VentilatieRichting.TegenRijrichting and lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle884 == null) {
                outElem884.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle884.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_tegen_rijrichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput885(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_VentilatieRichting.lp_Tunnel_Verkeersbuis2_VentilatieRichting == 0) && (state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_VentilatieRichting.Rijrichting and lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle885 == null) {
                outElem885.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle885.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_richting_ventilatie_check_mark_rijrichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput886(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_VentilatieRichting.lp_Tunnel_Verkeersbuis2_VentilatieRichting == 0) ? "Mee" : ((state.s_Tunnel_Verkeersbuis2_VentilatieRichting.lp_Tunnel_Verkeersbuis2_VentilatieRichting == 1) ? "Tegen" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_VentilatieRichting.Rijrichting: \"Mee\" elif Tunnel_Verkeersbuis2_VentilatieRichting.TegenRijrichting: \"Tegen\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText886.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_ventilatie_stand_richting_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_stand_richting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput887(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1) && (state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting.open and lb_overzicht_systemen_en_detecties_buis.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle887 == null) {
                outElem887.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle887.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput888(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle888 == null) {
                outElem888.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle888.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput889(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle889 == null) {
                outElem889.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle889.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput890(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.auto and lb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle890 == null) {
                outElem890.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle890.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput891(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting.open and not Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle891 == null) {
                outElem891.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle891.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput892(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.auto and lb_overzicht_systemen_en_detecties_verlichting.open and not Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle892 == null) {
                outElem892.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle892.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput893(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting.open and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle893 == null) {
                outElem893.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle893.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput894(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 0) || (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 0)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.auto or lb_overzicht_systemen_en_detecties_verlichting.dicht: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle894 == null) {
                outElem894.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle894.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput895(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 0)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 0 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle895 == null) {
                outElem895.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle895.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_0_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput896(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 1)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 1 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle896 == null) {
                outElem896.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle896.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_125_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput897(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 2)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 2 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle897 == null) {
                outElem897.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle897.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_25_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput898(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 3)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 3 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle898 == null) {
                outElem898.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle898.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_375_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput899(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 4)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 4 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle899 == null) {
                outElem899.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle899.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_50_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput900(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 5)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 5 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle900 == null) {
                outElem900.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle900.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_625_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput901(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 6)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 6 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle901 == null) {
                outElem901.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle901.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_75_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput902(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 7)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 7 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle902 == null) {
                outElem902.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle902.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_875_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput903(State state) {
        try {
            String value;
            try {
                value = ((equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 8)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verlichting.stand = 8 and lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle903 == null) {
                outElem903.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle903.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_check_mark_100_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput904(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 0) ? "Sensor Volgen" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 0))) ? "0  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 1))) ? "12.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 2))) ? "25  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 3))) ? "37.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 4))) ? "50  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 5))) ? "62.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 6))) ? "75  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 7))) ? "87.5  %" : (((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (equal(state.s_Tunnel_Verkeersbuis2_Verlichting.v_stand10, 8))) ? "100  %" : (" "))))))))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.auto: \"Sensor Volgen\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 0: \"0  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 1: \"12.5  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 2: \"25  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 3: \"37.5  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 4: \"50  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 5: \"62.5  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 6: \"75  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 7: \"87.5  %\" elif Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and Tunnel_Verkeersbuis2_Verlichting.stand = 8: \"100  %\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText904.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_percentage_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_percentage_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput905(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle905 == null) {
                outElem905.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle905.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput906(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle906 == null) {
                outElem906.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle906.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput907(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and lb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle907 == null) {
                outElem907.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle907.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput908(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle908 == null) {
                outElem908.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle908.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput909(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 0) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.dicht and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle909 == null) {
                outElem909.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle909.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput910(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.auto and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle910 == null) {
                outElem910.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle910.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput911(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle911 == null) {
                outElem911.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle911.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput912(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.auto and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle912 == null) {
                outElem912.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle912.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"geluidsbakens_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"geluidsbakens_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput913(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 0) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.dicht and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle913 == null) {
                outElem913.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle913.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput914(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.auto and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle914 == null) {
                outElem914.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle914.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput915(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle915 == null) {
                outElem915.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle915.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput916(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) && (!(state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.auto and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and not Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle916 == null) {
                outElem916.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle916.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"contourverlichting_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"contourverlichting_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput917(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 0) || (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 0)) || (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.auto or lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.dicht or lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle917 == null) {
                outElem917.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle917.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput918(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle918 == null) {
                outElem918.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle918.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_vluchtdeurindicatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput919(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle919 == null) {
                outElem919.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle919.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput920(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken == 1) ? "Aan" : ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken == 0) ? "Uit" : ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken == 2) ? "Onderdrukt" : ("")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.aan: \"Aan\" elif Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.uit: \"Uit\" elif Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.onderdrukt: \"Onderdrukt\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText920.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_geluidsbakens_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_geluidsbakens_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput921(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.aan and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle921 == null) {
                outElem921.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle921.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput922(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.lp_Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken == 0) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_Geluidsbaken.uit and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle922 == null) {
                outElem922.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle922.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput923(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle923 == null) {
                outElem923.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle923.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_geluidsbakens_onderdrukt_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput924(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 0) || (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 0)) || (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 1)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.auto or lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.dicht or lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle924 == null) {
                outElem924.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle924.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput925(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle925 == null) {
                outElem925.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle925.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_vluchtdeurindicatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput926(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.aan and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle926 == null) {
                outElem926.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle926.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput927(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting == 0) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.uit and lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle927 == null) {
                outElem927.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle927.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput928(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting == 1) ? "Aan" : ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.lp_Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting == 0) ? "Uit" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.aan: \"Aan\" elif Tunnel_Verkeersbuis2_Vluchtdeur_ContourVerlichting.uit: \"Uit\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText928.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_contourverlichting_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_contourverlichting_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput929(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle929 == null) {
                outElem929.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle929.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput930(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtdeuren.lp_lb_overzicht_systemen_en_detecties_vluchtdeuren == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle930 == null) {
                outElem930.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle930.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput931(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vluchtdeuren.lp_lb_overzicht_systemen_en_detecties_vluchtdeuren == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle931 == null) {
                outElem931.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle931.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput932(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen == 1) ? "Ja" : ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen == 0) ? "Nee" : (" "));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.aan: \"Ja\" elif Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.uit: \"Nee\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText932.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vluchtdeuren_open_sensor_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeuren_open_sensor_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput933(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle933 == null) {
                outElem933.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle933.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput934(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle934 == null) {
                outElem934.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle934.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput935(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle935 == null) {
                outElem935.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle935.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput936(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle936 == null) {
                outElem936.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle936.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput937(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.auto and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle937 == null) {
                outElem937.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle937.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput938(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open and not Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle938 == null) {
                outElem938.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle938.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput939(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.auto and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open and not Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle939 == null) {
                outElem939.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle939.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"dynamische_vluchtroute_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"dynamische_vluchtroute_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput940(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle940 == null) {
                outElem940.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle940.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput941(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open and Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle941 == null) {
                outElem941.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle941.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput942(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 1) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.oplopend and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle942 == null) {
                outElem942.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle942.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput943(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 2) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.aflopend and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle943 == null) {
                outElem943.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle943.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput944(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 0) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.uit and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle944 == null) {
                outElem944.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle944.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput945(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 1) ? "Oplopend" : ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 2) ? "Aflopend" : ((state.s_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.lp_Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie == 0) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.oplopend: \"Oplopend\" elif Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.aflopend: \"Aflopend\" elif Tunnel_MiddenTunnelKanaal_DynamischeVluchtrouteIndicatie.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText945.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput946(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle946 == null) {
                outElem946.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle946.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput947(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle947 == null) {
                outElem947.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle947.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput948(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle948 == null) {
                outElem948.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle948.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput949(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.auto and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle949 == null) {
                outElem949.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle949.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput950(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle950 == null) {
                outElem950.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle950.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput951(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.auto and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle951 == null) {
                outElem951.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle951.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overdruk_veilige_ruimte_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overdruk_veilige_ruimte_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput952(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle952 == null) {
                outElem952.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle952.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput953(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open and Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle953 == null) {
                outElem953.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle953.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput954(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 2) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.rechts and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle954 == null) {
                outElem954.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle954.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput955(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 1) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.links and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle955 == null) {
                outElem955.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle955.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput956(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 0) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.uit and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle956 == null) {
                outElem956.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle956.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput957(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 2) ? "Rechts" : ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 1) ? "Links" : ((state.s_Tunnel_MiddenTunnelKanaal_Overdruk.lp_Tunnel_MiddenTunnelKanaal_Overdruk == 0) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Overdruk.rechts: \"Rechts\" elif Tunnel_MiddenTunnelKanaal_Overdruk.links: \"Links\" elif Tunnel_MiddenTunnelKanaal_Overdruk.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText957.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput958(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle958 == null) {
                outElem958.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle958.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput959(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle959 == null) {
                outElem959.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Licht_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle959.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Licht_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput960(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle960 == null) {
                outElem960.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle960.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput961(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.auto and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle961 == null) {
                outElem961.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle961.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput962(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle962 == null) {
                outElem962.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle962.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput963(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) && (!(state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.auto and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open and not Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle963 == null) {
                outElem963.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle963.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verlichting_veilige_ruimte_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verlichting_veilige_ruimte_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput964(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle964 == null) {
                outElem964.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle964.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput965(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 1) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open and Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle965 == null) {
                outElem965.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle965.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput966(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Verlichting.aan and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle966 == null) {
                outElem966.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle966.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput967(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 0) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Verlichting.uit and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle967 == null) {
                outElem967.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle967.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput968(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 1) ? "Aan" : ((state.s_Tunnel_MiddenTunnelKanaal_Verlichting.lp_Tunnel_MiddenTunnelKanaal_Verlichting == 0) ? "Uit" : (" "));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_Verlichting.aan: \"Aan\" elif Tunnel_MiddenTunnelKanaal_Verlichting.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText968.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput969(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle969 == null) {
                outElem969.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_bluswatervoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle969.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_bluswatervoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_bluswatervoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput970(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle970 == null) {
                outElem970.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle970.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput971(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 0) && (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.dicht and Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle971 == null) {
                outElem971.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle971.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput972(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle972 == null) {
                outElem972.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle972.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput973(State state) {
        try {
            String value;
            try {
                value = ((!(state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 0)) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if not Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_blusvoorziening.dicht: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle973 == null) {
                outElem973.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle973.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput974(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1)) && (!(state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_blusvoorziening.open and not Tunnel_BrandBlusInstallatie_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle974 == null) {
                outElem974.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle974.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"bluswatervoorziening_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"bluswatervoorziening_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput975(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle975 == null) {
                outElem975.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle975.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput976(State state) {
        try {
            String value;
            try {
                value = (((state.s_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 1) && (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open and Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle976 == null) {
                outElem976.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle976.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_bluswatervoorziening_blussen_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput977(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 0) && (state.s_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Regime.bewaken and lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle977 == null) {
                outElem977.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle977.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_regime_bewaken_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput978(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 1) && (state.s_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Regime.blussen and lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle978 == null) {
                outElem978.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle978.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_regime_blussen_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput979(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 0) ? "Bewaken" : ((state.s_Tunnel_BrandBlusInstallatie_Regime.lp_Tunnel_BrandBlusInstallatie_Regime == 1) ? "Blussen" : (" "));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Regime.bewaken: \"Bewaken\" elif Tunnel_BrandBlusInstallatie_Regime.blussen: \"Blussen\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText979.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput980(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_SensorLaag.lp_Tunnel_BrandBlusInstallatie_SensorLaag == 1) ? "Aan" : ("Uit");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_SensorLaag.aan: \"Aan\" else \"Uit\" end\" failed.", e, state);
            }

            String txt = value;
            outText980.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"brand_blus_installatie_sensor_laag_text_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"brand_blus_installatie_sensor_laag_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput981(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_SensorHoog.lp_Tunnel_BrandBlusInstallatie_SensorHoog == 1) ? "Aan" : ("Uit");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_SensorHoog.aan: \"Aan\" else \"Uit\" end\" failed.", e, state);
            }

            String txt = value;
            outText981.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"brand_blus_installatie_sensor_hoog_text_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"brand_blus_installatie_sensor_hoog_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput982(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_Pomp.lp_Tunnel_BrandBlusInstallatie_Pomp == 1) ? "Aan" : ("Uit");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Pomp.aan: \"Aan\" else \"Uit\" end\" failed.", e, state);
            }

            String txt = value;
            outText982.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"brand_blus_installatie_blus_pomp_stand_text_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"brand_blus_installatie_blus_pomp_stand_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput983(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle983 == null) {
                outElem983.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle983.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput984(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle984 == null) {
                outElem984.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle984.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput985(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 0) && (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.dicht and Tunnel_MiddenPompkelder_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle985 == null) {
                outElem985.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle985.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput986(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle986 == null) {
                outElem986.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle986.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput987(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_MiddenPompkelder_Bediening_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle987 == null) {
                outElem987.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle987.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput988(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_MiddenPompkelder_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle988 == null) {
                outElem988.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle988.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"midden_pomp_kelder_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"midden_pomp_kelder_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput989(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle989 == null) {
                outElem989.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle989.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput990(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1) && (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open and Tunnel_MiddenPompkelder_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle990 == null) {
                outElem990.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle990.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput991(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 1) && (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.bergen and overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle991 == null) {
                outElem991.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle991.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput992(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 0) && (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.leeghouden and overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle992 == null) {
                outElem992.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle992.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput993(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 2) && (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.uit and overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle993 == null) {
                outElem993.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle993.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput994(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 1) ? "Bergen" : ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 0) ? "Leeg houden" : ((state.s_Tunnel_MiddenPompkelder_Regime.lp_Tunnel_MiddenPompkelder_Regime == 2) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Regime.bergen: \"Bergen\" elif Tunnel_MiddenPompkelder_Regime.leeghouden: \"Leeg houden\" elif Tunnel_MiddenPompkelder_Regime.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText994.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput995(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenPompkelder_SensorLaagwater.lp_Tunnel_MiddenPompkelder_SensorLaagwater == 1) ? "Laag water" : ((state.s_Tunnel_MiddenPompkelder_SensorStartwater.lp_Tunnel_MiddenPompkelder_SensorStartwater == 1) ? "Start water" : ((state.s_Tunnel_MiddenPompkelder_SensorMaxstartwater.lp_Tunnel_MiddenPompkelder_SensorMaxstartwater == 1) ? "Max start water" : ((state.s_Tunnel_MiddenPompkelder_SensorLaaghoogwater.lp_Tunnel_MiddenPompkelder_SensorLaaghoogwater == 1) ? "Laag hoog water" : ((state.s_Tunnel_MiddenPompkelder_SensorHooghoogwater.lp_Tunnel_MiddenPompkelder_SensorHooghoogwater == 1) ? "Hoog hoog water" : (" ")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_SensorLaagwater.aan: \"Laag water\" elif Tunnel_MiddenPompkelder_SensorStartwater.aan: \"Start water\" elif Tunnel_MiddenPompkelder_SensorMaxstartwater.aan: \"Max start water\" elif Tunnel_MiddenPompkelder_SensorLaaghoogwater.aan: \"Laag hoog water\" elif Tunnel_MiddenPompkelder_SensorHooghoogwater.aan: \"Hoog hoog water\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText995.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_midden_pomp_kelder_niveau_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_niveau_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput996(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.dicht and Tunnel_HoofdPompkelder1_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle996 == null) {
                outElem996.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle996.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput997(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle997 == null) {
                outElem997.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle997.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput998(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder1_Bediening_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle998 == null) {
                outElem998.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle998.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput999(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder1_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle999 == null) {
                outElem999.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle999.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_1_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_1_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1000(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1000 == null) {
                outElem1000.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1000.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1001(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1) && (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open and Tunnel_HoofdPompkelder1_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1001 == null) {
                outElem1001.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1001.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1002(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 1) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.bergen and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1002 == null) {
                outElem1002.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1002.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1003(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 0) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.leeghouden and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1003 == null) {
                outElem1003.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1003.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1004(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 2) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.uit and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1004 == null) {
                outElem1004.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1004.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1005(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 1) ? "Bergen" : ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 0) ? "Leeg houden" : ((state.s_Tunnel_HoofdPompkelder1_Regime.lp_Tunnel_HoofdPompkelder1_Regime == 2) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Regime.bergen: \"Bergen\" elif Tunnel_HoofdPompkelder1_Regime.leeghouden: \"Leeg houden\" elif Tunnel_HoofdPompkelder1_Regime.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText1005.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1006(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder1_SensorLaagwater.lp_Tunnel_HoofdPompkelder1_SensorLaagwater == 1) ? "Laag water" : ((state.s_Tunnel_HoofdPompkelder1_SensorStartwater.lp_Tunnel_HoofdPompkelder1_SensorStartwater == 1) ? "Start water" : ((state.s_Tunnel_HoofdPompkelder1_SensorMaxstartwater.lp_Tunnel_HoofdPompkelder1_SensorMaxstartwater == 1) ? "Max start water" : ((state.s_Tunnel_HoofdPompkelder1_SensorLaaghoogwater.lp_Tunnel_HoofdPompkelder1_SensorLaaghoogwater == 1) ? "Laag hoog water" : ((state.s_Tunnel_HoofdPompkelder1_SensorHooghoogwater.lp_Tunnel_HoofdPompkelder1_SensorHooghoogwater == 1) ? "Hoog hoog water" : (" ")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_SensorLaagwater.aan: \"Laag water\" elif Tunnel_HoofdPompkelder1_SensorStartwater.aan: \"Start water\" elif Tunnel_HoofdPompkelder1_SensorMaxstartwater.aan: \"Max start water\" elif Tunnel_HoofdPompkelder1_SensorLaaghoogwater.aan: \"Laag hoog water\" elif Tunnel_HoofdPompkelder1_SensorHooghoogwater.aan: \"Hoog hoog water\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText1006.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_niveau_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_niveau_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1007(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.dicht and Tunnel_HoofdPompkelder2_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1007 == null) {
                outElem1007.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1007.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1008(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1008 == null) {
                outElem1008.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1008.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1009(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder2_Bediening_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1009 == null) {
                outElem1009.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1009.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1010(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) && (!(state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.auto and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open and not Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1010 == null) {
                outElem1010.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1010.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"hoofd_pomp_kelder_2_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"hoofd_pomp_kelder_2_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1011(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1011 == null) {
                outElem1011.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1011.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1012(State state) {
        try {
            String value;
            try {
                value = (((state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1) && (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) && (state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open and Tunnel_HoofdPompkelder2_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_vloeistofafvoer.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1012 == null) {
                outElem1012.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1012.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1013(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 1) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.bergen and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1013 == null) {
                outElem1013.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1013.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1014(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 0) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.leeghouden and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1014 == null) {
                outElem1014.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1014.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1015(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 2) && (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.uit and overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1015 == null) {
                outElem1015.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1015.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_check_mark_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1016(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 1) ? "Bergen" : ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 0) ? "Leeg houden" : ((state.s_Tunnel_HoofdPompkelder2_Regime.lp_Tunnel_HoofdPompkelder2_Regime == 2) ? "Uit" : (" ")));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Regime.bergen: \"Bergen\" elif Tunnel_HoofdPompkelder2_Regime.leeghouden: \"Leeg houden\" elif Tunnel_HoofdPompkelder2_Regime.uit: \"Uit\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText1016.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1017(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder2_SensorLaagwater.lp_Tunnel_HoofdPompkelder2_SensorLaagwater == 1) ? "Laag water" : ((state.s_Tunnel_HoofdPompkelder2_SensorStartwater.lp_Tunnel_HoofdPompkelder2_SensorStartwater == 1) ? "Start water" : ((state.s_Tunnel_HoofdPompkelder2_SensorMaxstartwater.lp_Tunnel_HoofdPompkelder2_SensorMaxstartwater == 1) ? "Max start water" : ((state.s_Tunnel_HoofdPompkelder2_SensorLaaghoogwater.lp_Tunnel_HoofdPompkelder2_SensorLaaghoogwater == 1) ? "Laag hoog water" : ((state.s_Tunnel_HoofdPompkelder2_SensorHooghoogwater.lp_Tunnel_HoofdPompkelder2_SensorHooghoogwater == 1) ? "Hoog hoog water" : (" ")))));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_SensorLaagwater.aan: \"Laag water\" elif Tunnel_HoofdPompkelder2_SensorStartwater.aan: \"Start water\" elif Tunnel_HoofdPompkelder2_SensorMaxstartwater.aan: \"Max start water\" elif Tunnel_HoofdPompkelder2_SensorLaaghoogwater.aan: \"Laag hoog water\" elif Tunnel_HoofdPompkelder2_SensorHooghoogwater.aan: \"Hoog hoog water\" else \" \" end\" failed.", e, state);
            }

            String txt = value;
            outText1017.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_niveau_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_niveau_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1018(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1018 == null) {
                outElem1018.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1018.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1019(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1019 == null) {
                outElem1019.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1019.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1020(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1020 == null) {
                outElem1020.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1020.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1021(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1021 == null) {
                outElem1021.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1021.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1022(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1022 == null) {
                outElem1022.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1022.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1023(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1023 == null) {
                outElem1023.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1023.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1024(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1024 == null) {
                outElem1024.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_VRI_en_afsluitboom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1024.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_VRI_en_afsluitboom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_VRI_en_afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1025(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1025 == null) {
                outElem1025.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1025.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1026(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1026 == null) {
                outElem1026.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1026.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1027(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.auto and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1027 == null) {
                outElem1027.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1027.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1028(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1028 == null) {
                outElem1028.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1028.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1029(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.auto and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1029 == null) {
                outElem1029.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1029.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerslichten_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerslichten_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1030(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1030 == null) {
                outElem1030.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1030.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_auto_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1031(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.auto and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1031 == null) {
                outElem1031.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_knop_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1031.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_knop_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_handmatig_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1032(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.auto: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1032 == null) {
                outElem1032.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1032.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_handmatig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_handmatig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1033(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 0) && (state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 1)) && (!(state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.auto and lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open and not Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1033 == null) {
                outElem1033.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1033.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitbomen_auto_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitbomen_auto_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1034(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3)) ? "Dicht" : ((((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 0) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 0)) && (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 0)) ? "Open" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood: \"Dicht\" elif Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.uit and Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.uit and Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.uit: \"Open\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText1034.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_buis_status_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_buis_status_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1035(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 0) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.uit: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1035 == null) {
                outElem1035.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1035.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1036(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 1) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.knipper: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1036 == null) {
                outElem1036.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1036.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1037(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1037 == null) {
                outElem1037.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1037.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1038(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 0) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.uit: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1038 == null) {
                outElem1038.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1038.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1039(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 1) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.knipper: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1039 == null) {
                outElem1039.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1039.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1040(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1040 == null) {
                outElem1040.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_text_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1040.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_text_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_rood_alle_verkeerslichten_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1041(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 1)) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.aan: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1041 == null) {
                outElem1041.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1041.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1042(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 0)) && ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 0))) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.uit) and (Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.uit): \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1042 == null) {
                outElem1042.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1042.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1043(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ActuatorNeer.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ActuatorNeer == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ActuatorNeer.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ActuatorNeer == 1)) ? "yellow" : ("grey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_ActuatorNeer.aan and Tunnel_Verkeersbuis2_Afsluitboom2_ActuatorNeer.aan: \"yellow\" else \"grey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1043 == null) {
                outElem1043.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1043.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1044(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 1)) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.aan: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1044 == null) {
                outElem1044.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_text_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1044.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_text_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_openen_alle_afsluitbomen_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1045(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 0)) || ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 0) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 0))) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.uit or (Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.uit or Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.uit): \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1045 == null) {
                outElem1045.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_text_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1045.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_text_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_stop_alle_afsluitbomen_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1046(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 1)) ? "black" : ("white");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.aan: \"black\" else \"white\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1046 == null) {
                outElem1046.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1046.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"VRI_en_afsluitboom_sluiten_alle_afsluitbomen_text_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1047(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) ? "Op" : ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1) ? "Neer" : ("In beweging"));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan: \"Op\" elif Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan: \"Neer\" else \"In beweging\" end\" failed.", e, state);
            }

            String txt = value;
            outText1047.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stand_afsluitboom1_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_stand_afsluitboom1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1048(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 1) ? "Op" : ((state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 1) ? "Neer" : ("In beweging"));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.aan: \"Op\" elif Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.aan: \"Neer\" else \"In beweging\" end\" failed.", e, state);
            }

            String txt = value;
            outText1048.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_stand_afsluitboom2_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_stand_afsluitboom2_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1049(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1) ? "Ja" : ("Nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan: \"Ja\" else \"Nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText1049.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom1_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1050(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1) ? "Ja" : ("Nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"Ja\" else \"Nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText1050.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom2_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"VRI_en_afsluitboom_geblokeerd_stand_afsluitboom2_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1051(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1051 == null) {
                outElem1051.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1051.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1052(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1052 == null) {
                outElem1052.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1052.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1053(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1053 == null) {
                outElem1053.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1053.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1054(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1054 == null) {
                outElem1054.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1054.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1055(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_SOS.lp_lb_overzicht_systemen_en_detecties_SOS == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_SOS.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1055 == null) {
                outElem1055.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_SOS_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1055.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_SOS_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1056(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_SOS.lp_lb_overzicht_systemen_en_detecties_SOS == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_SOS.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1056 == null) {
                outElem1056.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_SOS_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1056.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_SOS_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1057(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1057 == null) {
                outElem1057.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1057.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1058(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1058 == null) {
                outElem1058.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1058.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1059(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1059 == null) {
                outElem1059.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1059.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1060(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1060 == null) {
                outElem1060.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1060.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1061(State state) {
        try {
            String value;
            try {
                value = (((((state.s_lb_overzicht_systemen_en_detecties_hulppost.lp_lb_overzicht_systemen_en_detecties_hulppost == 1) || (state.s_lb_overzicht_systemen_en_detecties_deur.lp_lb_overzicht_systemen_en_detecties_deur == 1)) || (state.s_lb_overzicht_systemen_en_detecties_blusser.lp_lb_overzicht_systemen_en_detecties_blusser == 1)) || (state.s_lb_overzicht_systemen_en_detecties_haspel.lp_lb_overzicht_systemen_en_detecties_haspel == 1)) || (state.s_lb_overzicht_systemen_en_detecties_noodtelefoon.lp_lb_overzicht_systemen_en_detecties_noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_hulppost.open or lb_overzicht_systemen_en_detecties_deur.open or lb_overzicht_systemen_en_detecties_blusser.open or lb_overzicht_systemen_en_detecties_haspel.open or lb_overzicht_systemen_en_detecties_noodtelefoon.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1061 == null) {
                outElem1061.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hulppost_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1061.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"overzicht_systemen_en_detecties_hulppost_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"overzicht_systemen_en_detecties_hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1062(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_hulppost.lp_lb_overzicht_systemen_en_detecties_hulppost == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_hulppost.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1062 == null) {
                outElem1062.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1062.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1063(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) ? "Ja" : ("nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan: \"Ja\" else \"nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText1063.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_deur_open_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_deur_open_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1064(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1) ? "Nee" : ((state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 0) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan: \"Nee\" elif Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.uit: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText1064.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_handblusser_in_houder_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_handblusser_in_houder_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1065(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1) ? "Nee" : ((state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 0) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan: \"Nee\" elif Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.uit: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText1065.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_brandslang_in_houder_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_brandslang_in_houder_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1066(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 0) ? "Nee" : ((state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.uit: \"Nee\" elif Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText1066.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostA_noodtelefoon_gebruikt_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostA_noodtelefoon_gebruikt_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1067(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1) ? "Ja" : ("nee");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan: \"Ja\" else \"nee\" end\" failed.", e, state);
            }

            String txt = value;
            outText1067.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostC_deur_open_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostC_deur_open_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1068(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1) ? "Nee" : ((state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 0) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan: \"Nee\" elif Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.uit: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText1068.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostC_handblusser_in_houder_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostC_handblusser_in_houder_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1069(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 0) ? "Nee" : ((state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1) ? "Ja" : (""));
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.uit: \"Nee\" elif Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan: \"Ja\" else \"\" end\" failed.", e, state);
            }

            String txt = value;
            outText1069.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"systemen_en_detecties_hulppostC_noodtelefoon_gebruikt_stand_linker_buis\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"systemen_en_detecties_hulppostC_noodtelefoon_gebruikt_stand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1070(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_deur.lp_lb_overzicht_systemen_en_detecties_deur == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_deur.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1070 == null) {
                outElem1070.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Deur_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1070.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Deur_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1071(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_blusser.lp_lb_overzicht_systemen_en_detecties_blusser == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_blusser.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1071 == null) {
                outElem1071.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1071.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1072(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_haspel.lp_lb_overzicht_systemen_en_detecties_haspel == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_haspel.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1072 == null) {
                outElem1072.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1072.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1073(State state) {
        try {
            String value;
            try {
                value = (state.s_lb_overzicht_systemen_en_detecties_noodtelefoon.lp_lb_overzicht_systemen_en_detecties_noodtelefoon == 1) ? "gold" : ("slategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_noodtelefoon.open: \"gold\" else \"slategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1073 == null) {
                outElem1073.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1073.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1074(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1074 == null) {
                outElem1074.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_C2000_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1074.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_C2000_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1075(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1075 == null) {
                outElem1075.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1075.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1076(State state) {
        try {
            String value;
            try {
                value = "black";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"black\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1076 == null) {
                outElem1076.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_linker_buis\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1076.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_linker_buis\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"sub_blokken_overzicht_systemen_en_detecties_rect_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1077(State state) {
        try {
            String value;
            try {
                value = ((((((((((((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1)) || (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand or Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand or Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1077 == null) {
                outElem1077.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_handbediening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1077.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_handbediening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_handbediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1078(State state) {
        try {
            String value;
            try {
                value = (((((((((((((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1)) || (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) || (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand or Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand or Tunnel_BrandBlusInstallatie_Bediening_Modus.hand or Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1078 == null) {
                outElem1078.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_handbediening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1078.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_handbediening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_handbediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1079(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1079 == null) {
                outElem1079.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_buis_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1079.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_buis_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1080(State state) {
        try {
            String value;
            try {
                value = (((((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1)) || (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand or Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1080 == null) {
                outElem1080.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1080.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1081(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) || (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand or Tunnel_BrandBlusInstallatie_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1081 == null) {
                outElem1081.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1081.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1082(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1082 == null) {
                outElem1082.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1082.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1083(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1083 == null) {
                outElem1083.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1083.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1084(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1084 == null) {
                outElem1084.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_overig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1084.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_handbediening_overig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_handbediening_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1085(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1085 == null) {
                outElem1085.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_ventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1085.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_ventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1086(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1086 == null) {
                outElem1086.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1086.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1087(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1087 == null) {
                outElem1087.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1087.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1088(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1088 == null) {
                outElem1088.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1088.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1089(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1089 == null) {
                outElem1089.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1089.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1090(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1090 == null) {
                outElem1090.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1090.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1091(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1091 == null) {
                outElem1091.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1091.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1092(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1092 == null) {
                outElem1092.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1092.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1093(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1093 == null) {
                outElem1093.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1093.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1094(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1094 == null) {
                outElem1094.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Overdruk_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1094.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Overdruk_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1095(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1095 == null) {
                outElem1095.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Licht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1095.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Licht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1096(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1096 == null) {
                outElem1096.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1096.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1097(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1097 == null) {
                outElem1097.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1097.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1098(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1098 == null) {
                outElem1098.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1098.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1099(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1099 == null) {
                outElem1099.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1099.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1100(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1100 == null) {
                outElem1100.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Intercom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1100.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Intercom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1101(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1101 == null) {
                outElem1101.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Bediening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1101.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Bediening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1102(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1102 == null) {
                outElem1102.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1102.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1103(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1103 == null) {
                outElem1103.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1103.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1104(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1104 == null) {
                outElem1104.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1104.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1105(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1105 == null) {
                outElem1105.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1105.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1106(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1106 == null) {
                outElem1106.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1106.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1107(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1107 == null) {
                outElem1107.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1107.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1108(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1108 == null) {
                outElem1108.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hoogte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1108.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hoogte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1109(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1109 == null) {
                outElem1109.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_SOS_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1109.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_SOS_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1110(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1110 == null) {
                outElem1110.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1110.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1111(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1111 == null) {
                outElem1111.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Stilstand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1111.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Stilstand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1112(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1112 == null) {
                outElem1112.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1112.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1113(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1113 == null) {
                outElem1113.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Zicht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1113.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Zicht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1114(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1114 == null) {
                outElem1114.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hulppost_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1114.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Hulppost_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1115(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1115 == null) {
                outElem1115.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Deur_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1115.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Deur_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1116(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1116 == null) {
                outElem1116.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusser_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1116.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Blusser_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1117(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1117 == null) {
                outElem1117.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Haspel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1117.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Haspel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1118(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1118 == null) {
                outElem1118.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1118.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1119(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1119 == null) {
                outElem1119.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_C2000_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1119.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_C2000_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1120(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1120 == null) {
                outElem1120.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Telefoon_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1120.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_Telefoon_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1121(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1121 == null) {
                outElem1121.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1121.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_handbediening_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1122(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand and lb_overzicht_systemen_en_detecties_ventilatie.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1122 == null) {
                outElem1122.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_langsventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1122.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_langsventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_langsventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1123(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1123 == null) {
                outElem1123.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1123.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1124(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1124 == null) {
                outElem1124.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_gesloten_deel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1124.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_gesloten_deel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_verlichting_gesloten_deel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1125(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and (Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand or Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand): \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1125 == null) {
                outElem1125.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1125.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeurindicatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1126(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1126 == null) {
                outElem1126.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1126.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1127(State state) {
        try {
            String value;
            try {
                value = ((state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 1) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1127 == null) {
                outElem1127.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1127.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1128(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1128 == null) {
                outElem1128.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1128.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1129(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1129 == null) {
                outElem1129.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeur_open_sensor_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1129.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vluchtdeur_open_sensor_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vluchtdeur_open_sensor_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1130(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand and lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1130 == null) {
                outElem1130.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1130.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_dynamische_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1131(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand and lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1131 == null) {
                outElem1131.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1131.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_overdruk_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1132(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand and lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1132 == null) {
                outElem1132.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1132.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_verlichting_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1133(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1) && (state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_BrandBlusInstallatie_Bediening_Modus.hand and lb_overzicht_systemen_en_detecties_blusvoorziening.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1133 == null) {
                outElem1133.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_bluswatervoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1133.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_bluswatervoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_bluswatervoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1134(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1134 == null) {
                outElem1134.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sensor_brand_blus_installatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1134.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sensor_brand_blus_installatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_sensor_brand_blus_installatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1135(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1135 == null) {
                outElem1135.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_blus_pomp_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1135.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_blus_pomp_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_blus_pomp_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1136(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) || (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1)) || (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand or Tunnel_HoofdPompkelder1_Bediening_Modus.hand or Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1136 == null) {
                outElem1136.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1136.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1137(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_MiddenPompkelder_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1137 == null) {
                outElem1137.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_midden_pomp_kelder_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1137.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_midden_pomp_kelder_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_midden_pomp_kelder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1138(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder2_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1138 == null) {
                outElem1138.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_1_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1138.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_1_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_hoofd_pomp_kelder_1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1139(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_HoofdPompkelder1_Bediening_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1139 == null) {
                outElem1139.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_2_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1139.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_hoofd_pomp_kelder_2_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_hoofd_pomp_kelder_2_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1140(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.lp_Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus == 1) || (state.s_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_BedieningAfsluitbomen_Modus.hand or Tunnel_Verkeersbuis2_BedieningVerkeerslichten_Modus.hand: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1140 == null) {
                outElem1140.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_handbedieningalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1140.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_handbedieningalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_handbedieningalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1141(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1141 == null) {
                outElem1141.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1141.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom1_handbedieningalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1142(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1142 == null) {
                outElem1142.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1142.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom2_handbedieningalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1143(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1143 == null) {
                outElem1143.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1143.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_sos_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1144(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1144 == null) {
                outElem1144.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_sectie1_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1144.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handbedieningalarm_sos_sectie1_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handbedieningalarm_sos_sectie1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1145(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1145 == null) {
                outElem1145.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulpposten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1145.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulpposten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handmatigalarm_hulpposten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1146(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1146 == null) {
                outElem1146.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostA_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1146.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostA_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handmatigalarm_hulppostA_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1147(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1147 == null) {
                outElem1147.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostC_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1147.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"handmatigalarm_hulppostC_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"handmatigalarm_hulppostC_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1148(State state) {
        try {
            String value;
            try {
                value = ((((((((((state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_SOS.lp_Tunnel_Verkeersbuis2_SOS == 1)) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1)) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan or Tunnel_Verkeersbuis2_SOS.aan or Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1148 == null) {
                outElem1148.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1148.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1149(State state) {
        try {
            String value;
            try {
                value = ((((((((((state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_SOS.lp_Tunnel_Verkeersbuis2_SOS == 1)) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1)) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan or Tunnel_Verkeersbuis2_SOS.aan or Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1149 == null) {
                outElem1149.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1149.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_verkeerskundigalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1150(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1150 == null) {
                outElem1150.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1150.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1151(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.aan and lb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1151 == null) {
                outElem1151.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1151.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1152(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1152 == null) {
                outElem1152.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1152.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1153(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1153 == null) {
                outElem1153.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1153.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1154(State state) {
        try {
            String value;
            try {
                value = ((((((((state.s_Tunnel_Verkeersbuis2_SOS.lp_Tunnel_Verkeersbuis2_SOS == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_SOS.aan or Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1154 == null) {
                outElem1154.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1154.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1155(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1155 == null) {
                outElem1155.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1155.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_verkeerskundigalarm_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1156(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1156 == null) {
                outElem1156.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1156.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1157(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1157 == null) {
                outElem1157.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1157.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1158(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1158 == null) {
                outElem1158.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1158.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1159(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1159 == null) {
                outElem1159.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1159.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1160(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1160 == null) {
                outElem1160.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1160.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1161(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1161 == null) {
                outElem1161.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1161.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1162(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.aan and lb_overzicht_systemen_en_detecties_vluchtroute.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1162 == null) {
                outElem1162.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1162.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1163(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1163 == null) {
                outElem1163.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1163.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1164(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1164 == null) {
                outElem1164.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1164.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1165(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1165 == null) {
                outElem1165.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1165.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1166(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1166 == null) {
                outElem1166.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1166.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1167(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1167 == null) {
                outElem1167.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1167.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1168(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1168 == null) {
                outElem1168.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1168.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1169(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1169 == null) {
                outElem1169.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1169.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1170(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1170 == null) {
                outElem1170.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1170.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1171(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1171 == null) {
                outElem1171.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1171.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1172(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1172 == null) {
                outElem1172.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1172.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1173(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1173 == null) {
                outElem1173.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1173.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1174(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1174 == null) {
                outElem1174.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1174.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1175(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1175 == null) {
                outElem1175.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1175.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1176(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1176 == null) {
                outElem1176.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1176.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1177(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1177 == null) {
                outElem1177.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1177.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1178(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1178 == null) {
                outElem1178.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1178.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1179(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1179 == null) {
                outElem1179.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1179.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1180(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_SOS.lp_Tunnel_Verkeersbuis2_SOS == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_SOS.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1180 == null) {
                outElem1180.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1180.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1181(State state) {
        try {
            String value;
            try {
                value = (((((((state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1181 == null) {
                outElem1181.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1181.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1182(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1182 == null) {
                outElem1182.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1182.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1183(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1183 == null) {
                outElem1183.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1183.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1184(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1184 == null) {
                outElem1184.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1184.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1185(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1185 == null) {
                outElem1185.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1185.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1186(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1186 == null) {
                outElem1186.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1186.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1187(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1187 == null) {
                outElem1187.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1187.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1188(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1188 == null) {
                outElem1188.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1188.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1189(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1189 == null) {
                outElem1189.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1189.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1190(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1190 == null) {
                outElem1190.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1190.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1191(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1191 == null) {
                outElem1191.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1191.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1192(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1192 == null) {
                outElem1192.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1192.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_verkeerskundigalarm_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1193(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1193 == null) {
                outElem1193.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_langsventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1193.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_langsventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_langsventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1194(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1194 == null) {
                outElem1194.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1194.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1195(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1195 == null) {
                outElem1195.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_gesloten_deel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1195.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_gesloten_deel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_verlichting_gesloten_deel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1196(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1196 == null) {
                outElem1196.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1196.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeurindicatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1197(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1197 == null) {
                outElem1197.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1197.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1198(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1198 == null) {
                outElem1198.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1198.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1199(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeuren.lp_lb_overzicht_systemen_en_detecties_vluchtdeuren == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.aan and lb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1199 == null) {
                outElem1199.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1199.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1200(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen == 1) && (state.s_lb_overzicht_systemen_en_detecties_vluchtdeuren.lp_lb_overzicht_systemen_en_detecties_vluchtdeuren == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Vluchtdeur_SensorOpen.aan and lb_overzicht_systemen_en_detecties_vluchtdeuren.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1200 == null) {
                outElem1200.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeur_open_sensor_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1200.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vluchtdeur_open_sensor_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vluchtdeur_open_sensor_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1201(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1201 == null) {
                outElem1201.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1201.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_dynamische_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1202(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1202 == null) {
                outElem1202.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1202.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_overdruk_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1203(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1203 == null) {
                outElem1203.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1203.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_verlichting_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1204(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1204 == null) {
                outElem1204.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_bluswatervoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1204.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_bluswatervoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_bluswatervoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1205(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1205 == null) {
                outElem1205.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sensor_brand_blus_installatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1205.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sensor_brand_blus_installatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_sensor_brand_blus_installatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1206(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1206 == null) {
                outElem1206.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1206.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1207(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1207 == null) {
                outElem1207.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_blus_pomp_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1207.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_blus_pomp_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_blus_pomp_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1208(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1208 == null) {
                outElem1208.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_midden_pomp_kelder_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1208.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_midden_pomp_kelder_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_midden_pomp_kelder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1209(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1209 == null) {
                outElem1209.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_1_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1209.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_1_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hoofd_pomp_kelder_1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1210(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1210 == null) {
                outElem1210.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_2_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1210.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hoofd_pomp_kelder_2_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hoofd_pomp_kelder_2_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1211(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1) || (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan or Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1211 == null) {
                outElem1211.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerskundigalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1211.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_verkeerskundigalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_verkeerskundigalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1212(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1212 == null) {
                outElem1212.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1212.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom1_verkeerskundigalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1213(State state) {
        try {
            String value;
            try {
                value = (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.lp_Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom2_ObstakelDetectie.aan: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1213 == null) {
                outElem1213.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1213.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom2_verkeerskundigalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1214(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_SOS.lp_Tunnel_Verkeersbuis2_SOS == 1) && (state.s_lb_overzicht_systemen_en_detecties_SOS.lp_lb_overzicht_systemen_en_detecties_SOS == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_SOS.aan and lb_overzicht_systemen_en_detecties_SOS.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1214 == null) {
                outElem1214.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1214.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_sos_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1215(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis2_SOS.lp_Tunnel_Verkeersbuis2_SOS == 1) && (state.s_lb_overzicht_systemen_en_detecties_SOS.lp_lb_overzicht_systemen_en_detecties_SOS == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_SOS.aan and lb_overzicht_systemen_en_detecties_SOS.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1215 == null) {
                outElem1215.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_sectie1_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1215.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_sos_sectie1_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_sos_sectie1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1216(State state) {
        try {
            String value;
            try {
                value = ((((((((state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) && (state.s_lb_overzicht_systemen_en_detecties_hulppost.lp_lb_overzicht_systemen_en_detecties_hulppost == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan or Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan) and lb_overzicht_systemen_en_detecties_hulppost.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1216 == null) {
                outElem1216.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulpposten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1216.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulpposten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hulpposten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1217(State state) {
        try {
            String value;
            try {
                value = (((((state.s_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastA_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis2_HulppostkastA_Brandslang == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon == 1)) && (state.s_lb_overzicht_systemen_en_detecties_hulppost.lp_lb_overzicht_systemen_en_detecties_hulppost == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_HulppostkastA_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastA_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastA_Brandslang.aan or Tunnel_Verkeersbuis2_HulppostkastA_Noodtelefoon.aan) and lb_overzicht_systemen_en_detecties_hulppost.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1217 == null) {
                outElem1217.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostA_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1217.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostA_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hulppostA_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1218(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.lp_Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen == 1) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis2_HulppostkastC_Handblusser == 1)) || (state.s_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon == 1)) && (state.s_lb_overzicht_systemen_en_detecties_hulppost.lp_lb_overzicht_systemen_en_detecties_hulppost == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_HulppostkastC_SensorOpen.aan or Tunnel_Verkeersbuis2_HulppostkastC_Handblusser.aan or Tunnel_Verkeersbuis2_HulppostkastC_Noodtelefoon.aan) and lb_overzicht_systemen_en_detecties_hulppost.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1218 == null) {
                outElem1218.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostC_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1218.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"verkeerskundigalarm_hulppostC_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"verkeerskundigalarm_hulppostC_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1219(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1219 == null) {
                outElem1219.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_deelsysteemalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1219.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"active_tab_systemen_en_detecties_deelsysteemalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"active_tab_systemen_en_detecties_deelsysteemalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1220(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1220 == null) {
                outElem1220.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_deelsysteemalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1220.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"inactive_tab_systemen_en_detecties_deelsysteemalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"inactive_tab_systemen_en_detecties_deelsysteemalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1221(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1221 == null) {
                outElem1221.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1221.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1222(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1222 == null) {
                outElem1222.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1222.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1223(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1223 == null) {
                outElem1223.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1223.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1224(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1224 == null) {
                outElem1224.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1224.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1225(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1225 == null) {
                outElem1225.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1225.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1226(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1226 == null) {
                outElem1226.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1226.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_overzicht_systemen_en_detecties_deelsysteemalarm_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1227(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1227 == null) {
                outElem1227.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1227.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1228(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1228 == null) {
                outElem1228.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1228.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1229(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1229 == null) {
                outElem1229.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1229.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1230(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1230 == null) {
                outElem1230.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1230.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Beeld_HVD_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1231(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1231 == null) {
                outElem1231.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1231.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1232(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1232 == null) {
                outElem1232.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1232.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_vergrendeling_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1233(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1233 == null) {
                outElem1233.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1233.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1234(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1234 == null) {
                outElem1234.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1234.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Kopdeur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1235(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1235 == null) {
                outElem1235.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1235.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1236(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1236 == null) {
                outElem1236.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1236.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1237(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1237 == null) {
                outElem1237.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1237.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1238(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1238 == null) {
                outElem1238.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1238.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1239(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1239 == null) {
                outElem1239.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1239.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1240(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1240 == null) {
                outElem1240.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1240.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Omroep_HF_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1241(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1241 == null) {
                outElem1241.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1241.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Intercom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1242(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1242 == null) {
                outElem1242.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1242.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Bediening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1243(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1243 == null) {
                outElem1243.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1243.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_CCTV_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1244(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1244 == null) {
                outElem1244.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1244.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Brandmelding_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1245(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1245 == null) {
                outElem1245.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1245.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Waarschuwing_dienstruimten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1246(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1246 == null) {
                outElem1246.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1246.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1247(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1247 == null) {
                outElem1247.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1247.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Cado_hekken_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1248(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1248 == null) {
                outElem1248.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1248.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Veva_Beba_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1249(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1249 == null) {
                outElem1249.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1249.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Tunnelbuis_Wi_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1250(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1250 == null) {
                outElem1250.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1250.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hoogte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1251(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1251 == null) {
                outElem1251.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1251.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1252(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1252 == null) {
                outElem1252.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1252.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Snelheid_laag_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1253(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1253 == null) {
                outElem1253.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1253.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Stilstand_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1254(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1254 == null) {
                outElem1254.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1254.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Spookrijder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1255(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1255 == null) {
                outElem1255.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1255.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Zicht_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1256(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1256 == null) {
                outElem1256.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1256.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1257(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1257 == null) {
                outElem1257.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1257.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1258(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1258 == null) {
                outElem1258.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1258.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1259(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1259 == null) {
                outElem1259.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1259.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1260(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1260 == null) {
                outElem1260.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1260.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1261(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1261 == null) {
                outElem1261.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1261.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_C2000_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1262(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1262 == null) {
                outElem1262.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1262.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_Telefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1263(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1263 == null) {
                outElem1263.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1263.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_overzicht_systemen_en_detecties_deelsysteemalarm_GMK_beelden_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1264(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1264 == null) {
                outElem1264.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_langsventilatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1264.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_langsventilatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_langsventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1265(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1265 == null) {
                outElem1265.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1265.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1266(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1266 == null) {
                outElem1266.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_gesloten_deel_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1266.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_gesloten_deel_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_verlichting_gesloten_deel_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1267(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1267 == null) {
                outElem1267.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1267.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeurindicatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1268(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1268 == null) {
                outElem1268.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1268.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeurindicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1269(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1269 == null) {
                outElem1269.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1269.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeurindicatie_contourverlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1270(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1270 == null) {
                outElem1270.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeuren_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1270.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeuren_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1271(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1271 == null) {
                outElem1271.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeur_open_sensor_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1271.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vluchtdeur_open_sensor_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vluchtdeur_open_sensor_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1272(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1272 == null) {
                outElem1272.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1272.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_dynamische_vluchtroute_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_dynamische_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1273(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1273 == null) {
                outElem1273.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1273.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_overdruk_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_overdruk_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1274(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1274 == null) {
                outElem1274.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1274.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_verlichting_veilige_ruimte_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_verlichting_veilige_ruimte_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1275(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1275 == null) {
                outElem1275.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_bluswatervoorziening_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1275.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_bluswatervoorziening_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_bluswatervoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1276(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1276 == null) {
                outElem1276.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sensor_brand_blus_installatie_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1276.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sensor_brand_blus_installatie_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_sensor_brand_blus_installatie_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1277(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1277 == null) {
                outElem1277.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_blus_pomp_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1277.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_blus_pomp_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_blus_pomp_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1278(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1278 == null) {
                outElem1278.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vloeistofafvoer_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1278.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_vloeistofafvoer_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1279(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1279 == null) {
                outElem1279.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_midden_pomp_kelder_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1279.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_midden_pomp_kelder_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_midden_pomp_kelder_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1280(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1280 == null) {
                outElem1280.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_1_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1280.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_1_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hoofd_pomp_kelder_1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1281(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1281 == null) {
                outElem1281.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_2_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1281.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hoofd_pomp_kelder_2_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hoofd_pomp_kelder_2_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1282(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1282 == null) {
                outElem1282.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_deelsysteemalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1282.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_deelsysteemalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_deelsysteemalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1283(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1283 == null) {
                outElem1283.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1283.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom1_deelsysteemalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1284(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1284 == null) {
                outElem1284.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1284.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"VRI_en_afsluitboom_afsluitboom2_deelsysteemalarm_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1285(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1285 == null) {
                outElem1285.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1285.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_sos_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1286(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1286 == null) {
                outElem1286.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_sectie1_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1286.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_sos_sectie1_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_sos_sectie1_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1287(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1287 == null) {
                outElem1287.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulpposten_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1287.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulpposten_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hulpposten_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1288(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1288 == null) {
                outElem1288.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostA_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1288.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostA_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hulppostA_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1289(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1289 == null) {
                outElem1289.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostC_linker_buis\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1289.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"deelsysteemalarm_hulppostC_linker_buis\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"deelsysteemalarm_hulppostC_linker_buis\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1290(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1290 == null) {
                outElem1290.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_detailplattegrond_actief\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1290.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_detailplattegrond_actief\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_tab_detailplattegrond_actief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1291(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1291 == null) {
                outElem1291.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_detailplattegrond_inactief\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1291.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_detailplattegrond_inactief\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_tab_detailplattegrond_inactief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1292(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1292 == null) {
                outElem1292.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_meldigen_actief\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1292.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_meldigen_actief\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_tab_meldigen_actief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1293(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1293 == null) {
                outElem1293.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_meldigen_inactief\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1293.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_tab_meldigen_inactief\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_tab_meldigen_inactief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1294(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1294 == null) {
                outElem1294.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_detailplattegrond_inactief\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1294.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_detailplattegrond_inactief\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"tab_detailplattegrond_inactief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1295(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1295 == null) {
                outElem1295.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_detailplattegrond_actief\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1295.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_detailplattegrond_actief\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"tab_detailplattegrond_actief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1296(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1296 == null) {
                outElem1296.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_meldingen_actief\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1296.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_meldingen_actief\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"tab_meldingen_actief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1297(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1297 == null) {
                outElem1297.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_meldingen_inactief\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1297.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"tab_meldingen_inactief\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"tab_meldingen_inactief\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1298(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1298 == null) {
                outElem1298.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_ingedrukt\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1298.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_ingedrukt\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_ingedrukt\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1299(State state) {
        try {
            String value;
            try {
                value = (state.s_bevestigde_melding_sos_rechterbuis.lp_bevestigde_melding_sos_rechterbuis == 1) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if bevestigde_melding_sos_rechterbuis.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1299 == null) {
                outElem1299.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_ingedrukt_niet_bedienbaar\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1299.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_ingedrukt_niet_bedienbaar\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_ingedrukt_niet_bedienbaar\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1300(State state) {
        try {
            String value;
            try {
                value = (state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1300 == null) {
                outElem1300.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_normaal_melding_scherm_open_klappen\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1300.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_normaal_melding_scherm_open_klappen\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_normaal_melding_scherm_open_klappen\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1301(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1301 == null) {
                outElem1301.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_niet_beschikbaar_melding_scherm_open_klappen\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1301.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_niet_beschikbaar_melding_scherm_open_klappen\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_niet_beschikbaar_melding_scherm_open_klappen\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1302(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1302 == null) {
                outElem1302.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_ingedrukt_melding_scherm_open_klappen\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1302.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_ingedrukt_melding_scherm_open_klappen\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_ingedrukt_melding_scherm_open_klappen\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1303(State state) {
        try {
            String value;
            try {
                value = (state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1303 == null) {
                outElem1303.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_bevestigde_meldingen\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1303.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_bevestigde_meldingen\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"text_bevestigde_meldingen\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1304(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1304 == null) {
                outElem1304.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_bevestigde_meldingen\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1304.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"text_bevestigde_meldingen\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"text_bevestigde_meldingen\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1305(State state) {
        try {
            String value;
            try {
                value = (state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1305 == null) {
                outElem1305.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_meldingen_onbevestigde_meldingen\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1305.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"titel_blok_meldingen_onbevestigde_meldingen\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"titel_blok_meldingen_onbevestigde_meldingen\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1306(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1306 == null) {
                outElem1306.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen6\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1306.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen6\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_onbevestigde_meldingen6\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1307(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1307 == null) {
                outElem1307.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen7\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1307.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen7\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_onbevestigde_meldingen7\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1308(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1308 == null) {
                outElem1308.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen8\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1308.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen8\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_onbevestigde_meldingen8\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1309(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1309 == null) {
                outElem1309.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen9\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1309.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen9\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_onbevestigde_meldingen9\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1310(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1310 == null) {
                outElem1310.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen10\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1310.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_onbevestigde_meldingen10\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_onbevestigde_meldingen10\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1311(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1311 == null) {
                outElem1311.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1311.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1312(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1312 == null) {
                outElem1312.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1312.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1313(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1313 == null) {
                outElem1313.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1313.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1314(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1314 == null) {
                outElem1314.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen4\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1314.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen4\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen4\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1315(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1315 == null) {
                outElem1315.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen5\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1315.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen5\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen5\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1316(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1316 == null) {
                outElem1316.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen6\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1316.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen6\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen6\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1317(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1317 == null) {
                outElem1317.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen7\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1317.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen7\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen7\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1318(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1318 == null) {
                outElem1318.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen8\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1318.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen8\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen8\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1319(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1319 == null) {
                outElem1319.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen9\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1319.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen9\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen9\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1320(State state) {
        try {
            String value;
            try {
                value = ((state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if openen_en_sluiten_bevestigde_meldingen.open and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1320 == null) {
                outElem1320.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen10\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1320.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_leeg_bevestigde_meldingen10\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_leeg_bevestigde_meldingen10\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1321(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1321.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_melding_bijbehorende_camera_sos_rechter_buis_onbevestigd\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"blok_melding_bijbehorende_camera_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1322(State state) {
        try {
            String value;
            try {
                value = "Rechterbuis camera 4";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Rechterbuis camera 4\"\" failed.", e, state);
            }

            String txt = value;
            outText1322.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_locatie_sos_rechter_buis_onbevestigd\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"blok_meldingen_bijbehorende_locatie_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1323(State state) {
        try {
            String value;
            try {
                value = "SOS rechter buis";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"SOS rechter buis\"\" failed.", e, state);
            }

            String txt = value;
            outText1323.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_naam_melding_sos_rechter_buis_onbevestigd\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"blok_meldingen_naam_melding_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1324(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1324 == null) {
                outElem1324.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_onbevestigd\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1324.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_onbevestigd\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1325(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1325 == null) {
                outElem1325.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_onbevestigd\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1325.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_onbevestigd\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1326(State state) {
        try {
            String value;
            try {
                value = ((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_bevestigde_melding_sos_rechterbuis.lp_bevestigde_melding_sos_rechterbuis == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and bevestigde_melding_sos_rechterbuis.dicht: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1326 == null) {
                outElem1326.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_sos_rechter_buis_onbevestigd\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1326.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_sos_rechter_buis_onbevestigd\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1327(State state) {
        try {
            String value;
            try {
                value = (state.s_melding_sos_rechterbuis_geselecteerd.lp_melding_sos_rechterbuis_geselecteerd == 1) ? "yellow" : ("darkslategrey");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if melding_sos_rechterbuis_geselecteerd.open: \"yellow\" else \"darkslategrey\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1327 == null) {
                outElem1327.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_achtergrond_sos_rechter_buis_onbevestigd\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1327.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_achtergrond_sos_rechter_buis_onbevestigd\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"blok_meldingen_achtergrond_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1328(State state) {
        try {
            String value;
            try {
                value = (state.s_melding_sos_rechterbuis_geselecteerd.lp_melding_sos_rechterbuis_geselecteerd == 1) ? "hidden" : ("visible");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if melding_sos_rechterbuis_geselecteerd.open: \"hidden\" else \"visible\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1328 == null) {
                outElem1328.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_niet_bedienbaar\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1328.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_niet_bedienbaar\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_niet_bedienbaar\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1329(State state) {
        try {
            String value;
            try {
                value = "visible";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"visible\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1329 == null) {
                outElem1329.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_normaal\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1329.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"knoppen_meldingen_normaal\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"knoppen_meldingen_normaal\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1330(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1330 == null) {
                outElem1330.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"image14051\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1330.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"image14051\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"image14051\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1331(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1331.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_melding_bijbehorende_camera_sos_rechter_buis_bevestigd\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"blok_melding_bijbehorende_camera_sos_rechter_buis_bevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1332(State state) {
        try {
            String value;
            try {
                value = "Rechterbuis camera 4";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"Rechterbuis camera 4\"\" failed.", e, state);
            }

            String txt = value;
            outText1332.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_locatie_sos_rechter_buis_bevestigd\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"blok_meldingen_bijbehorende_locatie_sos_rechter_buis_bevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1333(State state) {
        try {
            String value;
            try {
                value = "SOS rechter buis";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"SOS rechter buis\"\" failed.", e, state);
            }

            String txt = value;
            outText1333.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_naam_melding_sos_rechter_buis_bevestigd\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"blok_meldingen_naam_melding_sos_rechter_buis_bevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1334(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1334 == null) {
                outElem1334.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_bevestigd\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1334.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_bevestigd\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_bijbehorende_alarm_deelsysteemalarm_sos_rechter_buis_bevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1335(State state) {
        try {
            String value;
            try {
                value = "hidden";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"hidden\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1335 == null) {
                outElem1335.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_bevestigd\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1335.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_bevestigd\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_bijbehorende_alarm_handmatigalarm_sos_rechter_buis_bevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1336(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_bevestigde_melding_sos_rechterbuis.lp_bevestigde_melding_sos_rechterbuis == 1)) && (state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and bevestigde_melding_sos_rechterbuis.open and openen_en_sluiten_bevestigde_meldingen.open: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1336 == null) {
                outElem1336.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_sos_rechter_buis_bevestigd\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1336.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"blok_meldingen_sos_rechter_buis_bevestigd\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"blok_meldingen_sos_rechter_buis_bevestigd\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1337(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1337 == null) {
                outElem1337.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1337.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1338(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1338 == null) {
                outElem1338.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1338.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1339(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1339 == null) {
                outElem1339.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1339.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1340(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1340 == null) {
                outElem1340.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1340.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1341(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1341 == null) {
                outElem1341.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1341.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1342(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1342 == null) {
                outElem1342.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1342.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1343(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1343 == null) {
                outElem1343.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1343.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1344(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1344 == null) {
                outElem1344.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1344.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1345(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1345 == null) {
                outElem1345.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1345.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1346(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1346 == null) {
                outElem1346.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1346.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1347(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1347 == null) {
                outElem1347.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1347.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1348(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1348 == null) {
                outElem1348.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1348.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1349(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1349 == null) {
                outElem1349.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1349.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_1_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1350(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1350 == null) {
                outElem1350.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1350.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_1_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1351(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1351 == null) {
                outElem1351.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1351.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1352(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1352 == null) {
                outElem1352.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1352.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1353(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1353 == null) {
                outElem1353.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1353.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1354(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1354 == null) {
                outElem1354.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1354.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1355(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1355 == null) {
                outElem1355.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1355.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1356(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1356 == null) {
                outElem1356.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1356.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1357(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1357 == null) {
                outElem1357.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1357.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1358(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1358 == null) {
                outElem1358.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1358.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1359(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1359 == null) {
                outElem1359.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1359.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1360(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1360 == null) {
                outElem1360.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1360.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1361(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1361 == null) {
                outElem1361.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1361.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1362(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1362 == null) {
                outElem1362.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1362.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1363(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1363 == null) {
                outElem1363.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1363.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1364(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1364 == null) {
                outElem1364.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1364.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1365(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1365 == null) {
                outElem1365.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1365.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_1_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1366(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1366 == null) {
                outElem1366.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1366.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_1_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_1_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1367(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1367 == null) {
                outElem1367.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1367.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1368(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1368 == null) {
                outElem1368.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1368.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1369(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1369 == null) {
                outElem1369.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1369.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1370(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1370 == null) {
                outElem1370.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1370.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1371(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1371 == null) {
                outElem1371.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1371.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1372(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1372 == null) {
                outElem1372.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1372.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1373(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1373 == null) {
                outElem1373.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1373.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1374(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1374 == null) {
                outElem1374.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1374.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1375(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1375 == null) {
                outElem1375.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1375.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1376(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1900)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1900)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1376 == null) {
                outElem1376.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1376.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1377(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1377 == null) {
                outElem1377.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1377.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1378(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1378 == null) {
                outElem1378.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1378.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1379(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1379 == null) {
                outElem1379.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1379.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1380(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1380 == null) {
                outElem1380.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1380.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1381(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1381 == null) {
                outElem1381.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1381.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1382(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1382 == null) {
                outElem1382.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1382.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1383(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1383 == null) {
                outElem1383.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1383.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1384(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1384 == null) {
                outElem1384.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1384.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1385(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1385 == null) {
                outElem1385.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1385.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1386(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1386 == null) {
                outElem1386.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1386.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1387(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1387 == null) {
                outElem1387.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1387.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1388(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1388 == null) {
                outElem1388.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1388.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1389(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1389 == null) {
                outElem1389.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1389.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1390(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1390 == null) {
                outElem1390.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1390.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_1_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1391(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.uit and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1391 == null) {
                outElem1391.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_lb_1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1391.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_lb_1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_uit_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1392(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1392 == null) {
                outElem1392.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_lb_1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1392.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_lb_1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_rood_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1393(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 2) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.knipper) and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1393 == null) {
                outElem1393.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_lb_1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1393.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_lb_1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_oranje_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1394(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.uit and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1394 == null) {
                outElem1394.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_lb_2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1394.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_lb_2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_uit_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1395(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1395 == null) {
                outElem1395.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_lb_2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1395.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_lb_2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_rood_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1396(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 2) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.knipper) and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1396 == null) {
                outElem1396.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_lb_2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1396.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_lb_2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_oranje_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1397(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.uit and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1397 == null) {
                outElem1397.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_lb_3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1397.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_lb_3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_uit_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1398(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1398 == null) {
                outElem1398.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_lb_3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1398.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_lb_3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_rood_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1399(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 2) || (state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.geel or Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.knipper) and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1399 == null) {
                outElem1399.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_lb_3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1399.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_lb_3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_oranje_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1400(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1400 == null) {
                outElem1400.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_open_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1400.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_open_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_afsluitboom_open_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1401(State state) {
        try {
            String value;
            try {
                value = ((((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 0) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 0)) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0)) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) && (!(state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.uit and Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.uit and Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit and Tunnel_Verkeersbuis2_Afsluitboom2_SensorOpen.uit and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd and not besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1401 == null) {
                outElem1401.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_in_beweging_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1401.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_in_beweging_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_afsluitboom_in_beweging_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1402(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht == 1) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis2_Afsluitboom2_SensorDicht.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1402 == null) {
                outElem1402.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_gesloten_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1402.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_gesloten_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_afsluitboom_gesloten_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1403(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1403 == null) {
                outElem1403.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links1_sectie_1lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1403.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links1_sectie_1lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links1_sectie_1lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1404(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1404 == null) {
                outElem1404.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links1_sectie_1lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1404.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links1_sectie_1lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links1_sectie_1lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1405(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1405 == null) {
                outElem1405.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_1lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1405.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_1lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_1lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1406(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1406 == null) {
                outElem1406.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts6_sectie_1rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1406.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts6_sectie_1rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts6_sectie_1rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1407(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie1: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1407 == null) {
                outElem1407.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts6_sectie_1rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1407.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts6_sectie_1rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts6_sectie_1rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1408(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1408 == null) {
                outElem1408.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1408.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1409(State state) {
        try {
            String value;
            try {
                value = "06";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"06\"\" failed.", e, state);
            }

            String txt = value;
            outText1409.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_1rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1410(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1410 == null) {
                outElem1410.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1410.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1411(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1411 == null) {
                outElem1411.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1411.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1412(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1412 == null) {
                outElem1412.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1412.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1413(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1413 == null) {
                outElem1413.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1413.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1414(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1414 == null) {
                outElem1414.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1414.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1415(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1415 == null) {
                outElem1415.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1415.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1416(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1416 == null) {
                outElem1416.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1416.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1417(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1417 == null) {
                outElem1417.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1417.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1418(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1418 == null) {
                outElem1418.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1418.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1419(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1419 == null) {
                outElem1419.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1419.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1420(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1420 == null) {
                outElem1420.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1420.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1421(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1421 == null) {
                outElem1421.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1421.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1422(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1422 == null) {
                outElem1422.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1422.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_2_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1423(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1423 == null) {
                outElem1423.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1423.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_2_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1424(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1424 == null) {
                outElem1424.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1424.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1425(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1425 == null) {
                outElem1425.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1425.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1426(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1426 == null) {
                outElem1426.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1426.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1427(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1427 == null) {
                outElem1427.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1427.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1428(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1428 == null) {
                outElem1428.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1428.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1429(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1429 == null) {
                outElem1429.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1429.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1430(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1430 == null) {
                outElem1430.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1430.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1431(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1431 == null) {
                outElem1431.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1431.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1432(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1432 == null) {
                outElem1432.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1432.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1433(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1433 == null) {
                outElem1433.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1433.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1434(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1434 == null) {
                outElem1434.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1434.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1435(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1435 == null) {
                outElem1435.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1435.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1436(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1436 == null) {
                outElem1436.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1436.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1437(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1437 == null) {
                outElem1437.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1437.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1438(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1438 == null) {
                outElem1438.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1438.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_2_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1439(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1439 == null) {
                outElem1439.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1439.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_2_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_2_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1440(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1440 == null) {
                outElem1440.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1440.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1441(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1441 == null) {
                outElem1441.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1441.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1442(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1442 == null) {
                outElem1442.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1442.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1443(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1443 == null) {
                outElem1443.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1443.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1444(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1444 == null) {
                outElem1444.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1444.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1445(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1445 == null) {
                outElem1445.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1445.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1446(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1446 == null) {
                outElem1446.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1446.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1447(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1447 == null) {
                outElem1447.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1447.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1448(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1448 == null) {
                outElem1448.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1448.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1449(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1900)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1900)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1449 == null) {
                outElem1449.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1449.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1450(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1450 == null) {
                outElem1450.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1450.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1451(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1451 == null) {
                outElem1451.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1451.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1452(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1452 == null) {
                outElem1452.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1452.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1453(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1453 == null) {
                outElem1453.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1453.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1454(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1454 == null) {
                outElem1454.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1454.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1455(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1455 == null) {
                outElem1455.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1455.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1456(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1456 == null) {
                outElem1456.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1456.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1457(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1457 == null) {
                outElem1457.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1457.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1458(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1458 == null) {
                outElem1458.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1458.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1459(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1459 == null) {
                outElem1459.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1459.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1460(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1460 == null) {
                outElem1460.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1460.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1461(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1461 == null) {
                outElem1461.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1461.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1462(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1462 == null) {
                outElem1462.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1462.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1463(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1463 == null) {
                outElem1463.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1463.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_2_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1464(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1464 == null) {
                outElem1464.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links1_sectie_2lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1464.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links1_sectie_2lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links1_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1465(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1465 == null) {
                outElem1465.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links1_sectie_2lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1465.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links1_sectie_2lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links1_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1466(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1466 == null) {
                outElem1466.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_2lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1466.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_2lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer1_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1467(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1467 == null) {
                outElem1467.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts6_sectie_2rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1467.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts6_sectie_2rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts6_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1468(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1468 == null) {
                outElem1468.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts6_sectie_2rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1468.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts6_sectie_2rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts6_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1469(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1469 == null) {
                outElem1469.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1469.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1470(State state) {
        try {
            String value;
            try {
                value = "06";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"06\"\" failed.", e, state);
            }

            String txt = value;
            outText1470.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer6_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1471(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1471 == null) {
                outElem1471.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links2_sectie_2lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1471.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links2_sectie_2lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links2_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1472(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1472 == null) {
                outElem1472.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links2_sectie_2lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1472.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links2_sectie_2lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links2_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1473(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1473 == null) {
                outElem1473.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1473.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1474(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1474.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1475(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1475.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer2_sectie_2lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer2_sectie_2lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1476(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1476 == null) {
                outElem1476.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links5_sectie_2rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1476.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links5_sectie_2rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links5_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1477(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie2: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1477 == null) {
                outElem1477.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links5_sectie_2rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1477.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links5_sectie_2rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links5_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1478(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1478 == null) {
                outElem1478.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1478.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1479(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1479.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1480(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1480.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer5_sectie_2rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer5_sectie_2rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1481(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1481 == null) {
                outElem1481.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1481.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1482(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1482 == null) {
                outElem1482.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1482.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1483(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1483 == null) {
                outElem1483.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1483.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_3_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1484(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1484 == null) {
                outElem1484.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1484.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_3_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1485(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1485 == null) {
                outElem1485.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1485.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_3_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1486(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1486 == null) {
                outElem1486.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1486.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1487(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1487 == null) {
                outElem1487.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1487.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1488(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1488 == null) {
                outElem1488.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1488.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1489(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1489 == null) {
                outElem1489.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1489.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_3_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1490(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1490 == null) {
                outElem1490.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1490.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_3_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1491(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1491 == null) {
                outElem1491.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1491.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_3_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_3_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1492(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1492 == null) {
                outElem1492.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1492.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1493(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1493 == null) {
                outElem1493.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1493.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1494(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1494 == null) {
                outElem1494.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1494.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1495(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1495 == null) {
                outElem1495.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1495.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1496(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1496 == null) {
                outElem1496.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1496.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1497(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1497 == null) {
                outElem1497.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1497.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_3_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1498(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie3: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1498 == null) {
                outElem1498.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links2_sectie_3lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1498.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links2_sectie_3lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links2_sectie_3lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1499(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie3: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1499 == null) {
                outElem1499.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links2_sectie_3lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1499.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links2_sectie_3lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links2_sectie_3lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1500(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1500 == null) {
                outElem1500.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1500.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1501(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1501.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer2_sectie_3lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1502(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1502.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer2_sectie_3lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer2_sectie_3lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1503(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie3: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1503 == null) {
                outElem1503.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links5_sectie_3rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1503.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links5_sectie_3rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links5_sectie_3rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1504(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie3: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1504 == null) {
                outElem1504.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links5_sectie_3rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1504.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links5_sectie_3rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links5_sectie_3rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1505(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1505 == null) {
                outElem1505.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1505.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1506(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1506.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer5_sectie_3rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1507(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1507.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer5_sectie_3rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer5_sectie_3rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1508(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1508 == null) {
                outElem1508.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1508.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1509(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1509 == null) {
                outElem1509.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1509.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1510(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1510 == null) {
                outElem1510.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1510.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_4_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1511(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1511 == null) {
                outElem1511.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1511.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_4_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1512(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1512 == null) {
                outElem1512.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1512.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_4_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1513(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1513 == null) {
                outElem1513.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_4\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1513.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_4\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_4\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1514(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1514 == null) {
                outElem1514.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1514.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1515(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1515 == null) {
                outElem1515.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1515.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1516(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1516 == null) {
                outElem1516.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1516.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_4_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1517(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1517 == null) {
                outElem1517.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1517.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_4_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1518(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1518 == null) {
                outElem1518.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1518.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_4_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_4_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1519(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1519 == null) {
                outElem1519.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1519.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1520(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1520 == null) {
                outElem1520.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1520.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1521(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1521 == null) {
                outElem1521.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1521.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1522(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1522 == null) {
                outElem1522.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1522.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1523(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1523 == null) {
                outElem1523.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1523.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1524(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1524 == null) {
                outElem1524.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1524.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_4_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1525(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1525 == null) {
                outElem1525.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts3_sectie_4lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1525.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts3_sectie_4lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts3_sectie_4lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1526(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1526 == null) {
                outElem1526.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts3_sectie_4lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1526.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts3_sectie_4lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts3_sectie_4lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1527(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1527 == null) {
                outElem1527.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1527.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1528(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1528.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_4lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1529(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1529.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer3_sectie_4lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer3_sectie_4lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1530(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1530 == null) {
                outElem1530.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts4_sectie_4rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1530.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts4_sectie_4rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts4_sectie_4rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1531(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1531 == null) {
                outElem1531.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts4_sectie_4rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1531.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts4_sectie_4rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts4_sectie_4rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1532(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1532 == null) {
                outElem1532.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1532.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1533(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1533.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_4rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1534(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1534.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer4_sectie_4rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer4_sectie_4rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1535(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1535 == null) {
                outElem1535.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1535.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1536(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1536 == null) {
                outElem1536.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1536.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1537(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1537 == null) {
                outElem1537.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_4_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1537.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_4_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_4_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1538(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1538 == null) {
                outElem1538.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_4_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1538.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_4_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_4_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1539(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1539 == null) {
                outElem1539.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1539.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1540(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1540 == null) {
                outElem1540.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1540.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1541(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1541 == null) {
                outElem1541.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1541.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslangA_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1542(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1542 == null) {
                outElem1542.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1542.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1543(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1543 == null) {
                outElem1543.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1543.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserA_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1544(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1544 == null) {
                outElem1544.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1544.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1545(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1545 == null) {
                outElem1545.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1545.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1546(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1546 == null) {
                outElem1546.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1546.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1547(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1547 == null) {
                outElem1547.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1547.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserC_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1548(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1548 == null) {
                outElem1548.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_4_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1548.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_4_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_4_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1549(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie4: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1549 == null) {
                outElem1549.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_sos_detectie_sectie_4rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1549.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_sos_detectie_sectie_4rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_sos_detectie_sectie_4rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1550(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1550 == null) {
                outElem1550.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1550.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1551(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1551 == null) {
                outElem1551.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1551.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1552(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1552 == null) {
                outElem1552.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1552.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_5_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1553(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1553 == null) {
                outElem1553.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1553.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_5_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1554(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1554 == null) {
                outElem1554.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1554.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_5_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1555(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1555 == null) {
                outElem1555.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_5\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1555.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_5\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_5\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1556(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1556 == null) {
                outElem1556.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1556.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1557(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1557 == null) {
                outElem1557.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1557.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1558(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1558 == null) {
                outElem1558.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1558.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_5_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1559(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1559 == null) {
                outElem1559.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1559.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_5_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1560(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1560 == null) {
                outElem1560.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1560.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_5_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_5_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1561(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1561 == null) {
                outElem1561.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1561.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1562(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1562 == null) {
                outElem1562.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1562.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1563(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1563 == null) {
                outElem1563.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1563.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1564(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1564 == null) {
                outElem1564.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1564.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1565(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1565 == null) {
                outElem1565.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1565.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1566(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1566 == null) {
                outElem1566.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1566.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_5_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1567(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1567 == null) {
                outElem1567.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts3_sectie_5lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1567.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts3_sectie_5lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts3_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1568(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1568 == null) {
                outElem1568.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts3_sectie_5lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1568.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts3_sectie_5lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts3_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1569(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1569 == null) {
                outElem1569.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1569.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1570(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1570.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer3_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1571(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1571.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer3_sectie_5lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer3_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1572(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1572 == null) {
                outElem1572.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts4_sectie_5rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1572.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts4_sectie_5rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts4_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1573(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1573 == null) {
                outElem1573.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts4_sectie_5rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1573.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts4_sectie_5rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts4_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1574(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1574 == null) {
                outElem1574.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1574.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1575(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1575.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer4_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1576(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1576.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer4_sectie_5rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer4_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1577(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1577 == null) {
                outElem1577.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links4_sectie_5lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1577.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links4_sectie_5lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links4_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1578(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1578 == null) {
                outElem1578.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links4_sectie_5lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1578.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links4_sectie_5lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links4_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1579(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1579 == null) {
                outElem1579.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1579.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1580(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1580.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1581(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1581.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer4_sectie_5lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer4_sectie_5lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1582(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1582 == null) {
                outElem1582.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links3_sectie_5rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1582.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links3_sectie_5rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links3_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1583(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1583 == null) {
                outElem1583.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links3_sectie_5rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1583.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links3_sectie_5rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links3_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1584(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1584 == null) {
                outElem1584.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1584.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1585(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1585.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1586(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1586.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer3_sectie_5rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer3_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1587(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1587 == null) {
                outElem1587.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1587.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1588(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1588 == null) {
                outElem1588.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1588.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1589(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1589 == null) {
                outElem1589.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1589.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1590(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1590 == null) {
                outElem1590.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1590.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1591(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1591 == null) {
                outElem1591.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1591.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1592(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1592 == null) {
                outElem1592.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1592.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1593(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1593 == null) {
                outElem1593.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1593.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslangA_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1594(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1594 == null) {
                outElem1594.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1594.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1595(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1595 == null) {
                outElem1595.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1595.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserA_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1596(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1596 == null) {
                outElem1596.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1596.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1597(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1597 == null) {
                outElem1597.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1597.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1598(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1598 == null) {
                outElem1598.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1598.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1599(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1599 == null) {
                outElem1599.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1599.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslangA_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1600(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1600 == null) {
                outElem1600.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1600.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1601(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1601 == null) {
                outElem1601.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1601.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserA_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1602(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1602 == null) {
                outElem1602.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1602.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1603(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1603 == null) {
                outElem1603.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1603.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1604(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1604 == null) {
                outElem1604.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1604.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1605(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1605 == null) {
                outElem1605.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1605.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserC_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1606(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1606 == null) {
                outElem1606.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1606.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1607(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1607 == null) {
                outElem1607.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1607.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1608(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1608 == null) {
                outElem1608.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1608.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1609(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1609 == null) {
                outElem1609.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1609.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserC_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1610(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1610 == null) {
                outElem1610.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1610.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_5_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1611(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie5: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1611 == null) {
                outElem1611.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_sos_detectie_sectie_5rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1611.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_sos_detectie_sectie_5rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_sos_detectie_sectie_5rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1612(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1612 == null) {
                outElem1612.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1612.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1613(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1613 == null) {
                outElem1613.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1613.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1614(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1614 == null) {
                outElem1614.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1614.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_6_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1615(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1615 == null) {
                outElem1615.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1615.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_6_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1616(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1616 == null) {
                outElem1616.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1616.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_6_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1617(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1617 == null) {
                outElem1617.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_6\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1617.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_6\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_6\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1618(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1618 == null) {
                outElem1618.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1618.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1619(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1619 == null) {
                outElem1619.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1619.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1620(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1620 == null) {
                outElem1620.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1620.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_6_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1621(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1621 == null) {
                outElem1621.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1621.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_6_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1622(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1622 == null) {
                outElem1622.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1622.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_6_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_6_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1623(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1623 == null) {
                outElem1623.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1623.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1624(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1624 == null) {
                outElem1624.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1624.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1625(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1625 == null) {
                outElem1625.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1625.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1626(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1626 == null) {
                outElem1626.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1626.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1627(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1627 == null) {
                outElem1627.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1627.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1628(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1628 == null) {
                outElem1628.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1628.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_6_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1629(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 4) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera4 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1629 == null) {
                outElem1629.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links4_sectie_6lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1629.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links4_sectie_6lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links4_sectie_6lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1630(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1630 == null) {
                outElem1630.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links4_sectie_6lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1630.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links4_sectie_6lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links4_sectie_6lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1631(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1631 == null) {
                outElem1631.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1631.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1632(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1632.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer4_sectie_6lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1633(State state) {
        try {
            String value;
            try {
                value = "04";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"04\"\" failed.", e, state);
            }

            String txt = value;
            outText1633.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer4_sectie_6lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer4_sectie_6lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1634(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera3 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1634 == null) {
                outElem1634.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links3_sectie_6rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1634.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links3_sectie_6rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links3_sectie_6rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1635(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1635 == null) {
                outElem1635.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links3_sectie_6rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1635.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links3_sectie_6rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links3_sectie_6rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1636(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1636 == null) {
                outElem1636.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1636.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1637(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1637.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer3_sectie_6rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1638(State state) {
        try {
            String value;
            try {
                value = "03";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"03\"\" failed.", e, state);
            }

            String txt = value;
            outText1638.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer3_sectie_6rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer3_sectie_6rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1639(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1639 == null) {
                outElem1639.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_6_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1639.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_6_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omlaag_sectie_6_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1640(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1640 == null) {
                outElem1640.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_6_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1640.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_6_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omlaag_open_detectie_sectie_6_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1641(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1641 == null) {
                outElem1641.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1641.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omhoog_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1642(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.lp_Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Vluchtdeur_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1642 == null) {
                outElem1642.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1642.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_vluchtdeur_pijl_omhoog_open_detectie_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1643(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1643 == null) {
                outElem1643.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1643.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonA_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1644(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1644 == null) {
                outElem1644.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1644.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieA_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1645(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1645 == null) {
                outElem1645.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1645.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslangA_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslangA_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1646(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.lp_Tunnel_Verkeersbuis1_HulppostkastA_Brandslang == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Brandslang.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1646 == null) {
                outElem1646.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1646.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_brandslang_detectieA_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1647(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1647 == null) {
                outElem1647.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1647.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserA_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserA_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1648(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastA_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastA_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1648 == null) {
                outElem1648.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1648.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieA_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1649(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1649 == null) {
                outElem1649.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1649.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoonC_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1650(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.lp_Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Noodtelefoon.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1650 == null) {
                outElem1650.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1650.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_noodtelefoon_detectieC_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1651(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1651 == null) {
                outElem1651.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1651.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusserC_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusserC_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1652(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.lp_Tunnel_Verkeersbuis1_HulppostkastC_Handblusser == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_HulppostkastC_Handblusser.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1652 == null) {
                outElem1652.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_6_lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1652.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_6_lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_hulppostkast_handblusser_detectieC_sectie_6_lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1653(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_SOS.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie6: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1653 == null) {
                outElem1653.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_sos_detectie_sectie_6rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1653.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_sos_detectie_sectie_6rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_sos_detectie_sectie_6rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1654(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1654 == null) {
                outElem1654.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1654.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1655(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1655 == null) {
                outElem1655.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1655.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1656(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1656 == null) {
                outElem1656.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1656.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_7_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1657(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1657 == null) {
                outElem1657.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1657.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_7_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1658(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1658 == null) {
                outElem1658.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1658.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_7_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1659(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1659 == null) {
                outElem1659.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_7\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1659.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_7\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_7\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1660(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1660 == null) {
                outElem1660.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1660.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1661(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1661 == null) {
                outElem1661.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1661.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1662(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1662 == null) {
                outElem1662.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1662.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_7_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1663(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1663 == null) {
                outElem1663.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1663.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_7_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1664(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1664 == null) {
                outElem1664.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1664.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_7_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_7_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1665(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1665 == null) {
                outElem1665.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1665.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1666(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1666 == null) {
                outElem1666.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1666.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1667(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1667 == null) {
                outElem1667.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1667.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1668(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1668 == null) {
                outElem1668.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1668.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1669(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1669 == null) {
                outElem1669.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1669.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1670(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie7 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1670 == null) {
                outElem1670.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1670.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_7_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1671(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie7: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1671 == null) {
                outElem1671.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts5_sectie_7lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1671.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts5_sectie_7lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts5_sectie_7lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1672(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie7: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1672 == null) {
                outElem1672.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts5_sectie_7lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1672.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts5_sectie_7lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts5_sectie_7lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1673(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1673 == null) {
                outElem1673.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1673.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1674(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1674.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_7lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1675(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1675.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer5_sectie_7lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer5_sectie_7lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1676(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie7: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1676 == null) {
                outElem1676.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts2_sectie_7rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1676.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts2_sectie_7rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts2_sectie_7rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1677(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie7: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1677 == null) {
                outElem1677.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts2_sectie_7rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1677.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts2_sectie_7rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts2_sectie_7rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1678(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1678 == null) {
                outElem1678.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1678.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1679(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1679.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_7rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1680(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1680.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer2_sectie_7rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer2_sectie_7rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1681(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1681 == null) {
                outElem1681.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1681.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1682(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1682 == null) {
                outElem1682.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1682.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1683(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1683 == null) {
                outElem1683.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1683.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1684(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1684 == null) {
                outElem1684.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1684.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1685(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1685 == null) {
                outElem1685.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1685.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1686(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1686 == null) {
                outElem1686.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1686.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1687(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1687 == null) {
                outElem1687.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1687.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1688(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1688 == null) {
                outElem1688.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1688.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1689(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1689 == null) {
                outElem1689.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1689.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1690(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1690 == null) {
                outElem1690.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1690.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1691(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1691 == null) {
                outElem1691.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1691.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1692(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1692 == null) {
                outElem1692.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1692.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1693(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1693 == null) {
                outElem1693.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1693.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_8_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1694(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1694 == null) {
                outElem1694.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1694.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_8_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1695(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1695 == null) {
                outElem1695.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_8\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1695.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_8\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_8\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1696(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1696 == null) {
                outElem1696.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_8\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1696.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_8\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_8\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1697(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1697 == null) {
                outElem1697.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1697.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1698(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1698 == null) {
                outElem1698.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1698.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1699(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1699 == null) {
                outElem1699.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1699.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1700(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1700 == null) {
                outElem1700.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1700.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1701(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1701 == null) {
                outElem1701.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1701.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1702(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1702 == null) {
                outElem1702.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1702.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1703(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1703 == null) {
                outElem1703.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1703.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1704(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1704 == null) {
                outElem1704.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1704.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1705(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1705 == null) {
                outElem1705.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1705.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1706(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1706 == null) {
                outElem1706.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1706.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1707(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1707 == null) {
                outElem1707.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1707.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1708(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1708 == null) {
                outElem1708.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1708.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1709(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1709 == null) {
                outElem1709.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1709.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_8_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1710(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1710 == null) {
                outElem1710.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1710.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_8_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_8_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1711(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1711 == null) {
                outElem1711.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1711.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1712(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1712 == null) {
                outElem1712.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1712.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1713(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1713 == null) {
                outElem1713.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1713.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1714(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1714 == null) {
                outElem1714.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1714.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1715(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1715 == null) {
                outElem1715.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1715.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1716(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1716 == null) {
                outElem1716.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1716.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1717(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1717 == null) {
                outElem1717.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1717.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1718(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1718 == null) {
                outElem1718.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1718.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1719(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1719 == null) {
                outElem1719.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1719.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1720(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1900)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1900)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1720 == null) {
                outElem1720.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1720.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1721(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1721 == null) {
                outElem1721.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1721.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1722(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1722 == null) {
                outElem1722.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1722.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1723(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1723 == null) {
                outElem1723.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1723.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1724(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1724 == null) {
                outElem1724.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1724.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1725(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1725 == null) {
                outElem1725.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1725.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1726(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1726 == null) {
                outElem1726.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1726.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1727(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1727 == null) {
                outElem1727.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1727.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1728(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1728 == null) {
                outElem1728.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1728.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1729(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1729 == null) {
                outElem1729.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1729.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1730(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1730 == null) {
                outElem1730.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1730.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1731(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1731 == null) {
                outElem1731.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1731.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1732(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1732 == null) {
                outElem1732.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1732.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1733(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1733 == null) {
                outElem1733.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1733.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1734(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(600,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie8 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(600,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1734 == null) {
                outElem1734.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1734.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_8_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1735(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 5) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera5 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1735 == null) {
                outElem1735.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts5_sectie_8lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1735.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts5_sectie_8lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts5_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1736(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1736 == null) {
                outElem1736.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts5_sectie_8lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1736.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts5_sectie_8lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts5_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1737(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1737 == null) {
                outElem1737.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1737.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1738(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1738.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer5_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1739(State state) {
        try {
            String value;
            try {
                value = "05";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"05\"\" failed.", e, state);
            }

            String txt = value;
            outText1739.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer5_sectie_8lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer5_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1740(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 2) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera2 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1740 == null) {
                outElem1740.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts2_sectie_8rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1740.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts2_sectie_8rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts2_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1741(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1741 == null) {
                outElem1741.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts2_sectie_8rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1741.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts2_sectie_8rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts2_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1742(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1742 == null) {
                outElem1742.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1742.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1743(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1743.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer2_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1744(State state) {
        try {
            String value;
            try {
                value = "02";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"02\"\" failed.", e, state);
            }

            String txt = value;
            outText1744.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer2_sectie_8rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer2_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1745(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1745 == null) {
                outElem1745.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links6_sectie_8lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1745.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links6_sectie_8lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links6_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1746(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1746 == null) {
                outElem1746.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links6_sectie_8lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1746.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links6_sectie_8lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links6_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1747(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1747 == null) {
                outElem1747.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1747.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1748(State state) {
        try {
            String value;
            try {
                value = "06";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"06\"\" failed.", e, state);
            }

            String txt = value;
            outText1748.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1749(State state) {
        try {
            String value;
            try {
                value = "06";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"06\"\" failed.", e, state);
            }

            String txt = value;
            outText1749.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer6_sectie_8lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer6_sectie_8lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1750(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1750 == null) {
                outElem1750.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts1_sectie_8rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1750.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts1_sectie_8rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts1_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1751(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie8: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1751 == null) {
                outElem1751.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts1_sectie_8rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1751.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts1_sectie_8rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts1_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1752(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1752 == null) {
                outElem1752.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1752.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1753(State state) {
        try {
            String value;
            try {
                value = "01";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"01\"\" failed.", e, state);
            }

            String txt = value;
            outText1753.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1754(State state) {
        try {
            String value;
            try {
                value = "01";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"01\"\" failed.", e, state);
            }

            String txt = value;
            outText1754.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer1_sectie_8rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer1_sectie_8rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1755(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1755 == null) {
                outElem1755.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1755.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1756(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1756 == null) {
                outElem1756.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1756.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1757(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1757 == null) {
                outElem1757.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1757.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1758(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1758 == null) {
                outElem1758.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1758.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1759(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1759 == null) {
                outElem1759.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1759.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1760(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1760 == null) {
                outElem1760.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1760.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1761(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1761 == null) {
                outElem1761.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1761.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1762(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1762 == null) {
                outElem1762.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1762.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1763(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1763 == null) {
                outElem1763.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1763.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1764(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1764 == null) {
                outElem1764.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1764.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1765(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1765 == null) {
                outElem1765.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1765.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1766(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1766 == null) {
                outElem1766.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1766.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1767(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1948)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1948)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1767 == null) {
                outElem1767.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_rb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1767.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_rb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_9_rb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1768(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1898)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1898)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1768 == null) {
                outElem1768.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_rb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1768.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_rb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_9_rb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1769(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1769 == null) {
                outElem1769.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_9\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1769.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_9\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_9\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1770(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(600,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(600,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1770 == null) {
                outElem1770.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_9\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1770.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_midden_tunnel_kanaal_sectie_9\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_midden_tunnel_kanaal_sectie_9\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1771(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1771 == null) {
                outElem1771.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1771.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1772(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1772 == null) {
                outElem1772.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1772.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1773(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1773 == null) {
                outElem1773.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1773.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1774(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1774 == null) {
                outElem1774.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1774.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1775(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1775 == null) {
                outElem1775.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1775.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1776(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1776 == null) {
                outElem1776.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1776.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1777(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1777 == null) {
                outElem1777.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1777.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1778(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1778 == null) {
                outElem1778.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1778.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1779(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1450)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1450)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1779 == null) {
                outElem1779.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1779.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_binnen_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1780(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1780 == null) {
                outElem1780.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1780.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1781(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1781 == null) {
                outElem1781.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1781.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1782(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1500)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1500)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1782 == null) {
                outElem1782.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1782.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_open_rijstrook_buiten_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1783(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1748)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1748)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1783 == null) {
                outElem1783.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_lb_12\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1783.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_lb_12\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_9_lb_12\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1784(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1698)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1698)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1784 == null) {
                outElem1784.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_lb_23\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1784.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_stippellijn_rijstrook_scheiding_sectie_9_lb_23\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_stippellijn_rijstrook_scheiding_sectie_9_lb_23\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1785(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1785 == null) {
                outElem1785.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1785.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1786(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1786 == null) {
                outElem1786.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1786.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1787(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1787 == null) {
                outElem1787.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1787.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1788(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1788 == null) {
                outElem1788.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1788.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1789(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1789 == null) {
                outElem1789.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1789.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1790(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1790 == null) {
                outElem1790.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1790.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1791(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1791 == null) {
                outElem1791.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1791.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1792(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1792 == null) {
                outElem1792.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1792.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1793(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1750)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1750)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1793 == null) {
                outElem1793.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1793.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1794(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1900)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1900)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1794 == null) {
                outElem1794.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1794.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1795(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1850)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1850)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1795 == null) {
                outElem1795.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1795.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1796(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1800)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1800)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1796 == null) {
                outElem1796.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1796.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1797(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1797 == null) {
                outElem1797.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1797.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1798(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1798 == null) {
                outElem1798.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1798.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1799(State state) {
        try {
            String value;
            try {
                value = "600";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"600\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1799 == null) {
                outElem1799.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1799.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1800(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1800 == null) {
                outElem1800.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1800.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1801(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1801 == null) {
                outElem1801.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1801.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1802(State state) {
        try {
            String value;
            try {
                value = "200";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"200\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1802 == null) {
                outElem1802.setAttribute("width", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"width\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1802.getStyle().setProperty("width", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"width\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"width\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1803(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1803 == null) {
                outElem1803.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1803.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1804(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis2_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1804 == null) {
                outElem1804.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1804.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1805(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(0,-1550)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(0,-1550)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1805 == null) {
                outElem1805.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1805.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_binnen_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1806(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1700)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1700)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1806 == null) {
                outElem1806.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1806.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1807(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1650)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1650)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1807 == null) {
                outElem1807.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1807.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1808(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "translate(200,-1600)" : ("translate(0,0)");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"translate(200,-1600)\" else \"translate(0,0)\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1808 == null) {
                outElem1808.setAttribute("transform", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"transform\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1808.getStyle().setProperty("transform", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3\" attr \"transform\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"transform\" of the SVG element with id \"detail_afgesloten_rijstrook_buiten_tunnel_sectie_9_lb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1809(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.uit and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1809 == null) {
                outElem1809.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_rb_1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1809.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_rb_1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_uit_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1810(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.rood and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1810 == null) {
                outElem1810.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_rb_1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1810.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_rb_1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_rood_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1811(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 2) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht1_Stand == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht1_Stand.knipper) and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1811 == null) {
                outElem1811.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_rb_1\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1811.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_rb_1\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_oranje_rb_1\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1812(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.uit and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1812 == null) {
                outElem1812.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_rb_2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1812.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_rb_2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_uit_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1813(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.rood and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1813 == null) {
                outElem1813.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_rb_2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1813.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_rb_2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_rood_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1814(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 2) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht2_Stand == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht2_Stand.knipper) and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1814 == null) {
                outElem1814.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_rb_2\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1814.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_rb_2\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_oranje_rb_2\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1815(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.uit and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1815 == null) {
                outElem1815.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_rb_3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1815.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_uit_rb_3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_uit_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1816(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 3) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.rood and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1816 == null) {
                outElem1816.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_rb_3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1816.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_rood_rb_3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_rood_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1817(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 2) || (state.s_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.lp_Tunnel_Verkeersbuis1_Verkeerslicht3_Stand == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if (Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.geel or Tunnel_Verkeersbuis1_Verkeerslicht3_Stand.knipper) and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1817 == null) {
                outElem1817.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_rb_3\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1817.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_verkeerslicht_oranje_rb_3\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_verkeerslicht_oranje_rb_3\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1818(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorOpen.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1818 == null) {
                outElem1818.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_open_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1818.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_open_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_afsluitboom_open_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1819(State state) {
        try {
            String value;
            try {
                value = ((((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 0) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 0)) && (state.s_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.lp_Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen == 0)) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen == 0)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 1)) && (!(state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8))) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.uit and Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.uit and Tunnel_Verkeersbuis2_Afsluitboom1_SensorOpen.uit and Tunnel_Verkeersbuis1_Afsluitboom2_SensorOpen.uit and geselecteerde_tab_verkeer_meldingen.meldingen_tab_geselecteerd and not besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1819 == null) {
                outElem1819.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_in_beweging_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1819.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_in_beweging_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_afsluitboom_in_beweging_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1820(State state) {
        try {
            String value;
            try {
                value = ((((state.s_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht == 1) && (state.s_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.lp_Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht == 1)) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Afsluitboom1_SensorDicht.aan and Tunnel_Verkeersbuis1_Afsluitboom2_SensorDicht.aan and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1820 == null) {
                outElem1820.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_gesloten_rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1820.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_afsluitboom_gesloten_rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_afsluitboom_gesloten_rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1821(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 6) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis2_Kanaal.camera6 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1821 == null) {
                outElem1821.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links6_sectie_9lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1821.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_links6_sectie_9lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_links6_sectie_9lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1822(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1822 == null) {
                outElem1822.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links6_sectie_9lb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1822.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_links6_sectie_9lb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_links6_sectie_9lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1823(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1823 == null) {
                outElem1823.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1823.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1824(State state) {
        try {
            String value;
            try {
                value = "06";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"06\"\" failed.", e, state);
            }

            String txt = value;
            outText1824.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_links_nummer6_sectie_9lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1825(State state) {
        try {
            String value;
            try {
                value = "06";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"06\"\" failed.", e, state);
            }

            String txt = value;
            outText1825.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_links_nummer6_sectie_9lb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_links_nummer6_sectie_9lb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1826(State state) {
        try {
            String value;
            try {
                value = (((state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 1) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if Tunnel_Verkeersbuis1_Kanaal.camera1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1826 == null) {
                outElem1826.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts1_sectie_9rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1826.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_actieve_camera_rechts1_sectie_9rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_actieve_camera_rechts1_sectie_9rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1827(State state) {
        try {
            String value;
            try {
                value = ((state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) && (state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd and besturing_selectie_tunneldeel_detailplattegrond.sectie9: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1827 == null) {
                outElem1827.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts1_sectie_9rb\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1827.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_inactieve_camera_rechts1_sectie_9rb\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_inactieve_camera_rechts1_sectie_9rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1828(State state) {
        try {
            String value;
            try {
                value = "white";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"white\"\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1828 == null) {
                outElem1828.setAttribute("fill", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb\" attr \"fill\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1828.getStyle().setProperty("fill", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb\" attr \"fill\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"fill\" of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1829(State state) {
        try {
            String value;
            try {
                value = "01";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"01\"\" failed.", e, state);
            }

            String txt = value;
            outText1829.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_inactieve_camera_rechts_nummer1_sectie_9rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1830(State state) {
        try {
            String value;
            try {
                value = "01";
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"\"01\"\" failed.", e, state);
            }

            String txt = value;
            outText1830.setNodeValue(txt);
            if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_camera_actieve_camera_rechts_nummer1_sectie_9rb\" text: \"%s\"", getSvgRelPath(), txt));
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for the text of the SVG element with id \"detail_plattegrond_camera_actieve_camera_rechts_nummer1_sectie_9rb\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1831(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1831 == null) {
                outElem1831.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_rechts\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1831.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_rechts\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_knop_rechts\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1832(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie9 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1832 == null) {
                outElem1832.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_rechts_niet_beschikbaar\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1832.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_rechts_niet_beschikbaar\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_knop_rechts_niet_beschikbaar\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1833(State state) {
        try {
            String value;
            try {
                value = (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1833 == null) {
                outElem1833.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_links\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1833.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_links\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_knop_links\" failed.", getSvgRelPath()), e, state);
        }
    }

    private void applyOutput1834(State state) {
        try {
            String value;
            try {
                value = ((state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0) && (state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0)) ? "visible" : ("hidden");
            } catch (CifSimulatorException e) {
                throw new CifSimulatorException("Evaluation of SVG output mapping value \"if besturing_selectie_tunneldeel_detailplattegrond.sectie1 and geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd: \"visible\" else \"hidden\" end\" failed.", e, state);
            }

            String txt = value;
            if (outStyle1834 == null) {
                outElem1834.setAttribute("visibility", txt);
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_links_niet_beschikbaar\" attr \"visibility\" (SVG attr): \"%s\"", getSvgRelPath(), txt));
            } else {
                outStyle1834.getStyle().setProperty("visibility", txt, "");
                if (debug) dbg.println(fmt("SVG output (\"%s\") id \"detail_plattegrond_knop_links_niet_beschikbaar\" attr \"visibility\" (CSS attr): \"%s\"", getSvgRelPath(), txt));
            }
        } catch (CifSimulatorException e) {
            throw new CifSimulatorException(fmt("Evaluation of the SVG output mapping (\"%s\") for attribute \"visibility\" of the SVG element with id \"detail_plattegrond_knop_links_niet_beschikbaar\" failed.", getSvgRelPath()), e, state);
        }
    }


    @Override
    public Set<String> getInteractiveIds() {
        return set("test_sos_rb", "knoppen_primaire_bediening_normaal_calamiteit_rechter_buis", "pop_up_bevestigen_calamiteit_knop_ok_rechter_buis", "pop_up_bevestigen_calamiteit_knop_afbreken_rechter_buis", "Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis", "drop_down_menu_stand_buis_operationeel_rechter_buis", "drop_down_menu_stand_buis_evacuatie_rechter_buis", "drop_down_menu_stand_buis_calamiteit_rechter_buis", "drop_down_menu_stand_buis_herstel_rechter_buis", "drop_down_menu_stand_buis_onderhoud_rechter_buis", "knoppen_primaire_bediening_normaal_vri_rechter_buis", "knoppen_primaire_bediening_normaal_vri_drop_down_rechter_buis", "knoppen_primaire_bediening_ingedrukt_vri_drop_down_rechter_buis", "primaire_bediening_drop_down_vri_rood_rechter_buis", "primaire_bediening_drop_down_vri_uitschakelen_rechter_buis", "knoppen_primaire_bediening_normaal_buis_sluiten_rechter_buis", "knoppen_primaire_bediening_normaal_buis_openen_rechter_buis", "knoppen_primaire_bediening_normaal_camera_links_rechter_buis", "knoppen_primaire_bediening_normaal_camera_rechts_rechter_buis", "knoppen_primaire_bediening_normaal_calamiteit_linker_buis", "pop_up_bevestigen_calamiteit_knop_ok_linker_buis", "pop_up_bevestigen_calamiteit_knop_afbreken_linker_buis", "Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis", "drop_down_menu_stand_buis_operationeel_linker_buis", "drop_down_menu_stand_buis_evacuatie_linker_buis", "drop_down_menu_stand_buis_calamiteit_linker_buis", "drop_down_menu_stand_buis_herstel_linker_buis", "drop_down_menu_stand_buis_onderhoud_linker_buis", "knoppen_primaire_bediening_normaal_vri_linker_buis", "knoppen_primaire_bediening_normaal_vri_drop_down_linker_buis", "knoppen_primaire_bediening_ingedrukt_vri_drop_down_linker_buis", "primaire_bediening_drop_down_vri_rood_linker_buis", "primaire_bediening_drop_down_vri_uitschakelen_linker_buis", "knoppen_primaire_bediening_normaal_buis_sluiten_linker_buis", "knoppen_primaire_bediening_normaal_buis_openen_linker_buis", "knoppen_primaire_bediening_normaal_camera_rechts_linker_buis", "knoppen_primaire_bediening_normaal_camera_links_linker_buis", "keuze_sectie_voor_detail_plattegrond_sectie_1", "keuze_sectie_voor_detail_plattegrond_sectie_2", "keuze_sectie_voor_detail_plattegrond_sectie_3", "keuze_sectie_voor_detail_plattegrond_sectie_4", "keuze_sectie_voor_detail_plattegrond_sectie_5", "keuze_sectie_voor_detail_plattegrond_sectie_6", "keuze_sectie_voor_detail_plattegrond_sectie_7", "keuze_sectie_voor_detail_plattegrond_sectie_8", "keuze_sectie_voor_detail_plattegrond_sectie_9", "inactive_tab_systemen_en_detecties_rechter_buis", "inactive_tab_systemen_en_detecties_linker_buis", "active_tab_systemen_en_detecties_rechter_buis", "active_tab_systemen_en_detecties_linker_buis", "Drop_down_menu_open_pijltje_buis_rechter_buis", "Drop_down_menu_dicht_pijltje_buis_rechter_buis", "Drop_down_menu_open_pijltje_vluchtroute_rechter_buis", "Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis", "Drop_down_menu_open_pijltje_tunnel_rechter_buis", "Drop_down_menu_dicht_pijltje_tunnel_rechter_buis", "Drop_down_menu_open_pijltje_verkeer_rechter_buis", "Drop_down_menu_dicht_pijltje_verkeer_rechter_buis", "Drop_down_menu_open_pijltje_detecties_rechter_buis", "Drop_down_menu_dicht_pijltje_detecties_rechter_buis", "Drop_down_menu_open_pijltje_overig_rechter_buis", "Drop_down_menu_dicht_pijltje_overig_rechter_buis", "Drop_down_menu_open_pijltje_buis_linker_buis", "Drop_down_menu_dicht_pijltje_buis_linker_buis", "Drop_down_menu_open_pijltje_vluchtroute_linker_buis", "Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis", "Drop_down_menu_open_pijltje_tunnel_linker_buis", "Drop_down_menu_dicht_pijltje_tunnel_linker_buis", "Drop_down_menu_open_pijltje_verkeer_linker_buis", "Drop_down_menu_dicht_pijltje_verkeer_linker_buis", "Drop_down_menu_open_pijltje_detecties_linker_buis", "Drop_down_menu_dicht_pijltje_detecties_linker_buis", "Drop_down_menu_open_pijltje_overig_linker_buis", "Drop_down_menu_dicht_pijltje_overig_linker_buis", "blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis", "Langsventilatie_handmatig_knop_rechter_buis", "Langsventilatie_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand0_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand125_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand25_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand375_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand50_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand625_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand75_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand875_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand100_rechter_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_rechter_buis", "blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis", "verlichting_handmatig_knop_rechter_buis", "verlichting_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand0_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand125_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand25_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand375_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand50_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand625_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand75_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand875_rechter_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand100_rechter_buis", "blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis", "geluidsbakens_handmatig_knop_rechter_buis", "geluidsbakens_auto_knop_rechter_buis", "contourverlichting_handmatig_knop_rechter_buis", "contourverlichting_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_rechter_buis", "overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_rechter_buis", "overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_rechter_buis", "overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_rechter_buis", "blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis", "blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis", "dynamische_vluchtroute_handmatig_knop_rechter_buis", "dynamische_vluchtroute_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_rechter_buis", "overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_rechter_buis", "overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_rechter_buis", "blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis", "overdruk_veilige_ruimte_handmatig_knop_rechter_buis", "overdruk_veilige_ruimte_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_rechter_buis", "overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_rechter_buis", "overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_rechter_buis", "blokken_overzicht_systemen_en_detecties_Licht_rechter_buis", "verlichting_veilige_ruimte_handmatig_knop_rechter_buis", "verlichting_veilige_ruimte_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_rechter_buis", "overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_rechter_buis", "blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis", "bluswatervoorziening_handmatig_knop_rechter_buis", "bluswatervoorziening_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_regime_bewaken_rechter_buis", "overzicht_systemen_en_detecties_drop_down_regime_blussen_rechter_buis", "blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis", "midden_pomp_kelder_handmatig_knop_rechter_buis", "midden_pomp_kelder_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_rechter_buis", "overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_rechter_buis", "overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_rechter_buis", "hoofd_pomp_kelder_1_handmatig_knop_rechter_buis", "hoofd_pomp_kelder_1_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_rechter_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_rechter_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_rechter_buis", "hoofd_pomp_kelder_2_handmatig_knop_rechter_buis", "hoofd_pomp_kelder_2_auto_knop_rechter_buis", "overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_rechter_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_rechter_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_rechter_buis", "blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis", "VRI_en_afsluitboom_verkeerslichten_handmatig_knop_rechter_buis", "VRI_en_afsluitboom_verkeerslichten_auto_knop_rechter_buis", "VRI_en_afsluitboom_afsluitbomen_handmatig_knop_rechter_buis", "VRI_en_afsluitboom_afsluitbomen_auto_knop_rechter_buis", "VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_rechter_buis", "VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_rechter_buis", "VRI_en_afsluitboom_rood_alle_verkeerslichten_rechter_buis", "VRI_en_afsluitboom_openen_alle_afsluitbomen_rechter_buis", "VRI_en_afsluitboom_stop_alle_afsluitbomen_rechter_buis", "VRI_en_afsluitboom_sluiten_alle_afsluitbomen_rechter_buis", "blokken_overzicht_systemen_en_detecties_SOS_rechter_buis", "blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis", "blokken_overzicht_systemen_en_detecties_Deur_rechter_buis", "blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis", "blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis", "blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis", "blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis", "Langsventilatie_handmatig_knop_linker_buis", "Langsventilatie_auto_knop_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand0_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand125_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand25_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand375_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand50_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand625_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand75_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand875_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_stand100_linker_buis", "overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_richting_ventilatie_tegen_rijrichting_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_richting_ventilatie_rijrichting_knop_linker_buis", "blokken_overzicht_systemen_en_detecties_verlichting_linker_buis", "verlichting_handmatig_knop_linker_buis", "verlichting_auto_knop_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand0_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand125_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand25_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand375_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand50_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand625_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand75_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand875_linker_buis", "overzicht_systemen_en_detecties_verlichting_dropdown_standen_stand100_linker_buis", "blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis", "geluidsbakens_handmatig_knop_linker_buis", "geluidsbakens_auto_knop_linker_buis", "contourverlichting_handmatig_knop_linker_buis", "contourverlichting_auto_knop_linker_buis", "overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_geluidsbakens_aan_linker_buis", "overzicht_systemen_en_detecties_drop_down_geluidsbakens_uit_linker_buis", "overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_contourverlichting_aan_linker_buis", "overzicht_systemen_en_detecties_drop_down_contourverlichting_uit_linker_buis", "blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis", "blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis", "dynamische_vluchtroute_handmatig_knop_linker_buis", "dynamische_vluchtroute_auto_knop_linker_buis", "overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_oplopend_linker_buis", "overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_aflopend_linker_buis", "overzicht_systemen_en_detecties_drop_down_dynamische_vluchtroute_uit_linker_buis", "blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis", "overdruk_veilige_ruimte_handmatig_knop_linker_buis", "overdruk_veilige_ruimte_auto_knop_linker_buis", "overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_rechts_linker_buis", "overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_links_linker_buis", "overzicht_systemen_en_detecties_drop_down_overdruk_veilige_ruimte_uit_linker_buis", "blokken_overzicht_systemen_en_detecties_Licht_linker_buis", "verlichting_veilige_ruimte_handmatig_knop_linker_buis", "verlichting_veilige_ruimte_auto_knop_linker_buis", "overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_aan_linker_buis", "overzicht_systemen_en_detecties_drop_down_verlichting_veilige_ruimte_uit_linker_buis", "blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis", "bluswatervoorziening_handmatig_knop_linker_buis", "bluswatervoorziening_auto_knop_linker_buis", "overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_regime_bewaken_linker_buis", "overzicht_systemen_en_detecties_drop_down_regime_blussen_linker_buis", "blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis", "midden_pomp_kelder_handmatig_knop_linker_buis", "midden_pomp_kelder_auto_knop_linker_buis", "overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_bergen_linker_buis", "overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_leeg_houden_linker_buis", "overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_uit_linker_buis", "hoofd_pomp_kelder_1_handmatig_knop_linker_buis", "hoofd_pomp_kelder_1_auto_knop_linker_buis", "overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_bergen_linker_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_leeg_houden_linker_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_uit_linker_buis", "hoofd_pomp_kelder_2_handmatig_knop_linker_buis", "hoofd_pomp_kelder_2_auto_knop_linker_buis", "overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_bergen_linker_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_leeg_houden_linker_buis", "overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_uit_linker_buis", "blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis", "VRI_en_afsluitboom_verkeerslichten_handmatig_knop_linker_buis", "VRI_en_afsluitboom_verkeerslichten_auto_knop_linker_buis", "VRI_en_afsluitboom_afsluitbomen_handmatig_knop_linker_buis", "VRI_en_afsluitboom_afsluitbomen_auto_knop_linker_buis", "VRI_en_afsluitboom_gedoofd_alle_verkeerslichten_linker_buis", "VRI_en_afsluitboom_geel_knipperen_alle_verkeerslichten_linker_buis", "VRI_en_afsluitboom_rood_alle_verkeerslichten_linker_buis", "VRI_en_afsluitboom_openen_alle_afsluitbomen_linker_buis", "VRI_en_afsluitboom_stop_alle_afsluitbomen_linker_buis", "VRI_en_afsluitboom_sluiten_alle_afsluitbomen_linker_buis", "blokken_overzicht_systemen_en_detecties_SOS_linker_buis", "blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis", "blokken_overzicht_systemen_en_detecties_Deur_linker_buis", "blokken_overzicht_systemen_en_detecties_Blusser_linker_buis", "blokken_overzicht_systemen_en_detecties_Haspel_linker_buis", "blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis", "tab_detailplattegrond_inactief", "tab_meldingen_inactief", "knoppen_meldingen_normaal_melding_scherm_open_klappen", "knoppen_meldingen_ingedrukt_melding_scherm_open_klappen", "blok_meldingen_sos_rechter_buis_onbevestigd", "knoppen_meldingen_normaal_bevestig_melding", "image13842", "knoppen_meldingen_normaal_toon_in_detail_plattegrond", "knoppen_meldingen_normaal_ga_naar_bijbehorende_camera", "detail_plattegrond_knop_rechts", "detail_plattegrond_knop_links");
    }


    @Override
    public boolean[] getInteractiveEvents() {
        return new boolean[] {true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, false, false, true, false, false, true, false, false, false, false, false, false, false, false, false, true, false, false, true, false, false, true, false, false, true, false, false, false, false, false, false, false, false};
    }


    @Override
    public int applyInput(String id, RuntimeState _state) {
        State state = (State)_state;
        int idx = ID_TO_INPUT_IDX.get(id);
        boolean g;
        switch (idx) {
            case 0:
                try {
                    try {
                        g = state.s_Tunnel_Verkeersbuis1_SOS.lp_Tunnel_Verkeersbuis1_SOS == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_SOS.aan\" failed.", e, state);
                    }
                    if (g) return 608; // Tunnel_Verkeersbuis1_SOS_u_uit

                    return 607; // Tunnel_Verkeersbuis1_SOS_u_aan
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"test_sos_rb\" failed.", getSvgRelPath()), e, state);
                }

            case 1:
                return 440; // Tunnel_Verkeersbuis1_KnopCalamiteit_Knop_u_indrukken

            case 2:
                return 588; // Tunnel_Verkeersbuis1_PopUp_KnopBevestigen_Knop_u_indrukken

            case 3:
                return 585; // Tunnel_Verkeersbuis1_PopUp_KnopAfwijzen_Knop_u_indrukken

            case 4:
                try {
                    try {
                        g = state.s_rb_drop_down_menu_buis_states.lp_rb_drop_down_menu_buis_states == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_drop_down_menu_buis_states.open\" failed.", e, state);
                    }
                    if (g) return 94; // rb_drop_down_menu_buis_states.sluit_drop_down_menu

                    return 93; // rb_drop_down_menu_buis_states.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 5:
                return 479; // Tunnel_Verkeersbuis1_KnopOperationeel_Knop_u_indrukken

            case 6:
                return 461; // Tunnel_Verkeersbuis1_KnopEvacuatie_Knop_u_indrukken

            case 7:
                return 440; // Tunnel_Verkeersbuis1_KnopCalamiteit_Knop_u_indrukken

            case 8:
                return 464; // Tunnel_Verkeersbuis1_KnopHerstel_Knop_u_indrukken

            case 9:
                return 470; // Tunnel_Verkeersbuis1_KnopOnderhoud_Knop_u_indrukken

            case 10:
                return 482; // Tunnel_Verkeersbuis1_KnopRoodVerkeerslichten_Knop_u_indrukken

            case 11:
                return 91; // rb_bedienmenu_voor_verkeerslichtenstanden.open_drop_down_menu

            case 12:
                return 92; // rb_bedienmenu_voor_verkeerslichtenstanden.sluit_drop_down_menu

            case 13:
                return 482; // Tunnel_Verkeersbuis1_KnopRoodVerkeerslichten_Knop_u_indrukken

            case 14:
                return 509; // Tunnel_Verkeersbuis1_KnopUitVerkeerslichten_Knop_u_indrukken

            case 15:
                return 485; // Tunnel_Verkeersbuis1_KnopSluitAfsluitbomen_Knop_u_indrukken

            case 16:
                return 473; // Tunnel_Verkeersbuis1_KnopOpenAfsluitbomen_Knop_u_indrukken

            case 17:
                try {
                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.uit\" failed.", e, state);
                    }
                    if (g) return 443; // Tunnel_Verkeersbuis1_KnopCamera1_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera1\" failed.", e, state);
                    }
                    if (g) return 446; // Tunnel_Verkeersbuis1_KnopCamera2_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 2;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera2\" failed.", e, state);
                    }
                    if (g) return 449; // Tunnel_Verkeersbuis1_KnopCamera3_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 3;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera3\" failed.", e, state);
                    }
                    if (g) return 452; // Tunnel_Verkeersbuis1_KnopCamera4_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 4;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera4\" failed.", e, state);
                    }
                    if (g) return 455; // Tunnel_Verkeersbuis1_KnopCamera5_Knop_u_indrukken

                    return 458; // Tunnel_Verkeersbuis1_KnopCamera6_Knop_u_indrukken
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"knoppen_primaire_bediening_normaal_camera_links_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 18:
                try {
                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.uit\" failed.", e, state);
                    }
                    if (g) return 458; // Tunnel_Verkeersbuis1_KnopCamera6_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 6;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera6\" failed.", e, state);
                    }
                    if (g) return 455; // Tunnel_Verkeersbuis1_KnopCamera5_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 5;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera5\" failed.", e, state);
                    }
                    if (g) return 452; // Tunnel_Verkeersbuis1_KnopCamera4_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 4;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera4\" failed.", e, state);
                    }
                    if (g) return 449; // Tunnel_Verkeersbuis1_KnopCamera3_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis1_Kanaal.lp_Tunnel_Verkeersbuis1_Kanaal == 3;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis1_Kanaal.camera3\" failed.", e, state);
                    }
                    if (g) return 446; // Tunnel_Verkeersbuis1_KnopCamera2_Knop_u_indrukken

                    return 443; // Tunnel_Verkeersbuis1_KnopCamera1_Knop_u_indrukken
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"knoppen_primaire_bediening_normaal_camera_rechts_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 19:
                return 798; // Tunnel_Verkeersbuis2_KnopCalamiteit_Knop_u_indrukken

            case 20:
                return 946; // Tunnel_Verkeersbuis2_PopUp_KnopBevestigen_Knop_u_indrukken

            case 21:
                return 943; // Tunnel_Verkeersbuis2_PopUp_KnopAfwijzen_Knop_u_indrukken

            case 22:
                try {
                    try {
                        g = state.s_lb_drop_down_menu_buis_states.lp_lb_drop_down_menu_buis_states == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_drop_down_menu_buis_states.open\" failed.", e, state);
                    }
                    if (g) return 18; // lb_drop_down_menu_buis_states.sluit_drop_down_menu

                    return 17; // lb_drop_down_menu_buis_states.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Pijltje_knop_drop-down_menu_verkeersbuis_states_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 23:
                return 837; // Tunnel_Verkeersbuis2_KnopOperationeel_Knop_u_indrukken

            case 24:
                return 819; // Tunnel_Verkeersbuis2_KnopEvacuatie_Knop_u_indrukken

            case 25:
                return 798; // Tunnel_Verkeersbuis2_KnopCalamiteit_Knop_u_indrukken

            case 26:
                return 822; // Tunnel_Verkeersbuis2_KnopHerstel_Knop_u_indrukken

            case 27:
                return 828; // Tunnel_Verkeersbuis2_KnopOnderhoud_Knop_u_indrukken

            case 28:
                return 840; // Tunnel_Verkeersbuis2_KnopRoodVerkeerslichten_Knop_u_indrukken

            case 29:
                return 15; // lb_bedienmenu_voor_verkeerslichtenstanden.open_drop_down_menu

            case 30:
                return 16; // lb_bedienmenu_voor_verkeerslichtenstanden.sluit_drop_down_menu

            case 31:
                return 840; // Tunnel_Verkeersbuis2_KnopRoodVerkeerslichten_Knop_u_indrukken

            case 32:
                return 867; // Tunnel_Verkeersbuis2_KnopUitVerkeerslichten_Knop_u_indrukken

            case 33:
                return 843; // Tunnel_Verkeersbuis2_KnopSluitAfsluitbomen_Knop_u_indrukken

            case 34:
                return 831; // Tunnel_Verkeersbuis2_KnopOpenAfsluitbomen_Knop_u_indrukken

            case 35:
                try {
                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.uit\" failed.", e, state);
                    }
                    if (g) return 801; // Tunnel_Verkeersbuis2_KnopCamera1_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera1\" failed.", e, state);
                    }
                    if (g) return 804; // Tunnel_Verkeersbuis2_KnopCamera2_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 2;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera2\" failed.", e, state);
                    }
                    if (g) return 807; // Tunnel_Verkeersbuis2_KnopCamera3_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 3;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera3\" failed.", e, state);
                    }
                    if (g) return 810; // Tunnel_Verkeersbuis2_KnopCamera4_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 4;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera4\" failed.", e, state);
                    }
                    if (g) return 813; // Tunnel_Verkeersbuis2_KnopCamera5_Knop_u_indrukken

                    return 816; // Tunnel_Verkeersbuis2_KnopCamera6_Knop_u_indrukken
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"knoppen_primaire_bediening_normaal_camera_rechts_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 36:
                try {
                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.uit\" failed.", e, state);
                    }
                    if (g) return 816; // Tunnel_Verkeersbuis2_KnopCamera6_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 6;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera6\" failed.", e, state);
                    }
                    if (g) return 813; // Tunnel_Verkeersbuis2_KnopCamera5_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 5;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera5\" failed.", e, state);
                    }
                    if (g) return 810; // Tunnel_Verkeersbuis2_KnopCamera4_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 4;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera4\" failed.", e, state);
                    }
                    if (g) return 807; // Tunnel_Verkeersbuis2_KnopCamera3_Knop_u_indrukken

                    try {
                        g = state.s_Tunnel_Verkeersbuis2_Kanaal.lp_Tunnel_Verkeersbuis2_Kanaal == 3;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"Tunnel_Verkeersbuis2_Kanaal.camera3\" failed.", e, state);
                    }
                    if (g) return 804; // Tunnel_Verkeersbuis2_KnopCamera2_Knop_u_indrukken

                    return 801; // Tunnel_Verkeersbuis2_KnopCamera1_Knop_u_indrukken
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"knoppen_primaire_bediening_normaal_camera_links_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 37:
                return 0; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie1

            case 38:
                return 1; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie2

            case 39:
                return 2; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie3

            case 40:
                return 3; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie4

            case 41:
                return 4; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie5

            case 42:
                return 5; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie6

            case 43:
                return 6; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie7

            case 44:
                return 7; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie8

            case 45:
                return 8; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie9

            case 46:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_ventilatie.open\" failed.", e, state);
                    }
                    if (g) return 130; // rb_overzicht_systemen_en_detecties_ventilatie.sluit_drop_down_menu

                    return 13; // click_tab_rechterbuis
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"inactive_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 47:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_ventilatie.open\" failed.", e, state);
                    }
                    if (g) return 130; // rb_overzicht_systemen_en_detecties_ventilatie.sluit_drop_down_menu

                    return 11; // click_tab_linkerbuis
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"inactive_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 48:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_ventilatie.open\" failed.", e, state);
                    }
                    if (g) return 130; // rb_overzicht_systemen_en_detecties_ventilatie.sluit_drop_down_menu

                    return 13; // click_tab_rechterbuis
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"active_tab_systemen_en_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 49:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_ventilatie.open\" failed.", e, state);
                    }
                    if (g) return 130; // rb_overzicht_systemen_en_detecties_ventilatie.sluit_drop_down_menu

                    return 11; // click_tab_linkerbuis
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"active_tab_systemen_en_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 50:
                return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

            case 51:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 101; // rb_overzicht_systemen_en_detecties_buis.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_buis_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 52:
                return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

            case 53:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 153; // rb_overzicht_systemen_en_detecties_vluchtroute.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 54:
                return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

            case 55:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 127; // rb_overzicht_systemen_en_detecties_tunnel.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_tunnel_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 56:
                return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

            case 57:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 133; // rb_overzicht_systemen_en_detecties_verkeer.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_verkeer_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 58:
                return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

            case 59:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overig.lp_rb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 103; // rb_overzicht_systemen_en_detecties_detecties.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_detecties_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 60:
                return 124; // rb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

            case 61:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_buis.lp_rb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 102; // rb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtroute.lp_rb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 154; // rb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_tunnel.lp_rb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 128; // rb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verkeer.lp_rb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 134; // rb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_detecties.lp_rb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 104; // rb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    return 123; // rb_overzicht_systemen_en_detecties_overig.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_overig_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 62:
                return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

            case 63:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 25; // lb_overzicht_systemen_en_detecties_buis.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_buis_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 64:
                return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

            case 65:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 77; // lb_overzicht_systemen_en_detecties_vluchtroute.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 66:
                return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

            case 67:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 51; // lb_overzicht_systemen_en_detecties_tunnel.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_tunnel_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 68:
                return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

            case 69:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 57; // lb_overzicht_systemen_en_detecties_verkeer.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_verkeer_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 70:
                return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

            case 71:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overig.lp_lb_overzicht_systemen_en_detecties_overig == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overig.open\" failed.", e, state);
                    }
                    if (g) return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

                    return 27; // lb_overzicht_systemen_en_detecties_detecties.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_detecties_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 72:
                return 48; // lb_overzicht_systemen_en_detecties_overig.sluit_drop_down_menu

            case 73:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_buis.lp_lb_overzicht_systemen_en_detecties_buis == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_buis.open\" failed.", e, state);
                    }
                    if (g) return 26; // lb_overzicht_systemen_en_detecties_buis.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtroute.lp_lb_overzicht_systemen_en_detecties_vluchtroute == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtroute.open\" failed.", e, state);
                    }
                    if (g) return 78; // lb_overzicht_systemen_en_detecties_vluchtroute.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_tunnel.lp_lb_overzicht_systemen_en_detecties_tunnel == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_tunnel.open\" failed.", e, state);
                    }
                    if (g) return 52; // lb_overzicht_systemen_en_detecties_tunnel.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verkeer.lp_lb_overzicht_systemen_en_detecties_verkeer == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verkeer.open\" failed.", e, state);
                    }
                    if (g) return 58; // lb_overzicht_systemen_en_detecties_verkeer.sluit_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_detecties.lp_lb_overzicht_systemen_en_detecties_detecties == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_detecties.open\" failed.", e, state);
                    }
                    if (g) return 28; // lb_overzicht_systemen_en_detecties_detecties.sluit_drop_down_menu

                    return 47; // lb_overzicht_systemen_en_detecties_overig.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"Drop_down_menu_dicht_pijltje_overig_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 74:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_ventilatie.lp_rb_overzicht_systemen_en_detecties_ventilatie == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_ventilatie.dicht\" failed.", e, state);
                    }
                    if (g) return 129; // rb_overzicht_systemen_en_detecties_ventilatie.open_drop_down_menu

                    return 130; // rb_overzicht_systemen_en_detecties_ventilatie.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_ventilatie_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 75:
                return 386; // Tunnel_Verkeersbuis1_BedieningVentilatie_KnopHand_Knop_u_indrukken

            case 76:
                return 383; // Tunnel_Verkeersbuis1_BedieningVentilatie_KnopAuto_Knop_u_indrukken

            case 77:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 131; // rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open_drop_down_menu

                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open\" failed.", e, state);
                    }
                    if (g) return 108; // rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.sluit_drop_down_menu

                    return 132; // rb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 78:
                return 512; // Tunnel_Verkeersbuis1_KnopVentilatie0_Knop_u_indrukken

            case 79:
                return 515; // Tunnel_Verkeersbuis1_KnopVentilatie1_Knop_u_indrukken

            case 80:
                return 518; // Tunnel_Verkeersbuis1_KnopVentilatie2_Knop_u_indrukken

            case 81:
                return 521; // Tunnel_Verkeersbuis1_KnopVentilatie3_Knop_u_indrukken

            case 82:
                return 524; // Tunnel_Verkeersbuis1_KnopVentilatie4_Knop_u_indrukken

            case 83:
                return 527; // Tunnel_Verkeersbuis1_KnopVentilatie5_Knop_u_indrukken

            case 84:
                return 530; // Tunnel_Verkeersbuis1_KnopVentilatie6_Knop_u_indrukken

            case 85:
                return 533; // Tunnel_Verkeersbuis1_KnopVentilatie7_Knop_u_indrukken

            case 86:
                return 536; // Tunnel_Verkeersbuis1_KnopVentilatie8_Knop_u_indrukken

            case 87:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 0) && (state.s_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis1_BedieningVentilatie_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.dicht and Tunnel_Verkeersbuis1_BedieningVentilatie_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 107; // rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open_drop_down_menu

                    return 108; // rb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 88:
                return 633; // Tunnel_Verkeersbuis1_VentilatieRichting_c_rijrichting

            case 89:
                return 634; // Tunnel_Verkeersbuis1_VentilatieRichting_c_tegenRijrichting

            case 90:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verlichting.lp_rb_overzicht_systemen_en_detecties_verlichting == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verlichting.dicht\" failed.", e, state);
                    }
                    if (g) return 135; // rb_overzicht_systemen_en_detecties_verlichting.open_drop_down_menu

                    return 136; // rb_overzicht_systemen_en_detecties_verlichting.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_verlichting_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 91:
                return 402; // Tunnel_Verkeersbuis1_BedieningVerlichting_KnopHand_Knop_u_indrukken

            case 92:
                return 399; // Tunnel_Verkeersbuis1_BedieningVerlichting_KnopAuto_Knop_u_indrukken

            case 93:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis1_BedieningVerlichting_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis1_BedieningVerlichting_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 137; // rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open_drop_down_menu

                    return 138; // rb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 94:
                return 539; // Tunnel_Verkeersbuis1_KnopVerlichting0_Knop_u_indrukken

            case 95:
                return 542; // Tunnel_Verkeersbuis1_KnopVerlichting1_Knop_u_indrukken

            case 96:
                return 545; // Tunnel_Verkeersbuis1_KnopVerlichting2_Knop_u_indrukken

            case 97:
                return 548; // Tunnel_Verkeersbuis1_KnopVerlichting3_Knop_u_indrukken

            case 98:
                return 551; // Tunnel_Verkeersbuis1_KnopVerlichting4_Knop_u_indrukken

            case 99:
                return 554; // Tunnel_Verkeersbuis1_KnopVerlichting5_Knop_u_indrukken

            case 100:
                return 557; // Tunnel_Verkeersbuis1_KnopVerlichting6_Knop_u_indrukken

            case 101:
                return 560; // Tunnel_Verkeersbuis1_KnopVerlichting7_Knop_u_indrukken

            case 102:
                return 563; // Tunnel_Verkeersbuis1_KnopVerlichting8_Knop_u_indrukken

            case 103:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.dicht\" failed.", e, state);
                    }
                    if (g) return 147; // rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open_drop_down_menu

                    return 148; // rb_overzicht_systemen_en_detecties_vluchtdeurindicatie.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 104:
                return 682; // Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_KnopHand_Knop_u_indrukken

            case 105:
                return 679; // Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_KnopAuto_Knop_u_indrukken

            case 106:
                return 674; // Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_KnopHand_Knop_u_indrukken

            case 107:
                return 671; // Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_KnopAuto_Knop_u_indrukken

            case 108:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 0) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.dicht and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningGeluidsbaken_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 151; // rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open_drop_down_menu

                    return 152; // rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 109:
                return 698; // Tunnel_Verkeersbuis1_Vluchtdeur_KnopGeluidsbakenAan_Knop_u_indrukken

            case 110:
                return 701; // Tunnel_Verkeersbuis1_Vluchtdeur_KnopGeluidsbakenUit_Knop_u_indrukken

            case 111:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 0) && (state.s_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.dicht and Tunnel_Verkeersbuis1_Vluchtdeur_BedieningContourVerlichting_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 149; // rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open_drop_down_menu

                    return 150; // rb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 112:
                return 692; // Tunnel_Verkeersbuis1_Vluchtdeur_KnopContourVerlichtingAan_Knop_u_indrukken

            case 113:
                return 695; // Tunnel_Verkeersbuis1_Vluchtdeur_KnopContourVerlichtingUit_Knop_u_indrukken

            case 114:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vluchtdeuren.lp_rb_overzicht_systemen_en_detecties_vluchtdeuren == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vluchtdeuren.dicht\" failed.", e, state);
                    }
                    if (g) return 145; // rb_overzicht_systemen_en_detecties_vluchtdeuren.open_drop_down_menu

                    return 146; // rb_overzicht_systemen_en_detecties_vluchtdeuren.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 115:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.dicht\" failed.", e, state);
                    }
                    if (g) return 109; // rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open_drop_down_menu

                    return 110; // rb_overzicht_systemen_en_detecties_dynamische_vluchtroute.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 116:
                return 287; // Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_KnopHand_Knop_u_indrukken

            case 117:
                return 284; // Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_KnopAuto_Knop_u_indrukken

            case 118:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 111; // rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open_drop_down_menu

                    return 112; // rb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 119:
                return 314; // Tunnel_MiddenTunnelKanaal_KnopDynamischeVluchtrouteIndicatieOplopend_Knop_u_indrukken

            case 120:
                return 311; // Tunnel_MiddenTunnelKanaal_KnopDynamischeVluchtrouteIndicatieAflopend_Knop_u_indrukken

            case 121:
                return 317; // Tunnel_MiddenTunnelKanaal_KnopDynamischeVluchtrouteIndicatieUit_Knop_u_indrukken

            case 122:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.dicht\" failed.", e, state);
                    }
                    if (g) return 119; // rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open_drop_down_menu

                    return 120; // rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Overdruk_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 123:
                return 295; // Tunnel_MiddenTunnelKanaal_BedieningOverdruk_KnopHand_Knop_u_indrukken

            case 124:
                return 292; // Tunnel_MiddenTunnelKanaal_BedieningOverdruk_KnopAuto_Knop_u_indrukken

            case 125:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 121; // rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open_drop_down_menu

                    return 122; // rb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 126:
                return 323; // Tunnel_MiddenTunnelKanaal_KnopOverdrukRechts_Knop_u_indrukken

            case 127:
                return 320; // Tunnel_MiddenTunnelKanaal_KnopOverdrukLinks_Knop_u_indrukken

            case 128:
                return 326; // Tunnel_MiddenTunnelKanaal_KnopOverdrukUit_Knop_u_indrukken

            case 129:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.dicht\" failed.", e, state);
                    }
                    if (g) return 139; // rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open_drop_down_menu

                    return 140; // rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Licht_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 130:
                return 303; // Tunnel_MiddenTunnelKanaal_BedieningVerlichting_KnopHand_Knop_u_indrukken

            case 131:
                return 300; // Tunnel_MiddenTunnelKanaal_BedieningVerlichting_KnopAuto_Knop_u_indrukken

            case 132:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 141; // rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open_drop_down_menu

                    return 142; // rb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 133:
                return 335; // Tunnel_MiddenTunnelKanaal_KnopVerlichtingAan_Knop_u_indrukken

            case 134:
                return 338; // Tunnel_MiddenTunnelKanaal_KnopVerlichtingUit_Knop_u_indrukken

            case 135:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_blusvoorziening.lp_rb_overzicht_systemen_en_detecties_blusvoorziening == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_blusvoorziening.dicht\" failed.", e, state);
                    }
                    if (g) return 97; // rb_overzicht_systemen_en_detecties_blusvoorziening.open_drop_down_menu

                    return 98; // rb_overzicht_systemen_en_detecties_blusvoorziening.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 136:
                return 161; // Tunnel_BrandBlusInstallatie_Bediening_KnopHand_Knop_u_indrukken

            case 137:
                return 158; // Tunnel_BrandBlusInstallatie_Bediening_KnopAuto_Knop_u_indrukken

            case 138:
                try {
                    try {
                        g = (state.s_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 0) && (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.dicht and Tunnel_BrandBlusInstallatie_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 99; // rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open_drop_down_menu

                    return 100; // rb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 139:
                return 166; // Tunnel_BrandBlusInstallatie_knop_bewaken_Knop_u_indrukken

            case 140:
                return 169; // Tunnel_BrandBlusInstallatie_knop_blussen_Knop_u_indrukken

            case 141:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_rb_overzicht_systemen_en_detecties_vloeistofafvoer == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_vloeistofafvoer.dicht\" failed.", e, state);
                    }
                    if (g) return 143; // rb_overzicht_systemen_en_detecties_vloeistofafvoer.open_drop_down_menu

                    return 144; // rb_overzicht_systemen_en_detecties_vloeistofafvoer.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 142:
                return 251; // Tunnel_MiddenPompkelder_Bediening_KnopHand_Knop_u_indrukken

            case 143:
                return 248; // Tunnel_MiddenPompkelder_Bediening_KnopAuto_Knop_u_indrukken

            case 144:
                try {
                    try {
                        g = (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 0) && (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.dicht and Tunnel_MiddenPompkelder_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 89; // overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open_drop_down_menu

                    return 90; // overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 145:
                return 256; // Tunnel_MiddenPompkelder_KnopBergen_Knop_u_indrukken

            case 146:
                return 259; // Tunnel_MiddenPompkelder_KnopLeeghouden_Knop_u_indrukken

            case 147:
                return 262; // Tunnel_MiddenPompkelder_KnopUit_Knop_u_indrukken

            case 148:
                return 183; // Tunnel_HoofdPompkelder1_Bediening_KnopHand_Knop_u_indrukken

            case 149:
                return 180; // Tunnel_HoofdPompkelder1_Bediening_KnopAuto_Knop_u_indrukken

            case 150:
                try {
                    try {
                        g = (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.dicht and Tunnel_HoofdPompkelder1_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 85; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open_drop_down_menu

                    return 86; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 151:
                return 188; // Tunnel_HoofdPompkelder1_KnopBergen_Knop_u_indrukken

            case 152:
                return 191; // Tunnel_HoofdPompkelder1_KnopLeeghouden_Knop_u_indrukken

            case 153:
                return 194; // Tunnel_HoofdPompkelder1_KnopUit_Knop_u_indrukken

            case 154:
                return 217; // Tunnel_HoofdPompkelder2_Bediening_KnopHand_Knop_u_indrukken

            case 155:
                return 214; // Tunnel_HoofdPompkelder2_Bediening_KnopAuto_Knop_u_indrukken

            case 156:
                try {
                    try {
                        g = (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.dicht and Tunnel_HoofdPompkelder2_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 87; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open_drop_down_menu

                    return 88; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 157:
                return 222; // Tunnel_HoofdPompkelder2_KnopBergen_Knop_u_indrukken

            case 158:
                return 225; // Tunnel_HoofdPompkelder2_KnopLeeghouden_Knop_u_indrukken

            case 159:
                return 228; // Tunnel_HoofdPompkelder2_KnopUit_Knop_u_indrukken

            case 160:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.dicht\" failed.", e, state);
                    }
                    if (g) return 155; // rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open_drop_down_menu

                    return 156; // rb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 161:
                return 394; // Tunnel_Verkeersbuis1_BedieningVerkeerslichten_KnopHand_Knop_u_indrukken

            case 162:
                return 391; // Tunnel_Verkeersbuis1_BedieningVerkeerslichten_KnopAuto_Knop_u_indrukken

            case 163:
                return 378; // Tunnel_Verkeersbuis1_BedieningAfsluitbomen_KnopHand_Knop_u_indrukken

            case 164:
                return 375; // Tunnel_Verkeersbuis1_BedieningAfsluitbomen_KnopAuto_Knop_u_indrukken

            case 165:
                return 509; // Tunnel_Verkeersbuis1_KnopUitVerkeerslichten_Knop_u_indrukken

            case 166:
                return 467; // Tunnel_Verkeersbuis1_KnopKnipperVerkeerslichten_Knop_u_indrukken

            case 167:
                return 482; // Tunnel_Verkeersbuis1_KnopRoodVerkeerslichten_Knop_u_indrukken

            case 168:
                return 473; // Tunnel_Verkeersbuis1_KnopOpenAfsluitbomen_Knop_u_indrukken

            case 169:
                return 500; // Tunnel_Verkeersbuis1_KnopStopAfsluitbomen_Knop_u_indrukken

            case 170:
                return 485; // Tunnel_Verkeersbuis1_KnopSluitAfsluitbomen_Knop_u_indrukken

            case 171:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_SOS.lp_rb_overzicht_systemen_en_detecties_SOS == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_SOS.dicht\" failed.", e, state);
                    }
                    if (g) return 125; // rb_overzicht_systemen_en_detecties_SOS.open_drop_down_menu

                    return 126; // rb_overzicht_systemen_en_detecties_SOS.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_SOS_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 172:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_hulppost.lp_rb_overzicht_systemen_en_detecties_hulppost == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_hulppost.dicht\" failed.", e, state);
                    }
                    if (g) return 115; // rb_overzicht_systemen_en_detecties_hulppost.open_drop_down_menu

                    return 116; // rb_overzicht_systemen_en_detecties_hulppost.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Hulppost_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 173:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_deur.lp_rb_overzicht_systemen_en_detecties_deur == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_deur.dicht\" failed.", e, state);
                    }
                    if (g) return 105; // rb_overzicht_systemen_en_detecties_deur.open_drop_down_menu

                    return 106; // rb_overzicht_systemen_en_detecties_deur.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Deur_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 174:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_blusser.lp_rb_overzicht_systemen_en_detecties_blusser == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_blusser.dicht\" failed.", e, state);
                    }
                    if (g) return 95; // rb_overzicht_systemen_en_detecties_blusser.open_drop_down_menu

                    return 96; // rb_overzicht_systemen_en_detecties_blusser.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusser_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 175:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_haspel.lp_rb_overzicht_systemen_en_detecties_haspel == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_haspel.dicht\" failed.", e, state);
                    }
                    if (g) return 113; // rb_overzicht_systemen_en_detecties_haspel.open_drop_down_menu

                    return 114; // rb_overzicht_systemen_en_detecties_haspel.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Haspel_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 176:
                try {
                    try {
                        g = state.s_rb_overzicht_systemen_en_detecties_noodtelefoon.lp_rb_overzicht_systemen_en_detecties_noodtelefoon == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"rb_overzicht_systemen_en_detecties_noodtelefoon.dicht\" failed.", e, state);
                    }
                    if (g) return 117; // rb_overzicht_systemen_en_detecties_noodtelefoon.open_drop_down_menu

                    return 118; // rb_overzicht_systemen_en_detecties_noodtelefoon.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_rechter_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 177:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_ventilatie.lp_lb_overzicht_systemen_en_detecties_ventilatie == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_ventilatie.dicht\" failed.", e, state);
                    }
                    if (g) return 53; // lb_overzicht_systemen_en_detecties_ventilatie.open_drop_down_menu

                    return 54; // lb_overzicht_systemen_en_detecties_ventilatie.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_ventilatie_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 178:
                return 744; // Tunnel_Verkeersbuis2_BedieningVentilatie_KnopHand_Knop_u_indrukken

            case 179:
                return 741; // Tunnel_Verkeersbuis2_BedieningVentilatie_KnopAuto_Knop_u_indrukken

            case 180:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 55; // lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.open_drop_down_menu

                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open\" failed.", e, state);
                    }
                    if (g) return 32; // lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.sluit_drop_down_menu

                    return 56; // lb_overzicht_systemen_en_detecties_ventilatie_dropdown_percentage_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_standen_langsventilatie_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 181:
                return 870; // Tunnel_Verkeersbuis2_KnopVentilatie0_Knop_u_indrukken

            case 182:
                return 873; // Tunnel_Verkeersbuis2_KnopVentilatie1_Knop_u_indrukken

            case 183:
                return 876; // Tunnel_Verkeersbuis2_KnopVentilatie2_Knop_u_indrukken

            case 184:
                return 879; // Tunnel_Verkeersbuis2_KnopVentilatie3_Knop_u_indrukken

            case 185:
                return 882; // Tunnel_Verkeersbuis2_KnopVentilatie4_Knop_u_indrukken

            case 186:
                return 885; // Tunnel_Verkeersbuis2_KnopVentilatie5_Knop_u_indrukken

            case 187:
                return 888; // Tunnel_Verkeersbuis2_KnopVentilatie6_Knop_u_indrukken

            case 188:
                return 891; // Tunnel_Verkeersbuis2_KnopVentilatie7_Knop_u_indrukken

            case 189:
                return 894; // Tunnel_Verkeersbuis2_KnopVentilatie8_Knop_u_indrukken

            case 190:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.lp_lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie == 0) && (state.s_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.lp_Tunnel_Verkeersbuis2_BedieningVentilatie_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.dicht and Tunnel_Verkeersbuis2_BedieningVentilatie_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 31; // lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.open_drop_down_menu

                    return 32; // lb_overzicht_systemen_en_detecties_drop_down_richting_ventilatie.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_ventilatie_dropdown_richting_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 191:
                return 991; // Tunnel_Verkeersbuis2_VentilatieRichting_c_rijrichting

            case 192:
                return 992; // Tunnel_Verkeersbuis2_VentilatieRichting_c_tegenRijrichting

            case 193:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verlichting.lp_lb_overzicht_systemen_en_detecties_verlichting == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verlichting.dicht\" failed.", e, state);
                    }
                    if (g) return 59; // lb_overzicht_systemen_en_detecties_verlichting.open_drop_down_menu

                    return 60; // lb_overzicht_systemen_en_detecties_verlichting.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_verlichting_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 194:
                return 760; // Tunnel_Verkeersbuis2_BedieningVerlichting_KnopHand_Knop_u_indrukken

            case 195:
                return 757; // Tunnel_Verkeersbuis2_BedieningVerlichting_KnopAuto_Knop_u_indrukken

            case 196:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand == 0) && (state.s_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.lp_Tunnel_Verkeersbuis2_BedieningVerlichting_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.dicht and Tunnel_Verkeersbuis2_BedieningVerlichting_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 61; // lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.open_drop_down_menu

                    return 62; // lb_overzicht_systemen_en_detecties_verlichting_dropdown_percentage_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_verlichting_dropdown_standen_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 197:
                return 897; // Tunnel_Verkeersbuis2_KnopVerlichting0_Knop_u_indrukken

            case 198:
                return 900; // Tunnel_Verkeersbuis2_KnopVerlichting1_Knop_u_indrukken

            case 199:
                return 903; // Tunnel_Verkeersbuis2_KnopVerlichting2_Knop_u_indrukken

            case 200:
                return 906; // Tunnel_Verkeersbuis2_KnopVerlichting3_Knop_u_indrukken

            case 201:
                return 909; // Tunnel_Verkeersbuis2_KnopVerlichting4_Knop_u_indrukken

            case 202:
                return 912; // Tunnel_Verkeersbuis2_KnopVerlichting5_Knop_u_indrukken

            case 203:
                return 915; // Tunnel_Verkeersbuis2_KnopVerlichting6_Knop_u_indrukken

            case 204:
                return 918; // Tunnel_Verkeersbuis2_KnopVerlichting7_Knop_u_indrukken

            case 205:
                return 921; // Tunnel_Verkeersbuis2_KnopVerlichting8_Knop_u_indrukken

            case 206:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.dicht\" failed.", e, state);
                    }
                    if (g) return 71; // lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.open_drop_down_menu

                    return 72; // lb_overzicht_systemen_en_detecties_vluchtdeurindicatie.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Indicatie_geluidsbakens_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 207:
                return 1040; // Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_KnopHand_Knop_u_indrukken

            case 208:
                return 1037; // Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_KnopAuto_Knop_u_indrukken

            case 209:
                return 1032; // Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_KnopHand_Knop_u_indrukken

            case 210:
                return 1029; // Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_KnopAuto_Knop_u_indrukken

            case 211:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand == 0) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.dicht and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningGeluidsbaken_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 75; // lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.open_drop_down_menu

                    return 76; // lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_geluidsbakens_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 212:
                return 1056; // Tunnel_Verkeersbuis2_Vluchtdeur_KnopGeluidsbakenAan_Knop_u_indrukken

            case 213:
                return 1059; // Tunnel_Verkeersbuis2_Vluchtdeur_KnopGeluidsbakenUit_Knop_u_indrukken

            case 214:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.lp_lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand == 0) && (state.s_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.lp_Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.dicht and Tunnel_Verkeersbuis2_Vluchtdeur_BedieningContourVerlichting_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 73; // lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.open_drop_down_menu

                    return 74; // lb_overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_vluchtdeurindicatie_dropdown_contourverlichting_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 215:
                return 1050; // Tunnel_Verkeersbuis2_Vluchtdeur_KnopContourVerlichtingAan_Knop_u_indrukken

            case 216:
                return 1053; // Tunnel_Verkeersbuis2_Vluchtdeur_KnopContourVerlichtingUit_Knop_u_indrukken

            case 217:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vluchtdeuren.lp_lb_overzicht_systemen_en_detecties_vluchtdeuren == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vluchtdeuren.dicht\" failed.", e, state);
                    }
                    if (g) return 69; // lb_overzicht_systemen_en_detecties_vluchtdeuren.open_drop_down_menu

                    return 70; // lb_overzicht_systemen_en_detecties_vluchtdeuren.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vluchtdeuren_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 218:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.dicht\" failed.", e, state);
                    }
                    if (g) return 33; // lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.open_drop_down_menu

                    return 34; // lb_overzicht_systemen_en_detecties_dynamische_vluchtroute.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Dyn_Vluchtroute_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 219:
                return 287; // Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_KnopHand_Knop_u_indrukken

            case 220:
                return 284; // Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_KnopAuto_Knop_u_indrukken

            case 221:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.lp_lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningDynamischeVluchtrouteIndicatie_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 35; // lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.open_drop_down_menu

                    return 36; // lb_overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_dynamische_vluchtroute_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 222:
                return 314; // Tunnel_MiddenTunnelKanaal_KnopDynamischeVluchtrouteIndicatieOplopend_Knop_u_indrukken

            case 223:
                return 311; // Tunnel_MiddenTunnelKanaal_KnopDynamischeVluchtrouteIndicatieAflopend_Knop_u_indrukken

            case 224:
                return 317; // Tunnel_MiddenTunnelKanaal_KnopDynamischeVluchtrouteIndicatieUit_Knop_u_indrukken

            case 225:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.dicht\" failed.", e, state);
                    }
                    if (g) return 43; // lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.open_drop_down_menu

                    return 44; // lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Overdruk_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 226:
                return 295; // Tunnel_MiddenTunnelKanaal_BedieningOverdruk_KnopHand_Knop_u_indrukken

            case 227:
                return 292; // Tunnel_MiddenTunnelKanaal_BedieningOverdruk_KnopAuto_Knop_u_indrukken

            case 228:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningOverdruk_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 45; // lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.open_drop_down_menu

                    return 46; // lb_overzicht_systemen_en_detecties_overdruk_veilige_ruimte_drop_down_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_overdruk_veilige_ruimte_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 229:
                return 323; // Tunnel_MiddenTunnelKanaal_KnopOverdrukRechts_Knop_u_indrukken

            case 230:
                return 320; // Tunnel_MiddenTunnelKanaal_KnopOverdrukLinks_Knop_u_indrukken

            case 231:
                return 326; // Tunnel_MiddenTunnelKanaal_KnopOverdrukUit_Knop_u_indrukken

            case 232:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.dicht\" failed.", e, state);
                    }
                    if (g) return 63; // lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.open_drop_down_menu

                    return 64; // lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Licht_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 233:
                return 303; // Tunnel_MiddenTunnelKanaal_BedieningVerlichting_KnopHand_Knop_u_indrukken

            case 234:
                return 300; // Tunnel_MiddenTunnelKanaal_BedieningVerlichting_KnopAuto_Knop_u_indrukken

            case 235:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand == 0) && (state.s_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.lp_Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.dicht and Tunnel_MiddenTunnelKanaal_BedieningVerlichting_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 65; // lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.open_drop_down_menu

                    return 66; // lb_overzicht_systemen_en_detecties_verlichting_veilige_ruimte_drop_down_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_verlichting_veilige_ruimte_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 236:
                return 335; // Tunnel_MiddenTunnelKanaal_KnopVerlichtingAan_Knop_u_indrukken

            case 237:
                return 338; // Tunnel_MiddenTunnelKanaal_KnopVerlichtingUit_Knop_u_indrukken

            case 238:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_blusvoorziening.lp_lb_overzicht_systemen_en_detecties_blusvoorziening == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_blusvoorziening.dicht\" failed.", e, state);
                    }
                    if (g) return 21; // lb_overzicht_systemen_en_detecties_blusvoorziening.open_drop_down_menu

                    return 22; // lb_overzicht_systemen_en_detecties_blusvoorziening.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusvoorziening_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 239:
                return 161; // Tunnel_BrandBlusInstallatie_Bediening_KnopHand_Knop_u_indrukken

            case 240:
                return 158; // Tunnel_BrandBlusInstallatie_Bediening_KnopAuto_Knop_u_indrukken

            case 241:
                try {
                    try {
                        g = (state.s_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.lp_lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand == 0) && (state.s_Tunnel_BrandBlusInstallatie_Bediening_Modus.lp_Tunnel_BrandBlusInstallatie_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.dicht and Tunnel_BrandBlusInstallatie_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 23; // lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.open_drop_down_menu

                    return 24; // lb_overzicht_systemen_en_detecties_bluswatervoorziening_drop_down_stand.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_blussen_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 242:
                return 166; // Tunnel_BrandBlusInstallatie_knop_bewaken_Knop_u_indrukken

            case 243:
                return 169; // Tunnel_BrandBlusInstallatie_knop_blussen_Knop_u_indrukken

            case 244:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_vloeistofafvoer.lp_lb_overzicht_systemen_en_detecties_vloeistofafvoer == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_vloeistofafvoer.dicht\" failed.", e, state);
                    }
                    if (g) return 67; // lb_overzicht_systemen_en_detecties_vloeistofafvoer.open_drop_down_menu

                    return 68; // lb_overzicht_systemen_en_detecties_vloeistofafvoer.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Vloeistofafvoer_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 245:
                return 251; // Tunnel_MiddenPompkelder_Bediening_KnopHand_Knop_u_indrukken

            case 246:
                return 248; // Tunnel_MiddenPompkelder_Bediening_KnopAuto_Knop_u_indrukken

            case 247:
                try {
                    try {
                        g = (state.s_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton == 0) && (state.s_Tunnel_MiddenPompkelder_Bediening_Modus.lp_Tunnel_MiddenPompkelder_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.dicht and Tunnel_MiddenPompkelder_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 89; // overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.open_drop_down_menu

                    return 90; // overzicht_systemen_en_detecties_drop_down_midden_pomp_kelder_stand_automaton.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_midden_pomp_kelder_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 248:
                return 256; // Tunnel_MiddenPompkelder_KnopBergen_Knop_u_indrukken

            case 249:
                return 259; // Tunnel_MiddenPompkelder_KnopLeeghouden_Knop_u_indrukken

            case 250:
                return 262; // Tunnel_MiddenPompkelder_KnopUit_Knop_u_indrukken

            case 251:
                return 183; // Tunnel_HoofdPompkelder1_Bediening_KnopHand_Knop_u_indrukken

            case 252:
                return 180; // Tunnel_HoofdPompkelder1_Bediening_KnopAuto_Knop_u_indrukken

            case 253:
                try {
                    try {
                        g = (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder1_Bediening_Modus.lp_Tunnel_HoofdPompkelder1_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.dicht and Tunnel_HoofdPompkelder1_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 85; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.open_drop_down_menu

                    return 86; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_1_stand_automaton.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_1_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 254:
                return 188; // Tunnel_HoofdPompkelder1_KnopBergen_Knop_u_indrukken

            case 255:
                return 191; // Tunnel_HoofdPompkelder1_KnopLeeghouden_Knop_u_indrukken

            case 256:
                return 194; // Tunnel_HoofdPompkelder1_KnopUit_Knop_u_indrukken

            case 257:
                return 217; // Tunnel_HoofdPompkelder2_Bediening_KnopHand_Knop_u_indrukken

            case 258:
                return 214; // Tunnel_HoofdPompkelder2_Bediening_KnopAuto_Knop_u_indrukken

            case 259:
                try {
                    try {
                        g = (state.s_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.lp_overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton == 0) && (state.s_Tunnel_HoofdPompkelder2_Bediening_Modus.lp_Tunnel_HoofdPompkelder2_Bediening_Modus == 1);
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.dicht and Tunnel_HoofdPompkelder2_Bediening_Modus.hand\" failed.", e, state);
                    }
                    if (g) return 87; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.open_drop_down_menu

                    return 88; // overzicht_systemen_en_detecties_drop_down_hoofd_pomp_kelder_2_stand_automaton.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"overzicht_systemen_en_detecties_hoofd_pomp_kelder_2_ingestelde_stand_dropdown_knop_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 260:
                return 222; // Tunnel_HoofdPompkelder2_KnopBergen_Knop_u_indrukken

            case 261:
                return 225; // Tunnel_HoofdPompkelder2_KnopLeeghouden_Knop_u_indrukken

            case 262:
                return 228; // Tunnel_HoofdPompkelder2_KnopUit_Knop_u_indrukken

            case 263:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.lp_lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.dicht\" failed.", e, state);
                    }
                    if (g) return 79; // lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.open_drop_down_menu

                    return 80; // lb_overzicht_systemen_en_detecties_VRI_en_afsluitboom.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_VRI_Afsluitboom_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 264:
                return 752; // Tunnel_Verkeersbuis2_BedieningVerkeerslichten_KnopHand_Knop_u_indrukken

            case 265:
                return 749; // Tunnel_Verkeersbuis2_BedieningVerkeerslichten_KnopAuto_Knop_u_indrukken

            case 266:
                return 736; // Tunnel_Verkeersbuis2_BedieningAfsluitbomen_KnopHand_Knop_u_indrukken

            case 267:
                return 733; // Tunnel_Verkeersbuis2_BedieningAfsluitbomen_KnopAuto_Knop_u_indrukken

            case 268:
                return 867; // Tunnel_Verkeersbuis2_KnopUitVerkeerslichten_Knop_u_indrukken

            case 269:
                return 825; // Tunnel_Verkeersbuis2_KnopKnipperVerkeerslichten_Knop_u_indrukken

            case 270:
                return 840; // Tunnel_Verkeersbuis2_KnopRoodVerkeerslichten_Knop_u_indrukken

            case 271:
                return 831; // Tunnel_Verkeersbuis2_KnopOpenAfsluitbomen_Knop_u_indrukken

            case 272:
                return 858; // Tunnel_Verkeersbuis2_KnopStopAfsluitbomen_Knop_u_indrukken

            case 273:
                return 843; // Tunnel_Verkeersbuis2_KnopSluitAfsluitbomen_Knop_u_indrukken

            case 274:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_SOS.lp_lb_overzicht_systemen_en_detecties_SOS == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_SOS.dicht\" failed.", e, state);
                    }
                    if (g) return 49; // lb_overzicht_systemen_en_detecties_SOS.open_drop_down_menu

                    return 50; // lb_overzicht_systemen_en_detecties_SOS.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_SOS_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 275:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_hulppost.lp_lb_overzicht_systemen_en_detecties_hulppost == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_hulppost.dicht\" failed.", e, state);
                    }
                    if (g) return 39; // lb_overzicht_systemen_en_detecties_hulppost.open_drop_down_menu

                    return 40; // lb_overzicht_systemen_en_detecties_hulppost.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Hulppost_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 276:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_deur.lp_lb_overzicht_systemen_en_detecties_deur == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_deur.dicht\" failed.", e, state);
                    }
                    if (g) return 29; // lb_overzicht_systemen_en_detecties_deur.open_drop_down_menu

                    return 30; // lb_overzicht_systemen_en_detecties_deur.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Deur_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 277:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_blusser.lp_lb_overzicht_systemen_en_detecties_blusser == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_blusser.dicht\" failed.", e, state);
                    }
                    if (g) return 19; // lb_overzicht_systemen_en_detecties_blusser.open_drop_down_menu

                    return 20; // lb_overzicht_systemen_en_detecties_blusser.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Blusser_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 278:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_haspel.lp_lb_overzicht_systemen_en_detecties_haspel == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_haspel.dicht\" failed.", e, state);
                    }
                    if (g) return 37; // lb_overzicht_systemen_en_detecties_haspel.open_drop_down_menu

                    return 38; // lb_overzicht_systemen_en_detecties_haspel.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Haspel_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 279:
                try {
                    try {
                        g = state.s_lb_overzicht_systemen_en_detecties_noodtelefoon.lp_lb_overzicht_systemen_en_detecties_noodtelefoon == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"lb_overzicht_systemen_en_detecties_noodtelefoon.dicht\" failed.", e, state);
                    }
                    if (g) return 41; // lb_overzicht_systemen_en_detecties_noodtelefoon.open_drop_down_menu

                    return 42; // lb_overzicht_systemen_en_detecties_noodtelefoon.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blokken_overzicht_systemen_en_detecties_Noodtelefoon_linker_buis\" failed.", getSvgRelPath()), e, state);
                }

            case 280:
                try {
                    try {
                        g = state.s_openen_en_sluiten_bevestigde_meldingen.lp_openen_en_sluiten_bevestigde_meldingen == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"openen_en_sluiten_bevestigde_meldingen.open\" failed.", e, state);
                    }
                    if (g) return 84; // openen_en_sluiten_bevestigde_meldingen.sluit_drop_down_menu

                    return 14; // click_tab_verkeer
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"tab_detailplattegrond_inactief\" failed.", getSvgRelPath()), e, state);
                }

            case 281:
                return 12; // click_tab_meldingen

            case 282:
                try {
                    try {
                        g = state.s_geselecteerde_tab_verkeer_meldingen.lp_geselecteerde_tab_verkeer_meldingen == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"geselecteerde_tab_verkeer_meldingen.verkeer_tab_geselecteerd\" failed.", e, state);
                    }
                    if (g) return 12; // click_tab_meldingen

                    return 83; // openen_en_sluiten_bevestigde_meldingen.open_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"knoppen_meldingen_normaal_melding_scherm_open_klappen\" failed.", getSvgRelPath()), e, state);
                }

            case 283:
                return 84; // openen_en_sluiten_bevestigde_meldingen.sluit_drop_down_menu

            case 284:
                try {
                    try {
                        g = state.s_melding_sos_rechterbuis_geselecteerd.lp_melding_sos_rechterbuis_geselecteerd == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"melding_sos_rechterbuis_geselecteerd.dicht\" failed.", e, state);
                    }
                    if (g) return 81; // melding_sos_rechterbuis_geselecteerd.open_drop_down_menu

                    return 82; // melding_sos_rechterbuis_geselecteerd.sluit_drop_down_menu
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"blok_meldingen_sos_rechter_buis_onbevestigd\" failed.", getSvgRelPath()), e, state);
                }

            case 285:
                return 9; // bevestigde_melding_sos_rechterbuis.open_drop_down_menu

            case 286:
                return 10; // bevestigde_melding_sos_rechterbuis.sluit_drop_down_menu

            case 287:
                return 4; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie5

            case 288:
                return 452; // Tunnel_Verkeersbuis1_KnopCamera4_Knop_u_indrukken

            case 289:
                try {
                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 0;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie1\" failed.", e, state);
                    }
                    if (g) return 1; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie2

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 1;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie2\" failed.", e, state);
                    }
                    if (g) return 2; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie3

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie3\" failed.", e, state);
                    }
                    if (g) return 3; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie4

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie4\" failed.", e, state);
                    }
                    if (g) return 4; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie5

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie5\" failed.", e, state);
                    }
                    if (g) return 5; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie6

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie6\" failed.", e, state);
                    }
                    if (g) return 6; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie7

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie7\" failed.", e, state);
                    }
                    if (g) return 7; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie8

                    return 8; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie9
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"detail_plattegrond_knop_rechts\" failed.", getSvgRelPath()), e, state);
                }

            case 290:
                try {
                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 8;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie9\" failed.", e, state);
                    }
                    if (g) return 7; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie8

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 7;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie8\" failed.", e, state);
                    }
                    if (g) return 6; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie7

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 6;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie7\" failed.", e, state);
                    }
                    if (g) return 5; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie6

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 5;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie6\" failed.", e, state);
                    }
                    if (g) return 4; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie5

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 4;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie5\" failed.", e, state);
                    }
                    if (g) return 3; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie4

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 3;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie4\" failed.", e, state);
                    }
                    if (g) return 2; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie3

                    try {
                        g = state.s_besturing_selectie_tunneldeel_detailplattegrond.lp_besturing_selectie_tunneldeel_detailplattegrond == 2;
                    } catch (CifSimulatorException e) {
                        throw new CifSimulatorException("Evaluation of guard value \"besturing_selectie_tunneldeel_detailplattegrond.sectie3\" failed.", e, state);
                    }
                    if (g) return 1; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie2

                    return 0; // besturing_selectie_tunneldeel_detailplattegrond.select_sectie1
                } catch (CifSimulatorException e) {
                    throw new CifSimulatorException(fmt("Evaluation of the SVG input mapping (\"%s\") for the SVG element with id \"detail_plattegrond_knop_links\" failed.", getSvgRelPath()), e, state);
                }

            default:
                throw new RuntimeException("Unknown input mapping idx: " + idx);
        }
    }
}
